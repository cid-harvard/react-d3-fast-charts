{"version":3,"sources":["../../dist/download~bjCODHXh.svg","../../dist/data~tHUHAyCj.svg","styling/Grid.ts","styling/styleUtils.ts","styling/GlobalStyles.tsx","../../src/dataViz/scatterPlot.ts","../../src/dataViz/barChart.ts","../../src/dataViz/Utils.ts","../../src/dataViz/lineChart.ts","../../src/dataViz/downloadImage.ts","../../src/index.tsx","../../src/dataViz/ColorScaleLegend.tsx","../../src/dataViz/HorizontalLegend.tsx","../../src/dataViz/HowToReadDots.tsx","../../src/dataViz/Legend.tsx","../../src/dataViz/radarChart.ts","../../src/dataViz/geoMap.ts","../../src/dataViz/clusterBarChart.ts","../../src/dataViz/treeMap.ts","../../src/dataViz/stackChart.ts","../../src/dataViz/clusterChart.ts","../../src/dataViz/boxAndWhiskers.ts","pages/index.tsx","components/StickySideNav.tsx","pages/ScatterPlot.tsx","pages/BarChart.tsx","pages/ClusterBarChart.tsx","pages/RadarChart.tsx","pages/GeoMap.tsx","pages/LineChart.tsx","pages/TreeMap.tsx","pages/StackChart.tsx","pages/ClusterChart.tsx","pages/BoxAndWhiskersChart.tsx","pages/Error.tsx","pages/ColorScaleLegend.tsx","pages/HorizontalLegend.tsx","pages/HowToReadDots.tsx","pages/Legend.tsx","App.tsx","index.tsx"],"names":["module","exports","gridLines","Root","styled","div","Content","header","contentMaxWidth","main","FullWidthContentContainer","NavContainer","nav","secondaryFont","footer","TwoColumnSectionBase","span","h1","h4","legendColor","label","columnDefs","TwoColumnSection","SectionHeaderBase","h3","SectionHeader","Code","color","h5","p","ol","pre","CenteredCode","h2","cite","GlobalStyles","createGlobalStyle","ranges","divider","suffix","formatNumber","n","range","parseFloat","adaptLabelFontSize","d","labelAvailableWidth","labelWidth","this","LabelPlacement","LabelAnchor","LabelPosition","AnimationDirection","FileFormat","LabelContainer","ColorScaleBar","minColor","maxColor","ColorScaleBarCustom","Legend","props","rootStyles","gradientBar","style","background","gradientString","React","LegendItem","LegendBlock","Label","labelStyles","legendItems","legendList","stroke","key","title","itemStyles","backgroundColor","borderColor","ListContainer","ListItem","HighlightedItem","lighten","HowToReadDots","highlighted","items","highlightedItem","SizingElm","Tooltip","DownloadButtonsContainer","downloadButtonStyles","darken","DownloadImageButton","DownloadDataButton","SvgIcon","ErrorMessage","Caption","VizType","triggerGoogleAnalyticsEvent","sizingNodeRef","useRef","svgNodeRef","tooltipNodeRef","useState","window","useEffect","updateWindowWidth","debounce","setWindowWidth","svgNode","sizingNode","svg","select","tooltip","input","labelFont","margin","width","size","height","container","allXValues","data","x","allYValues","y","rawMinX","axisMinMax","d3","rawMaxX","rawMinY","rawMaxY","minScaleBuffer","maxScaleBuffer","minX","Math","maxX","minY","maxY","xScale","yScale","makeGridlinesX","makeGridlinesY","averageLineText","appendQuadrantLabel","xVal","text","i","quadrantLabels","textParts","radius","fill","onClick","tooltipContentOnly","tooltipContent","content","axisLabels","createScatterPlot","clientHeight","showAverageLines","datum","hideAxis","averageLines","line","createBarChart","config","factor","factorLegend","levels","maxValue","radians","opacityArea","ToRight","TranslateX","TranslateY","ExtraWidthX","ExtraWidthY","options","Object","allAxis","total","j","levelFactor","series","axis","dataValues","value","point","shape","labels","res","originalI","parseInt","createRadarChart","scaleOrdinal","center","scale","offset","projection","path","bounds","hscale","vscale","allValues","node","rawMinValue","rawMaxValue","minValue","colorScale","createGeoMap","g","yMax","yMaxDomain","x1","groups","groupName","valueName","yTick","createClusterBarChart","valueline","coord","labelColor","labelDataIndex","targetCood","coords","animateAxis","paths","adjustedCoords","shortenedLine","shortPath","document","multiplier","formatX","formatAxis","formatY","xDomain","yDomain","startMaxY","startX","startY","startMinX","startMinY","tickCount","showGridLines","animationStartIndex","animationDirection","axisDelay","animationDuration","creatLineChart","treemap","root","b","a","cell","t","rect","parentElement","querySelector","rectWidth","rectHeight","words","word","lineNumber","dy","tspan","x0","createTreeMap","keys","stackedData","brush","extent","areaChart","idleTimeout","setTimeout","idled","xAxis","area","groupConfig","group","createStackChart","enableBrushZoom","srcData","id","parentId","sizeScale","layout","circleSpacing","stratData","nodes","name","max","createClusterChart","hideLabels","sumstat","q1","median","q3","interQuantileRange","min","allCategories","allMinMaxValues","boxWidth","category","createBoxAndWhiskersChart","windowWidth","handleDownloadImage","fileFormat","canvas","img","svgStr","serializer","canvasContext","url","downloadImage","downloadPNGButton","enablePNGDownload","src","DownloadSVGURL","alt","downloadSVGButton","enableSVGDownload","jsonToDownload","filename","downloadDataButton","DataSVGURL","downloadButtons","marginTop","undefined","caption","ref","List","ul","li","to","ScatterPlot","BarChart","ClusterBarChart","RadarChart","GeoMap","LineChart","TreeMap","StackChart","ClusterChart","BoxAndWhiskersChart","Error","Ul","Link","StickySideNav","links","hoverColor","colorTheme","navLinks","map","target","href","vizType","bottom","left","start","end","worldMap","JSON","parse","featuresWithValues","features","feature","percent","random","properties","toFixed","labelPosition","Top","labelAnchor","Middle","Center","Left","toString","primaryKey","year","rest_of_the_world","mexico","netherlands","belgium","canada","ireland","germany","united_kingdom","italy","poland","dominican_republic","plotPoint","primaryPoint","message","minLabel","maxLabel","maxWidth","navItems","App","exact","component","ErrorViz","ColorScaleLegend","HorizontalLegend","Landing","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4624fa7f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/download~bjCODHXh.02e9c647.svg\";","module.exports = __webpack_public_path__ + \"static/media/data~tHUHAyCj.0ed67368.svg\";","import styled from 'styled-components/macro';\n\nconst gridLines = {\n  // Horizontal Grid Lines\n  pageTop: 'countryToolsGlobalGridPageTop',\n  bannerTop: 'countryToolsGlobalGridBannerTop',\n  bannerBottom: 'countryToolsGlobalGridBannerBottom',\n  headerTop: 'countryToolsGlobalGridHeaderTop',\n  headerBottom: 'countryToolsGlobalGridHeaderBottom',\n  mobileMenuTop: 'countryToolsGlobalGridMobileMenuTop',\n  mobileMenuBottom: 'countryToolsGlobalGridMobileMenuBottom',\n  contentTop: 'countryToolsGlobalGridContentTop',\n  contentBottom: 'countryToolsGlobalGridContentBottom',\n  footerTop: 'countryToolsGlobalGridFooterTop',\n  footerBottom: 'countryToolsGlobalGridFooterBottom',\n  pageBottom: 'countryToolsGlobalGridPageBottom',\n  // Vertical Grid Lines\n  pageLeft: 'countryToolsGlobalGridPageLeft',\n  pageMarginLeft: 'countryToolsPageMarginLeft',\n  contentStart: 'countryToolsContentStart',\n  contentEnd: 'countryToolsContentEnd',\n  navStart: 'countryToolsNavStart',\n  navEnd: 'countryToolsNavEnd',\n  pageMarginRight: 'countryToolsPageMarginLeft',\n  pageRight: 'countryToolsGlobalGridPageRight',\n};\n\nexport const gridSmallMediaWidth = 700; // in px\n\nconst contentMaxWidth = 900; // in px\nconst navMaxWidth = 180; // in px\n\n\nexport const Root = styled.div`\n  display: grid;\n  min-height: 100vh;\n  grid-template-rows:\n    [${gridLines.pageTop} ${gridLines.bannerTop}] auto\n    [${gridLines.bannerBottom} ${gridLines.headerTop}] auto\n    [${gridLines.headerBottom} ${gridLines.mobileMenuTop}] auto\n    [${gridLines.mobileMenuBottom} ${gridLines.contentTop}] 1fr\n    [${gridLines.contentBottom} ${gridLines.footerTop}] auto\n    [${gridLines.footerBottom} ${gridLines.pageBottom}];\n\n  grid-template-columns:\n    [${gridLines.pageLeft} ${gridLines.pageMarginLeft}] minmax(1rem, 1fr)\n    [${gridLines.contentStart}] minmax(auto, ${contentMaxWidth}px)\n    [${gridLines.contentEnd} ${gridLines.navStart}]  minmax(auto, ${navMaxWidth}px)\n    [${gridLines.navEnd} ${gridLines.pageMarginRight}] minmax(1rem, 1fr)\n    [${gridLines.pageRight}];\n`;\n\nexport const FullWidthHeader = styled.header`\n  grid-row: ${gridLines.headerTop} / ${gridLines.headerBottom};\n  grid-column: ${gridLines.pageLeft} / ${gridLines.pageRight};\n`;\nexport const FullWidthHeaderContent = styled.div`\n  max-width: ${contentMaxWidth + navMaxWidth}px;\n  margin: 0 auto;\n`;\n\nexport const Header = styled.header`\n  grid-row: ${gridLines.headerTop} / ${gridLines.headerBottom};\n  grid-column: ${gridLines.contentStart} / ${gridLines.navEnd};\n`;\n\nexport const Content = styled.main`\n  grid-row: ${gridLines.contentTop} / ${gridLines.contentBottom};\n  grid-column: ${gridLines.contentStart} / ${gridLines.contentEnd};\n\n  @media (max-width: ${gridSmallMediaWidth}px) {\n    grid-column: ${gridLines.contentStart} / ${gridLines.navEnd};\n  }\n`;\n\nexport const ContentFull = styled.main`\n  grid-row: ${gridLines.contentTop} / ${gridLines.contentBottom};\n  grid-column: ${gridLines.contentStart} / ${gridLines.navEnd};\n`;\n\nexport const FullWidthContent = styled.main`\n  grid-row: ${gridLines.contentTop} / ${gridLines.contentBottom};\n  grid-column: ${gridLines.pageLeft} / ${gridLines.pageRight};\n`;\n\nexport const FullWidthContentContainer = styled.div`\n  max-width: ${contentMaxWidth + navMaxWidth}px;\n  margin: 0 auto;\n`;\n\nexport const NavContainer = styled.nav`\n  grid-row: ${gridLines.contentTop} / ${gridLines.contentBottom};\n  grid-column: ${gridLines.navStart} / ${gridLines.navEnd};\n  position: relative;\n  z-index: 200;\n\n  @media (max-width: ${gridSmallMediaWidth}px) {\n    grid-row: ${gridLines.mobileMenuTop} / ${gridLines.mobileMenuBottom};\n    grid-column: ${gridLines.pageLeft} / ${gridLines.pageRight};\n    position: sticky;\n    top: 0;\n  }\n`;\n\nexport const FullWidthFooter = styled.footer`\n  grid-row: ${gridLines.footerTop} / ${gridLines.footerBottom};\n  grid-column: ${gridLines.pageLeft} / ${gridLines.pageRight};\n`;\nexport const FullWidthFooterContent = styled.footer`\n  max-width: ${contentMaxWidth + navMaxWidth}px;\n  margin: 0 auto;\n`;\n\nexport const storyMobileWidth = 700; // in px\n\nexport const StoriesGrid = styled(FullWidthContentContainer)`\n  display: grid;\n  grid-template-columns: 8fr 5fr;\n  column-gap: 2rem;\n  position: relative;\n\n  @media (max-width: ${storyMobileWidth}px) {\n    grid-template-columns: 1fr;\n  }\n`;\n","import styled from 'styled-components/macro';\nimport {storyMobileWidth} from './Grid';\n\nexport const baseColor = '#333333'; // dark gray/black color for text\nexport const lightBaseColor = '#7c7c7c'; // light gray color for subtitles and contextual information\nexport const lightBorderColor = '#dcdcdc'; // really light gray color for subtle borders between elements\n\nexport const tertiaryColor = '#f3f3f3'; // really light gray color for use as a hover background color on cards\n\nexport const primaryFont = \"'Source Sans Pro', sans-serif\";\nexport const secondaryFont = \"'OfficeCodeProWeb', monospace\";\n\nexport const semiBoldFontBoldWeight = 600;\nexport const boldFontWeight = 700;\n\nexport const Light = styled.span`\n  color: ${lightBaseColor};\n`;\n\nexport const StandardH1 = styled.h1`\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-size: 2.2rem;\n  font-weight: 400;\n`;\n\ninterface HeaderWithLegendProps {\n  legendColor: string;\n}\n\nexport const HeaderWithLegend = styled.h4<HeaderWithLegendProps>`\n  margin-top: 0;\n  display: flex;\n  align-items: center;\n  font-weight: 400;\n  font-size: 1.1rem;\n\n  &:before {\n    content: '';\n    display: inline-block;\n    width: 1.5rem;\n    height: 1.5rem;\n    background-color: ${({legendColor}) => legendColor};\n    margin-right: 0.5rem;\n  }\n`;\n\nexport const labelMarginBottom = 0.3; // in rem\n\nexport const Label = styled.label`\n  font-family: ${secondaryFont};\n  margin-bottom: ${labelMarginBottom}rem;\n  display: block;\n`;\n\ninterface TwoColumnSectionProps {\n  columnDefs?: string;\n}\n\nexport const TwoColumnSectionBase = styled.div<TwoColumnSectionProps>`\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-template-columns: ${({columnDefs}) => columnDefs ? columnDefs : '1fr 1fr'};\n`;\n\nexport const TwoColumnSection = styled(TwoColumnSectionBase)`\n  margin-bottom: 2rem;\n\n  @media (max-width: 850px) {\n    grid-template-columns: auto;\n    grid-template-rows: auto auto auto;\n  }\n`;\nexport const InlineTwoColumnSection = styled(TwoColumnSectionBase)`\n  @media (max-width: 850px) {\n    padding: 1rem;\n  }\n\n  @media (max-width: 500px) {\n    grid-template-columns: auto;\n    grid-template-rows: auto auto auto;\n  }\n`;\n\nconst SectionHeaderBase = styled.h3`\n  grid-row: 1;\n  grid-column: 1 / -1;\n  font-family: ${secondaryFont};\n  color: ${baseColor};\n  letter-spacing: 1px;\n`;\n\nexport const SectionHeader = styled(SectionHeaderBase)`\n  display: flex;\n  align-items: center;\n  font-size: 1.4rem;\n  text-transform: uppercase;\n  font-weight: 400;\n\n  &:after {\n    content: '';\n    display: block;\n    height: 0;\n    border-top: 2px solid ${lightBorderColor};\n    flex-grow: 1;\n    margin-left: 1.25rem;\n  }\n`;\n\ninterface TitleColorProps {\n  color?: string;\n}\n\nexport const SectionHeaderSecondary = styled(SectionHeaderBase)<TitleColorProps>`\n  font-size: 1.2rem;\n  text-transform: uppercase;\n  font-weight: 600;\n  color: ${({color}) => color ? color : baseColor};\n`;\n\nexport const SubSectionHeader = styled.h4<TitleColorProps>`\n  margin-top: 0;\n  font-weight: 600;\n  text-transform: uppercase;\n  font-size: 1.2rem;\n  letter-spacing: 1px;\n  font-family: ${secondaryFont};\n  color: ${({color}) => color ? color : baseColor};\n`;\n\nexport const ParagraphHeader = styled.h5<TitleColorProps>`\n  font-family: ${secondaryFont};\n  letter-spacing: 1px;\n  display: flex;\n  align-items: center;\n  margin: 0 0 0.5rem;\n  color: ${({color}) => color ? color : baseColor};\n\n  &:after {\n    content: '';\n    display: block;\n    height: 0;\n    border-top: 2px solid ${lightBorderColor};\n    flex-grow: 1;\n    margin-left: 1rem;\n  }\n`;\n\nexport const NarrowPaddedColumn = styled.div`\n  padding: 0 0.5rem;\n`;\n\nexport const LargeParagraph = styled.p`\n  font-size: 1.2rem;\n  margin-bottom: 2rem;\n`;\n\nexport const SmallParagraph = styled.p`\n  font-size: 0.8rem;\n`;\n\nexport const SmallOrderedList = styled.ol`\n  li {\n    font-size: 0.8rem;\n  }\n`;\n\nexport const Card = styled.div`\n  padding: 0.7rem;\n  border: solid 1px ${lightBorderColor};\n  box-shadow: 0px 0px 3px -1px #b5b5b5;\n  margin-bottom: 2rem;\n  background-color: #fff;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${tertiaryColor};\n  }\n`;\n\nexport const Code = styled.pre`\n  background-color: ${tertiaryColor};\n  color: #444;\n  padding: 1rem;\n  box-sizing: border-box;\n  margin: 1rem 1rem;\n`;\n\nexport const CenteredCode = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const FullWidth = styled.div`\n  grid-column: 1 / -1;\n`;\n\nexport const CoverPhoto = styled.div`\n  grid-column: 1 / -1;\n  height: 40vh;\n  background-color: ${tertiaryColor};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const StoryTitle = styled.h1`\n  text-align: center;\n  margin: 2rem 0 1.5rem;\n  font-size: 2.5rem;\n  margin-top: 2rem;\n  letter-spacing: 1px;\n  text-align: center;\n`;\n\nexport const StoryHeading = styled.h2`\n  grid-column: 1 / -1;\n  font-weight: 600;\n  font-size: 1.75rem;\n  text-align: center;\n`;\n\nexport const Authors = styled.div`\n  font-family: ${secondaryFont};\n  letter-spacing: -0.8px;\n  font-size: 1rem;\n  color: #666;\n  text-align: center;\n  font-weight: 400;\n  margin-bottom: 1.5rem;\n`;\n\n\nexport const StorySectionContainer = styled.div`\n  min-height: 50vh;\n  position: relative;\n  padding-bottom: 10vh;\n`;\n\nexport const StickyContainer = styled.div`\n  position: sticky;\n  top: 0;\n  min-height: 80vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  @media (max-width: ${storyMobileWidth}px) {\n    position: relative;\n    z-index: 10;\n  }\n`;\n\nexport const VizSource = styled.cite`\n  text-align: center;\n  display: block;\n  margin: 0.75rem 0 1rem;\n  font-size: 0.7rem;\n`;\n\nexport const VizSourceCompact = styled.cite`\n  text-align: center;\n  display: block;\n  margin: 0.5rem 0 0.25rem;\n  font-size: 0.7rem;\n`;\n","import { createGlobalStyle } from 'styled-components/macro';\nimport {\n  baseColor,\n  lightBaseColor,\n  semiBoldFontBoldWeight,\n  primaryFont,\n} from './styleUtils';\n\nconst GlobalStyles = createGlobalStyle`\n  @media(max-width: 600px) {\n    html {\n      font-size: 14px;\n    }\n  }\n  @media(max-width: 450px) {\n    html {\n      font-size: 12px;\n    }\n  }\n\n  body {\n    font-family: ${primaryFont};\n    color: ${baseColor};\n    margin: 0;\n    padding: 0;\n  }\n\n  h1 {\n    font-weight: ${semiBoldFontBoldWeight};\n    font-size: 1.7rem;\n  }\n\n  h3 {\n    font-weight: ${semiBoldFontBoldWeight};\n    font-size: 1.1rem;\n    color: ${lightBaseColor};\n  }\n\n  p {\n    line-height: 1.5;\n    margin: 0 0 1rem;\n  }\n\n  button {\n    cursor: pointer;\n    border: none;\n    width: auto;\n    text-align: inherit;\n    overflow: visible;\n\n    /* Normalize 'line-height'. Cannot be changed from 'normal' in Firefox 4+. */\n    line-height: normal;\n\n    /* Corrects font smoothing for webkit */\n    -webkit-font-smoothing: inherit;\n    -moz-osx-font-smoothing: inherit;\n\n    /* Corrects inability to style clickable 'input' types in iOS */\n    -webkit-appearance: none;\n\n    /* Remove excess padding and border in Firefox 4+ */\n    &::-moz-focus-inner {\n        border: 0;\n        padding: 0;\n    }\n  }\n\n  ol {\n    padding-left: 1rem;\n\n    li {\n      margin-bottom: 0.6rem;\n      font-size: 0.9rem;\n    }\n  }\n`;\n\nexport default GlobalStyles;\n","import * as d3 from 'd3';\n\nexport interface Datum {\n  label: string;\n  x: number;\n  y: number;\n  fill?: string;\n  radius?: number;\n  tooltipContent?: string;\n  tooltipContentOnly?: boolean;\n  onClick?: () => void;\n  highlighted?: boolean;\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[];\n  size: Dimensions;\n  axisLabels?: {left?: string, bottom?: string};\n  axisMinMax?: {\n    minX?: number,\n    maxX?: number,\n    minY?: number,\n    maxY?: number,\n  };\n  showAverageLines?: boolean;\n  averageLineText?: {left?: string, bottom?: string};\n  quadrantLabels?: {I?: string, II?: string, III?: string, IV?: string};\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const {\n    svg, tooltip, data, size, axisLabels, axisMinMax, showAverageLines,\n    averageLineText, quadrantLabels, labelFont,\n  } = input;\n\n  const margin = {top: 30, right: 30, bottom: 60, left: 60};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  // append the svg object to the body of the page\n  svg\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom);\n\n  const container = svg\n    .append('g')\n      .attr('transform',\n            'translate(' + margin.left + ',' + margin.top + ')');\n\n  const allXValues = data.map(({x}) => x);\n  const allYValues = data.map(({y}) => y);\n\n  const rawMinX = axisMinMax && axisMinMax.minX !== undefined ? axisMinMax.minX : d3.min(allXValues);\n  const rawMaxX = axisMinMax && axisMinMax.maxX !== undefined ? axisMinMax.maxX : d3.max(allXValues);\n  const rawMinY = axisMinMax && axisMinMax.minY !== undefined ? axisMinMax.minY : d3.min(allYValues);\n  const rawMaxY = axisMinMax && axisMinMax.maxY !== undefined ? axisMinMax.maxY : d3.max(allYValues);\n\n  const minScaleBuffer = axisMinMax ? 1 : 0.9;\n  const maxScaleBuffer = axisMinMax ? 1 : 1.1;\n\n  const minX = rawMinX ? Math.floor(rawMinX * minScaleBuffer) : 0;\n  const maxX = rawMaxX ? Math.ceil(rawMaxX * maxScaleBuffer) : 0;\n  const minY = rawMinY ? Math.floor(rawMinY * minScaleBuffer) : 0;\n  const maxY = rawMaxY ? Math.ceil(rawMaxY * maxScaleBuffer) : 0;\n\n\n\n  // Add X axis\n  const xScale = d3.scaleLinear()\n    .domain([minX, maxX])\n    .range([ 0, width ]);\n\n  container.append('g')\n    .attr('transform', 'translate(0,' + height + ')')\n    .call(d3.axisBottom(xScale));\n\n  // Add Y axis\n  const yScale = d3.scaleLinear()\n    .domain([minY, maxY])\n    .range([ height, 0]);\n  container.append('g')\n    .call(d3.axisLeft(yScale));\n\n  // gridlines in x axis function\n  const makeGridlinesX: any = () => d3.axisBottom(xScale).ticks(10);\n\n  // gridlines in y axis function\n  const makeGridlinesY: any = () => d3.axisLeft(yScale).ticks(10);\n\n  // add the X gridlines\n  container.append('g')\n      .attr('class', 'grid')\n      .attr('transform', 'translate(0,' + height + ')')\n      .style('opacity', '0.25')\n      .style('stroke-dasharray', '3 1')\n      .call(makeGridlinesX()\n          .tickSize(-height)\n          .tickFormat(''),\n      );\n\n  // add the Y gridlines\n  container.append('g')\n      .attr('class', 'grid')\n      .style('opacity', '0.25')\n      .style('stroke-dasharray', '3 1')\n      .call(makeGridlinesY()\n          .tickSize(-width)\n          .tickFormat(''),\n      );\n\n  if (showAverageLines) {\n    container.append('line')\n      .attr('x1',xScale(minX))\n      .attr('x2',xScale(maxX))\n      .attr('y1',yScale(maxY / 2) + 0.5)\n      .attr('y2',yScale(maxY / 2) + 0.5)\n      .attr('stroke-width', '1px')\n      .style('pointer-events', 'none')\n      .attr('stroke', '#9e9e9e');\n    container.append('line')\n      .attr('x1',xScale(maxX / 2) + 0.5)\n      .attr('x2',xScale(maxX / 2) + 0.5)\n      .attr('y1',yScale(minY))\n      .attr('y2',yScale(maxY))\n      .attr('stroke-width', '1px')\n      .style('pointer-events', 'none')\n      .attr('stroke', '#9e9e9e');\n  }\n\n  if (averageLineText) {\n    if (averageLineText.left) {\n      container.append('text')\n        .attr('x',xScale(minX) + 4)\n        .attr('y',yScale(maxY / 2) + 12)\n        .style('opacity', 0.8)\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .style('font-size', '12px')\n        .style('pointer-events', 'none')\n        .text(averageLineText.left);\n    }\n    if (averageLineText.bottom) {\n      container.append('text')\n        .attr('x',xScale(maxX / 2) + 4)\n        .attr('y',yScale(minY) - 6)\n        .style('opacity', 0.8)\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .style('font-size', '12px')\n        .style('pointer-events', 'none')\n        .text(averageLineText.bottom);\n\n    }\n  }\n\n  const appendQuadrantLabel = (xVal: number, yVal: number, textParts: string[], textAnchor: string) => {\n    const label = container.append('text')\n        .style('text-anchor', textAnchor)\n        .style('opacity', 0.8)\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .style('font-size', '12px')\n        .style('pointer-events', 'none')\n        .style('dominant-baseline', 'bottom')\n        .attr('x', xVal)\n        .attr('y', yVal);\n\n      label.selectAll('tspan')\n        .data(textParts)\n        .enter()\n        .append('tspan')\n        .text(d => {\n          const text = d;\n          return text !== undefined ? text : '';\n        })\n        .attr('x', xVal)\n        .attr('dx', 0)\n        .attr('dy', (_d, i) => i !== 0 ? 15 : 0);\n\n  };\n\n  if (quadrantLabels !== undefined) {\n    if (quadrantLabels.I !== undefined) {\n      const xVal = width - 4;\n      const yVal = yScale(maxY) + 12;\n      const textParts = (quadrantLabels.I as string).split('\\n');\n      appendQuadrantLabel(xVal, yVal, textParts, 'end');\n    }\n    if (quadrantLabels.II !== undefined) {\n      const xVal = xScale(minX) + 4;\n      const yVal = yScale(maxY) + 12;\n      const textParts = (quadrantLabels.II as string).split('\\n');\n      appendQuadrantLabel(xVal, yVal, textParts, 'start');\n    }\n    if (quadrantLabels.III !== undefined) {\n      const textParts = (quadrantLabels.III as string).split('\\n');\n      const xVal = xScale(minX) + 4;\n      const yVal = yScale(minY) - ((textParts.length - 1) * 15) - 6;\n      appendQuadrantLabel(xVal, yVal, textParts, 'start');\n    }\n    if (quadrantLabels.IV !== undefined) {\n      const textParts = (quadrantLabels.IV as string).split('\\n');\n      const xVal = width - 4;\n      const yVal = yScale(minY) - ((textParts.length - 1) * 15) - 6;\n      appendQuadrantLabel(xVal, yVal, textParts, 'end');\n    }\n  }\n\n  // Add dots\n  container.append('g')\n    .selectAll('dot')\n    .data(data)\n    .enter()\n    .append('circle')\n      .attr('cx', ({x}) => xScale(x))\n      .attr('cy', ({y}) => yScale(y))\n      .attr('r', ({radius}) => radius ? radius : 4)\n      .style('fill', ({fill}) => fill ? fill : '#69b3a2')\n      .style('cursor', ({onClick}) => onClick ? 'pointer' : 'default')\n      .on('mousemove', ({label, tooltipContent, tooltipContentOnly}) => {\n        if (tooltipContentOnly && tooltipContent && tooltipContent.length) {\n          tooltip.html(tooltipContent);\n        } else {\n          const content = tooltipContent === undefined || tooltipContent.length === 0\n            ? '' : `:<br />${tooltipContent}`;\n          tooltip.html(`<strong>${label}</strong>${content}`);\n\n        }\n        tooltip\n          .style('display', 'block')\n          .style('left', (d3.event.pageX + 4) + 'px')\n          .style('top', (d3.event.pageY - 4) + 'px');\n        })\n      .on('mouseout', () => {\n        tooltip\n            .style('display', 'none');\n      })\n      .on('click', ({onClick}) => onClick ? onClick() : undefined);\n\n  const highlighted = data.find(d => d.highlighted);\n  if (highlighted) {\n    // Add highlighted dot background\n    container.append('g')\n      .selectAll('dot')\n      .data([highlighted])\n      .enter()\n      .append('circle')\n        .attr('cx', ({x}) => xScale(x))\n        .attr('cy', ({y}) => yScale(y))\n        .attr('r', 16)\n        .style('fill', ({fill}) => fill ? fill : '#69b3a2')\n        .style('opacity', '0.4')\n        .style('pointer-events', 'none');\n    // Add highlighted dot over to top\n    container.append('g')\n      .selectAll('dot')\n      .data([highlighted])\n      .enter()\n      .append('circle')\n        .attr('cx', ({x}) => xScale(x))\n        .attr('cy', ({y}) => yScale(y))\n        .attr('r', ({radius}) => radius ? radius : 4)\n        .style('fill', ({fill}) => fill ? fill : '#69b3a2')\n        .style('cursor', ({onClick}) => onClick ? 'pointer' : 'default')\n        .on('mousemove', ({label, tooltipContent, tooltipContentOnly}) => {\n          if (tooltipContentOnly && tooltipContent && tooltipContent.length) {\n            tooltip.html(tooltipContent);\n          } else {\n            const content = tooltipContent === undefined || tooltipContent.length === 0\n              ? '' : `:<br />${tooltipContent}`;\n            tooltip.html(`<strong>${label}</strong>${content}`);\n\n          }\n          tooltip\n            .style('display', 'block')\n            .style('left', (d3.event.pageX + 4) + 'px')\n            .style('top', (d3.event.pageY - 4) + 'px');\n          })\n        .on('mouseout', () => {\n          tooltip\n              .style('display', 'none');\n        });\n  }\n\n\n  // append X axis label\n  svg\n    .append('text')\n    .attr('transform', `translate(${width / 2 + margin.left}, ${height + margin.bottom + (margin.top / 2)})`)\n      .style('text-anchor', 'middle')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .text(axisLabels && axisLabels.bottom ? axisLabels.bottom : '');\n\n  // append Y axis label\n  svg\n    .append('text')\n    .attr('transform', 'rotate(-90)')\n      .attr('y', margin.right / 2)\n      .attr('x', 0 - (height / 2 + margin.top))\n      .attr('dy', '0.75em')\n      .style('text-anchor', 'middle')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .text(axisLabels && axisLabels.left ? axisLabels.left : '');\n\n};\n","import * as d3 from 'd3';\nimport {formatNumber} from './Utils';\n\nexport interface Datum {\n  x: string;\n  y: number;\n  fill?: string;\n  stroke?: string;\n  tooltipContent?: string;\n  tooltipContentOnly?: boolean;\n  onClick?: () => void;\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\nexport enum LabelPlacement {\n  left = 'left',\n  right = 'right',\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[][];\n  size: Dimensions;\n  axisLabels?: {left?: string, bottom?: string};\n  axisMinMax?: {\n    minY?: number,\n    maxY?: number,\n  };\n  hideAxis?: {\n    left?: boolean;\n    bottom?: boolean;\n  };\n  averageLines?: {\n    value: number,\n    label?: string;\n    labelPlacement?: LabelPlacement;\n    strokeWidth?: number;\n    strokeDasharray?: number;\n    strokeColor?: string;\n  }[];\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const {\n    svg, data, size, axisLabels, tooltip, axisMinMax, hideAxis,\n    averageLines, labelFont,\n  } = input;\n\n  const margin = {\n    top: 30, right: 30,\n    bottom: axisLabels && axisLabels.bottom ? 60 : 30,\n    left: 35};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n    // set the ranges\n  const xScale = d3.scaleBand()\n            .range([0, width])\n            .padding(0.1);\n  const yScale = d3.scaleLinear()\n            .range([height, 0]);\n\n  // append the svg object to the body of the page\n  // append a 'group' element to 'svg'\n  // moves the 'group' element to the top left margin\n  svg\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom);\n\n  const container = svg\n    .append('g')\n      .attr('transform',\n            'translate(' + margin.left + ',' + margin.top + ')');\n  const allYValues: number[] = [];\n  data.forEach(datum => datum.forEach(({y}) => allYValues.push(y)));\n\n  const minScaleBuffer = 0.9;\n  const maxScaleBuffer = 1.1;\n\n  let minY: number;\n  let maxY: number;\n\n  if (axisMinMax !== undefined && axisMinMax.minY !== undefined) {\n    minY = axisMinMax.minY;\n  } else {\n    const rawMinY = d3.min(allYValues);\n    minY = rawMinY ? Math.floor(rawMinY * minScaleBuffer) : 0;\n  }\n\n  if (axisMinMax !== undefined && axisMinMax.maxY !== undefined) {\n    maxY = axisMinMax.maxY;\n  } else {\n    const rawMaxY = d3.max(allYValues);\n    maxY = rawMaxY ? Math.floor(rawMaxY * maxScaleBuffer) : 0;\n  }\n\n  // Scale the range of the data in the domains\n  xScale.domain(data && data.length ? data[0].map(function(d) { return d.x; }) : [])\n        .rangeRound([0, width])\n        .paddingInner(0.2);\n  yScale.domain([minY, maxY]);\n\n  // append the rectangles for the bar chart\n  data.forEach((dataset, i) => {\n    container.selectAll('.bar-' + i)\n        .data(dataset)\n      .enter().append('rect')\n        .attr('class', 'bar')\n        .attr('x', function(d) {\n          const xVal = xScale(d.x);\n          return xVal ? xVal : 0;\n        })\n        .attr('width', xScale.bandwidth())\n        .attr('y', function(d) { return yScale(d.y); })\n        .style('fill', ({fill}) => fill ? fill : '#69b3a2')\n        .style('stroke', ({stroke}) => stroke ? stroke : 'none')\n        .style('stroke-width', 3)\n        .attr('height', function(d) { return height - yScale(d.y); })\n        .on('mousemove', ({x, tooltipContent, tooltipContentOnly}) => {\n          if (tooltipContentOnly && tooltipContent && tooltipContent.length) {\n            tooltip.html(tooltipContent);\n          } else {\n            const content = tooltipContent === undefined || tooltipContent.length === 0\n              ? '' : `:<br />${tooltipContent}`;\n            tooltip.html(`<strong>${x}</strong>${content}`);\n          }\n          tooltip\n            .style('display', 'block')\n            .style('position', 'fixed')\n            .style('left', d3.event.clientX + 'px')\n            .style('top', d3.event.clientY + 'px');\n          })\n        .on('mouseout', () => {\n          tooltip\n              .style('display', 'none');\n        });\n  });\n\n  // append X axis label\n  if (!(hideAxis && hideAxis.bottom)) {\n    // add the x Axis\n    container.append('g')\n        .attr('transform', 'translate(0,' + height + ')')\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .call(d3.axisBottom(xScale));\n    svg\n      .append('text')\n      .attr('transform', `translate(${width / 2 + margin.left}, ${height + margin.bottom + (margin.top / 2)})`)\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .style('font-size', '0.8rem')\n        .style('text-anchor', 'middle')\n        .text(axisLabels && axisLabels.bottom ? axisLabels.bottom : '');\n  }\n  if (!(hideAxis && hideAxis.left)) {\n      // add the y Axis\n    container.append('g')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .call(d3.axisLeft(yScale).tickFormat(formatNumber));\n    // append Y axis label\n    svg\n      .append('text')\n        .attr('y', margin.top / 2)\n        .attr('x', margin.right)\n        .attr('dy', '0.75em')\n        .style('font-size', '0.8rem')\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .text(axisLabels && axisLabels.left ? axisLabels.left : '');\n  }\n\n  if (averageLines && averageLines.length) {\n    averageLines.forEach(line => {\n      svg\n       .append('line')\n      .attr('x1',margin.left)\n      .attr('x2',size.width - margin.right)\n      .attr('y1', yScale(line.value) + 0.5)\n      .attr('y2', yScale(line.value) + 0.5)\n      .attr('stroke-width', line.strokeWidth ? line.strokeWidth : '1px')\n      .attr('stroke', line.strokeColor ? line.strokeColor : '#333')\n      .attr('stroke-dasharray', line.strokeDasharray ? line.strokeDasharray : 0)\n      .style('pointer-events', 'none');\n\n      if (line.label) {\n\n        svg.append('text')\n          .attr('x', line.labelPlacement === LabelPlacement.right ? size.width - margin.right : margin.left + 8)\n          .attr('y',yScale(line.value) - 4)\n          .style('text-anchor', line.labelPlacement === LabelPlacement.right ? 'end' : 'start')\n          .style('opacity', 0.8)\n          .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n          .style('font-size', '12px')\n          .style('pointer-events', 'none')\n          .text(line.label);\n      }\n    });\n  }\n\n};\n","export const baseColor = '#333333'; // dark gray/black color for text\nexport const secondaryFont = \"'OfficeCodeProWeb', monospace\";\nexport const tertiaryColor = '#f3f3f3'; // really light gray color for use as a hover background color on cards\n\nexport const defaultPaletteColors = [\n  '#003f5c',\n  '#2f4b7c',\n  '#665191',\n  '#a05195',\n  '#d45087',\n  '#f95d6a',\n  '#ff7c43',\n  '#ffa600',\n  '#ffa600',\n  '#c1ab00',\n  '#86a927',\n  '#4fa049',\n  '#019463',\n  '#008575',\n  '#00747a',\n  '#166273',\n];\n\nexport const defaultDivergentColors = [\n  '#00876c',\n  '#8cbcac',\n  '#f1f1f1',\n  '#ec9c9d',\n  '#d43d51',\n];\n\nexport const defaultCoolChloropleth = [\n  '#004c6d',\n  '#326988',\n  '#5487a5',\n  '#76a6c2',\n  '#98c7e0',\n  '#bbe8ff',\n];\n\nexport const defaultHotChloropleth = [\n  '#ff7b00',\n  '#fd9936',\n  '#fcb45e',\n  '#fbcc88',\n  '#fce2b4',\n  '#fff6e2',\n];\n\nconst ranges = [\n  { divider: 1e18 , suffix: 'E' },\n  { divider: 1e15 , suffix: 'P' },\n  { divider: 1e12 , suffix: 'T' },\n  { divider: 1e9 , suffix: 'B' },\n  { divider: 1e6 , suffix: 'M' },\n  { divider: 1e3 , suffix: 'k' },\n];\n\nexport const formatNumber = (n: number) => {\n  for (const range of ranges) {\n    if (n >= range.divider) {\n      return parseFloat((n / range.divider).toFixed(2)).toString() + range.suffix;\n    }\n  }\n  return n.toString();\n};\n\nexport function adaptLabelFontSize(d: any) {\n  // var xPadding, diameter, labelAvailableWidth, labelWidth;\n\n  const xPadding = 8;\n  const diameter = 2 * d.r;\n  const labelAvailableWidth = diameter - xPadding;\n\n  // @ts-ignore\n  const labelWidth = this.getComputedTextLength();\n\n  // There is enough space for the label so leave it as is.\n  if (labelWidth < labelAvailableWidth) {\n    return null;\n  }\n\n  /*\n   * The meaning of the ratio between labelAvailableWidth and labelWidth equaling 1 is that\n   * the label is taking up exactly its available space.\n   * With the result as `1em` the font remains the same.\n   *\n   * The meaning of the ratio between labelAvailableWidth and labelWidth equaling 0.5 is that\n   * the label is taking up twice its available space.\n   * With the result as `0.5em` the font will change to half its original size.\n   */\n  return (labelAvailableWidth / labelWidth) + 'em';\n}\n","import * as d3 from 'd3';\n\nexport interface Coords {\n  x: number;\n  y: number;\n}\n\nexport enum LabelAnchor {\n  Left = 'start',\n  Middle = 'middle',\n  Right = 'end',\n}\n\nexport enum LabelPosition {\n  Top = 'top',\n  Center = 'center',\n  Bottom = 'bottom',\n}\n\nexport enum AnimationDirection {\n  Forward = 'forward',\n  Backward = 'backward',\n}\n\nexport interface Datum {\n  coords: Coords[];\n  animationDuration?: number;\n  animationDirection?: AnimationDirection;\n  animationStartIndex?: number;\n  label?: string;\n  labelColor?: string;\n  showLabelLine?: boolean;\n  labelPosition?: LabelPosition;\n  labelAnchor?: LabelAnchor;\n  labelDataIndex?: number;\n  color?: string;\n  width?: number;\n  tooltipContent?: string;\n}\n\ninterface InternalDatum extends Datum {\n  totalLength?: number;\n  animationStartPercentAsDecimal?: number;\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\nconst ranges = [\n  { divider: 1e18 , suffix: 'E' },\n  { divider: 1e15 , suffix: 'P' },\n  { divider: 1e12 , suffix: 'T' },\n  { divider: 1e9 , suffix: 'B' },\n  { divider: 1e6 , suffix: 'M' },\n  { divider: 1e3 , suffix: 'k' },\n];\n\nconst formatNumber = (n: number) => {\n  for (const range of ranges) {\n    if (n >= range.divider) {\n      return (n / range.divider).toString() + range.suffix;\n    }\n  }\n  return n.toString();\n};\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[];\n  size: Dimensions;\n  axisLabels?: {left?: string, bottom?: string};\n  axisMinMax?: {\n    minX?: number,\n    maxX?: number,\n    minY?: number,\n    maxY?: number,\n  };\n  animateAxis?: {\n    animationDuration: number,\n    startMinX: number,\n    startMaxX: number,\n    startMinY: number,\n    startMaxY: number,\n    startLeftLabel?: string;\n    startBottomLabel?: string;\n  };\n  showGridLines?: {\n    xAxis?: boolean;\n    yAxis?: boolean;\n  };\n  formatAxis?: {\n    x?: (n: number) => string;\n    y?: (n: number) => string;\n  };\n  tickCount?: {\n    x?: number;\n    y?: number;\n  };\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const {\n    svg, size, axisLabels, tooltip, axisMinMax,\n    showGridLines, formatAxis, tickCount, animateAxis,\n    labelFont,\n  } = input;\n\n  const data: InternalDatum[] = input.data;\n\n  const margin = {top: 30, right: 30, bottom: 30, left: 35};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  // set the ranges\n  const x = d3.scaleLinear().range([0, width]);\n  const y = d3.scaleLinear().range([height, 0]);\n\n  // define the line\n  const valueline = d3.line()\n    .x(function(d: any) { return x(d.x); })\n    .y(function(d: any) { return y(d.y); });\n\n  // append the svg obgect to the body of the page\n  // appends a 'group' element to 'svg'\n  // moves the 'group' element to the top left margin\n  svg\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom);\n\n  const g = svg.append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n  const allXValues: number[] = [];\n  const allYValues: number[] = [];\n  data.forEach(line => line.coords.forEach((coord) => {\n    allXValues.push(coord.x);\n    allYValues.push(coord.y);\n  }));\n\n  const rawMinX = axisMinMax && axisMinMax.minX !== undefined ? axisMinMax.minX : d3.min(allXValues);\n  const rawMaxX = axisMinMax && axisMinMax.maxX !== undefined ? axisMinMax.maxX : d3.max(allXValues);\n  const rawMinY = axisMinMax && axisMinMax.minY !== undefined ? axisMinMax.minY : d3.min(allYValues);\n  const rawMaxY = axisMinMax && axisMinMax.maxY !== undefined ? axisMinMax.maxY : d3.max(allYValues);\n\n  const minX = rawMinX ? Math.floor(rawMinX) : 0;\n  const maxX = rawMaxX ? Math.ceil(rawMaxX) : 0;\n  const minY = rawMinY ? Math.floor(rawMinY) : 0;\n  const maxY = rawMaxY ? Math.ceil(rawMaxY) : 0;\n\n  // Scale the range of the data\n  x.domain([minX, maxX]);\n  y.domain([minY, maxY]);\n\n  g.selectAll('.label-lines')\n      .data(data)\n      .enter()\n        .append('line')\n        .attr('transform', 'translate(' + margin.left + ', 0)')\n        .style('stroke-dasharray', '3 1')\n        .attr('stroke', ({labelColor}) => labelColor ? labelColor : 'gray')\n        .attr('y1', ({coords, labelDataIndex}) => {\n          const targetCood = labelDataIndex && labelDataIndex < coords.length ? labelDataIndex : coords.length - 1;\n          return y(coords[targetCood].y);\n        })\n        .attr('x1', ({coords, labelDataIndex}) => {\n          const targetCood = labelDataIndex && labelDataIndex < coords.length ? labelDataIndex : coords.length - 1;\n          return x(coords[targetCood].x);\n        })\n        .attr('y2', height)\n        .attr('x2', ({coords, labelDataIndex}) => {\n          const targetCood = labelDataIndex && labelDataIndex < coords.length ? labelDataIndex : coords.length - 1;\n          return x(coords[targetCood].x);\n        })\n        .text(({label}) => label ? label : '')\n        .attr('opacity', '0')\n        .transition() // Call Transition Method\n        .delay(d => {\n          const axisDelay = animateAxis ? animateAxis.animationDuration : 0;\n          const lineDelay = d.animationDuration ? d.animationDuration : 0;\n          return axisDelay + lineDelay;\n        })\n        .duration(d => d.animationDuration ? d.animationDuration : 0 ) // Set Duration timing (ms)\n        .ease(d3.easeLinear) // Set Easing option\n        .attr('opacity', d => d.showLabelLine ? '1' : '0');\n\n  // Add the valueline path.\n  const paths = g.selectAll('.paths')\n      .data(data)\n      .enter()\n        .append('path')\n        .attr('class', 'line')\n        .attr('fill', 'none')\n        .attr('stroke', ({color}) => color ? color : 'gray')\n        .attr('stroke-width', (line) => line.width ? line.width : 1.5)\n        .attr('stroke-linejoin', 'round')\n        .attr('stroke-linecap', 'round')\n        .attr('d', d => valueline(d.coords as any as [[number, number]]))\n        .attr('transform', 'translate(' + margin.left + ', 0)')\n        .on('mousemove', ({tooltipContent}) => {\n          if (tooltipContent && tooltipContent.length) {\n            tooltip.html(tooltipContent);\n            tooltip\n              .style('display', 'block')\n              .style('left', (d3.event.pageX + 4) + 'px')\n              .style('top', (d3.event.pageY - 4) + 'px');\n          }\n        })\n        .on('mouseout', () => {\n          tooltip\n              .style('display', 'none');\n        });\n\n  // Set Properties of Dash Array and Dash Offset and initiate Transition\n  paths.each(function(d) {\n      d.totalLength = this.getTotalLength();\n      if (d.animationStartIndex !== undefined) {\n        const adjustedCoords = d.coords.filter((_c, i) => i <= (d.animationStartIndex as number));\n        const shortenedLine = valueline(adjustedCoords as any as [[number, number]]);\n        const shortPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        shortPath.setAttribute('d', shortenedLine ? shortenedLine : '');\n        d.animationStartPercentAsDecimal = 1 - (shortPath.getTotalLength() / d.totalLength);\n      }\n    })\n    .attr('stroke-dasharray', d => d.totalLength ? d.totalLength : 0)\n    .attr('stroke-dashoffset', d => {\n      const multiplier = d.animationStartPercentAsDecimal !== undefined ? d.animationStartPercentAsDecimal : 1;\n      return d.totalLength && d.animationDirection !== AnimationDirection.Backward ? d.totalLength * multiplier : 0;\n    })\n    .transition() // Call Transition Method\n    .delay(animateAxis ? animateAxis.animationDuration : 0)\n    .duration(d => d.animationDuration ? d.animationDuration : 0) // Set Duration timing (ms)\n    .ease(d3.easeLinear) // Set Easing option\n    .attr('stroke-dashoffset', d => {\n      const multiplier = d.animationStartPercentAsDecimal !== undefined ? d.animationStartPercentAsDecimal : 1;\n      return d.totalLength && d.animationDirection === AnimationDirection.Backward ? d.totalLength * multiplier : 0;\n    }); // Set final value of dash-offset for transition\n\n  // Add the labels\n  g.selectAll('.labels')\n      .data(data)\n      .enter()\n        .append('text')\n        .attr('transform', d => {\n          if (d.labelPosition === LabelPosition.Top) {\n            return `translate(${margin.left + 8} -8)`;\n          } else if (d.labelPosition === LabelPosition.Bottom) {\n            return `translate(${margin.left + 8} 12)`;\n          } else if (d.labelPosition === LabelPosition.Center) {\n            return `translate(${margin.left + 8} 2)`;\n          } else {\n            return `translate(${margin.left + 8} 2)`;\n          }\n        })\n        .attr('text-anchor', d => d.labelAnchor ? d.labelAnchor : LabelAnchor.Left)\n        .attr('class', 'line-label')\n        .attr('fill', ({labelColor}) => labelColor ? labelColor : 'gray')\n        .attr('font-size', '0.7rem')\n        .attr('y', ({coords, labelDataIndex}) => {\n          const targetCood = labelDataIndex && labelDataIndex < coords.length ? labelDataIndex : coords.length - 1;\n          return y(coords[targetCood].y);\n        })\n        .attr('x', ({coords, labelDataIndex}) => {\n          const targetCood = labelDataIndex && labelDataIndex < coords.length ? labelDataIndex : coords.length - 1;\n          return x(coords[targetCood].x);\n        })\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .text(({label}) => label ? label : '')\n        .attr('opacity', '0')\n        .transition() // Call Transition Method\n        .delay(d => {\n          const axisDelay = animateAxis ? animateAxis.animationDuration : 0;\n          const lineDelay = d.animationDuration ? d.animationDuration : 0;\n          return axisDelay + lineDelay;\n        }) // Set Delay timing (ms)\n        .duration(d => d.animationDuration ? d.animationDuration : 0 ) // Set Duration timing (ms)\n        .ease(d3.easeLinear) // Set Easing option\n        .attr('opacity', '1');\n\n  const formatX = formatAxis && formatAxis.x ? formatAxis.x : formatNumber;\n  const formatY = formatAxis && formatAxis.y ? formatAxis.y : formatNumber;\n  let xDomain = d3.axisBottom(x);\n  let yDomain = d3.axisLeft(y);\n  if (animateAxis !== undefined) {\n    const {\n      startMaxX, startMinX, startMinY, startMaxY,\n    } = animateAxis;\n    const startX = d3.scaleLinear().range([0, width]);\n    const startY = d3.scaleLinear().range([height, 0]);\n    // Scale the range of the data\n    startX.domain([startMinX, startMaxX]);\n    startY.domain([startMinY, startMaxY]);\n\n    xDomain = d3.axisBottom(startX);\n    yDomain = d3.axisLeft(startY);\n  }\n  // Add the x Axis\n  g.append('g')\n      .attr('class', 'myXaxis')\n      .attr('transform', 'translate(' + margin.left + ',' + height + ')')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .call(xDomain.tickFormat(formatX).ticks(tickCount && tickCount.x ? tickCount.x : 10));\n\n  // Add the y Axis\n  g.append('g')\n      .attr('class', 'myYaxis')\n      .attr('transform', 'translate(' + margin.left + ', 0)')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .call(yDomain.tickFormat(formatY).ticks(tickCount && tickCount.y ? tickCount.y : 10));\n\n  if (animateAxis !== undefined) {\n    (g.selectAll('.myYaxis')\n      .transition()\n      .duration(animateAxis.animationDuration) as any)\n      .call(d3.axisLeft(y).tickFormat(formatY).ticks(tickCount && tickCount.y ? tickCount.y : 10));\n\n    (g.selectAll('.myXaxis')\n      .transition()\n      .duration(animateAxis.animationDuration) as any)\n      .call(d3.axisBottom(x).tickFormat(formatX).ticks(tickCount && tickCount.x ? tickCount.x : 10));\n  }\n\n  // gridlines in x axis function\n  const makeGridlinesX: any = () => d3.axisBottom(x).ticks(tickCount && tickCount.x ? tickCount.x : 10);\n\n  // gridlines in y axis function\n  const makeGridlinesY: any = () => d3.axisLeft(y).ticks(tickCount && tickCount.y ? tickCount.y : 10);\n\n  // add the X gridlines\n  if (showGridLines && showGridLines.xAxis) {\n    g.append('g')\n      .attr('class', 'grid')\n      .attr('transform', 'translate(' + margin.left + ',' + height + ')')\n      .style('opacity', '0.25')\n      .style('stroke-dasharray', '3 1')\n      .call(makeGridlinesX()\n          .tickSize(-height)\n          .tickFormat(''),\n      );\n  }\n\n  // add the Y gridlines\n  if (showGridLines && showGridLines.yAxis) {\n    g.append('g')\n      .attr('class', 'grid')\n      .attr('transform', 'translate(' + margin.left + ', 0)')\n      .style('opacity', '0.25')\n      .style('stroke-dasharray', '3 1')\n      .call(makeGridlinesY()\n          .tickSize(-width)\n          .tickFormat(''),\n      );\n  }\n\n  // append X axis label\n  svg\n    .append('text')\n    .attr('transform', `translate(${width / 2 + margin.left}, ${height + margin.bottom + margin.top})`)\n      .style('text-anchor', 'middle')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .text(axisLabels && axisLabels.bottom ? axisLabels.bottom : '');\n\n  // append Y axis label\n  svg\n    .append('text')\n    .attr('transform', 'rotate(-90)')\n      .attr('y', 0)\n      .attr('x', 0 - (height / 2 + margin.top))\n      .attr('dy', '0.75em')\n      .style('text-anchor', 'middle')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .text(axisLabels && axisLabels.left ? axisLabels.left : '');\n\n  g.style('transform', 'scale(0.95) translateY(' + margin.top + 'px)')\n   .style('transform-origin', 'center');\n\n   // add the dots\n  data.forEach((datum) => {\n    const {\n      coords, color, label,\n      animationDuration, animationDirection, animationStartIndex,\n    } = datum;\n    if (animationDirection === AnimationDirection.Backward) {\n      coords.reverse();\n    }\n    const fill = color ? color : 'gray';\n    g.selectAll('.circles')\n        .data(coords)\n        .enter()\n          .append('circle')\n          .on('mousemove', (coord) => {\n              if (label && label.length) {\n                tooltip.html(`\n                  <div style=\"\n                    display: inline-block;\n                    background-color: ${fill};\n                    width: 12px;\n                    height: 12px;\n                    margin-right: 12px;\n                    flex-shrink: 0;\n                  \"></div>\n                  <div>\n                    <strong>${label}</strong>\n                    <br />\n                    ${coord.x}: ${parseFloat(coord.y.toFixed(2))}\n                  </div>\n                `);\n                tooltip\n                  .style('position', 'fixed')\n                  .style('left', d3.event.clientX + 'px')\n                  .style('top', d3.event.clientY + 'px')\n                  .style('display', 'flex')\n                  .style('align-items', 'center');\n              }\n            })\n            .on('mouseout', () => {\n              tooltip\n                  .style('display', 'none');\n            })\n          .attr('cx', (coord) => x(coord.x))\n          .attr('cy', (coord) => y(coord.y))\n          .attr('r', 4)\n          .style('fill', fill)\n          .style('stroke', 'transparent')\n          .style('stroke-width', 25)\n          .attr('transform', 'translate(' + margin.left + ', 0)')\n          .style('opacity', (_d, i) =>\n            animationDirection === AnimationDirection.Backward ||\n            (animationStartIndex !== undefined && i <= (animationStartIndex))\n              ? 1 : 0,\n          )\n          .transition() // Call Transition Method\n          .delay((_d, i) => {\n            const axisDelay = animateAxis ? animateAxis.animationDuration : 0;\n            if (animationDuration && i !== 0) {\n              return animationDuration * (i / coords.length) + axisDelay;\n            } else {\n              return axisDelay;\n            }\n          })\n          .duration(animationDuration ? 100 : 0) // Set Duration timing (ms)\n          .style('opacity', (_coord, i) => {\n            if (animationDirection === AnimationDirection.Backward) {\n              return animationStartIndex !== undefined && i >= (coords.length - 1) - animationStartIndex ? 1 : 0;\n            } else {\n              return 1;\n            }\n          });\n  });\n\n};\n\n","export enum FileFormat {\n  SVG = 'svg',\n  PNG = 'png',\n}\n\ninterface Input {\n  svg: Node | null;\n  width: number | undefined;\n  height: number | undefined;\n  title: string;\n  fileFormat?: FileFormat;\n}\n\nexport default (input: Input) => {\n  const {svg, title} = input;\n  const width = input.width ? input.width : 1500;\n  const height = input.height ? input.height : 1500;\n  const canvas = document.createElement('canvas');\n  if (canvas && svg) {\n    const img = new Image();\n    const serializer = new XMLSerializer();\n    const svgStr = serializer.serializeToString(svg);\n\n    img.src = 'data:image/svg+xml;base64,' + window.btoa(svgStr);\n    img.width = width;\n    img.height = height;\n\n    canvas.width = width;\n    canvas.height = height;\n    const canvasContext = canvas.getContext('2d');\n\n    let url = '';\n    img.onload = function() {\n      if (canvasContext) {\n        canvasContext.drawImage(img, 0, 0, width, height);\n      }\n      url = canvas.toDataURL('image/png');\n\n      const fileFormat = input.fileFormat !== undefined ? input.fileFormat : FileFormat.PNG;\n      const a = document.createElement('a');\n      if (fileFormat === FileFormat.SVG) {\n        a.href = img.src;\n      } else {\n        a.href = url;\n      }\n      a.download = title +'.' + fileFormat;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      document.body.removeChild(img);\n    };\n\n    document.body.appendChild(img);\n  }\n};","import { ExtendedFeature, scaleOrdinal, select } from 'd3';\nimport React, {useState, useEffect, useRef} from 'react';\nimport styled from 'styled-components/macro';\nimport createScatterPlot, {Datum as ScatterPlotDatum} from './dataViz/scatterPlot';\nimport createBarChart, {\n  Datum as BarChartDatum,\n  LabelPlacement,\n} from './dataViz/barChart';\nimport createClusterBarChart, {Datum as ClusterBarChartDatum} from './dataViz/clusterBarChart';\nimport createRadarChart, {\n  Datum as RadarChartDatum,\n  RadarChartOptions,\n  RadarChartConfig,\n} from './dataViz/radarChart';\nimport createGeoMap, {GeoJsonCustomProperties} from './dataViz/geoMap';\nimport creatLineChart, {\n  Datum as LineChartDatum,\n  Coords,\n  LabelAnchor,\n  LabelPosition,\n  AnimationDirection,\n} from './dataViz/lineChart';\nimport createTreeMap, {RootDatum, LeafDatum} from './dataViz/treeMap';\nimport createStackChart, {Datum as StackChartDatum, StackChartConfig} from './dataViz/stackChart';\nimport createClusterChart, {Datum as ClusterChartDatum} from './dataViz/clusterChart';\nimport createBoxAndWhiskersChart, {Datum as BoxAndWhiskersChartDatum} from './dataViz/boxAndWhiskers';\nimport {darken} from 'polished';\nimport downloadImage, { FileFormat } from './dataViz/downloadImage';\nimport { CSVLink } from 'react-csv';\nimport DownloadSVGURL from './dataViz/assets/download.svg';\nimport DataSVGURL from './dataViz/assets/data.svg';\nimport debounce from 'lodash/debounce';\nimport {\n  baseColor,\n  secondaryFont,\n  tertiaryColor,\n  defaultPaletteColors,\n  defaultDivergentColors,\n  defaultCoolChloropleth,\n  defaultHotChloropleth,\n  formatNumber,\n  adaptLabelFontSize,\n} from './dataViz/Utils';\nimport ColorScaleLegend from './dataViz/ColorScaleLegend';\nimport HorizontalLegend from './dataViz/HorizontalLegend';\nimport HowToReadDots from './dataViz/HowToReadDots';\nimport Legend from './dataViz/Legend';\n\nconst Root = styled.div`\n  width: 100%;\n  margin: auto;\n`;\n\nconst SizingElm = styled.div`\n  height: 450px;\n  width: 100%;\n\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst Tooltip = styled.div`\n  position: absolute;\n  text-align: left;\n  display: none;\n  padding: 8px 12px;\n  background: #fff;\n  border-radius: 4px;\n  color: #333;\n  pointer-events: none;\n  box-shadow: 0px 0px 3px -1px #b5b5b5;\n  border: solid 1px gray;\n  max-width: 300px;\n  transform: translateY(-100%);\n  z-index: 1000;\n`;\n\nconst DownloadButtonsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst downloadButtonStyles = `\n  background-color: #ecf0f2;\n  font-family: ${secondaryFont};\n  padding: 0.5rem 0.75rem;\n  font-size: 0.6875rem;\n  color: ${baseColor};\n  display: flex;\n  align-items: center;\n  margin: 0;\n\n  &:hover {\n    background-color: ${darken(0.04, '#ecf0f2')};\n  }\n`;\n\nconst DownloadImageButton = styled.button`\n  ${downloadButtonStyles};\n`;\nconst DownloadDataButton = styled(CSVLink)`\n  ${downloadButtonStyles};\n  text-decoration: none;\n`;\n\nconst SvgIcon = styled.img`\n  width: 0.9rem;\n  margin-right: 0.3rem;\n`;\n\nconst ErrorMessage = styled.p`\n  width: 100%;\n  min-height: 400px;\n  background-color: ${tertiaryColor};\n  padding: 1rem;\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Caption = styled.p`\n  text-align: center;\n  font-style: italic;\n  font-size: 0.8rem;\n`;\n\nexport enum VizType {\n  ScatterPlot = 'ScatterPlot',\n  BarChart = 'BarChart',\n  ClusterBarChart = 'ClusterBarChart',\n  RadarChart = 'RadarChart',\n  GeoMap = 'GeoMap',\n  LineChart = 'LineChart',\n  TreeMap = 'TreeMap',\n  StackChart = 'StackChart',\n  ClusterChart = 'ClusterChart',\n  BoxAndWhiskersChart = 'BoxAndWhiskersChart',\n  Error = 'Error',\n}\n\ninterface BaseProps {\n  id: string;\n  vizType: VizType;\n  jsonToDownload?: object[];\n  enablePNGDownload?: boolean;\n  enableSVGDownload?: boolean;\n  chartTitle?: string;\n  chartCaption?: string;\n  rootStyles?: React.CSSProperties;\n  height?: number | string;\n  labelFont?: string;\n  triggerGoogleAnalyticsEvent?: (category: string, action: string, label?: string, value?: number) => void;\n}\n\ntype Props = BaseProps & (\n  {\n    vizType: VizType.Error;\n    message: string;\n  } | {\n    vizType: VizType.ScatterPlot;\n    data: ScatterPlotDatum[];\n    axisLabels?: {left?: string, bottom?: string};\n    axisMinMax?: {\n      minX?: number,\n      maxX?: number,\n      minY?: number,\n      maxY?: number,\n    };\n    showAverageLines?: boolean;\n    averageLineText?: {left?: string, bottom?: string};\n    quadrantLabels?: {I?: string, II?: string, III?: string, IV?: string};\n  } |\n  {\n    vizType: VizType.BarChart;\n    data: BarChartDatum[][];\n    axisLabels?: {left?: string, bottom?: string};\n      axisMinMax?: {\n      minY?: number,\n      maxY?: number,\n    };\n    hideAxis?: {\n      left?: boolean;\n      bottom?: boolean;\n    }\n    averageLines?: {\n      value: number,\n      label?: string;\n      labelPlacement?: LabelPlacement;\n      strokeWidth?: number;\n      strokeDasharray?: number;\n      strokeColor?: string;\n    }[]\n  } |\n  {\n    vizType: VizType.ClusterBarChart;\n    data: ClusterBarChartDatum[];\n    axisLabels?: {left?: string, bottom?: string};\n  } |\n  {\n    vizType: VizType.RadarChart;\n    data: RadarChartDatum[][];\n    color: {start: string, end: string};\n    maxValue: number;\n  } |\n  {\n    vizType: VizType.GeoMap;\n    data: ExtendedFeature<any, GeoJsonCustomProperties>;\n    minColor: string;\n    maxColor: string;\n  }|\n  {\n    vizType: VizType.LineChart;\n    data: LineChartDatum[];\n    axisLabels?: {left?: string, bottom?: string};\n    axisMinMax?: {\n      minX?: number,\n      maxX?: number,\n      minY?: number,\n      maxY?: number,\n    };\n    showGridLines?: {\n      xAxis?: boolean;\n      yAxis?: boolean;\n    }\n    formatAxis?: {\n      x?: (n: number) => string;\n      y?: (n: number) => string;\n    }\n    tickCount?: {\n      x?: number;\n      y?: number;\n    }\n    animateAxis?: {\n      animationDuration: number,\n      startMinX: number,\n      startMaxX: number,\n      startMinY: number,\n      startMaxY: number,\n    };\n  } | {\n    vizType: VizType.TreeMap;\n    data: RootDatum;\n  } | {\n    vizType: VizType.StackChart;\n    config: StackChartConfig;\n    data: StackChartDatum[];\n    enableBrushZoom?: boolean;\n  } | {\n    vizType: VizType.ClusterChart;\n    data: ClusterChartDatum[];\n    hideLabels?: boolean;\n    circleSpacing?: number;\n    max?: number;\n  }| {\n    vizType: VizType.BoxAndWhiskersChart;\n    data: BoxAndWhiskersChartDatum[];\n  }\n);\n\nexport const DataViz = (props: Props) => {\n  const {\n    id, enablePNGDownload, enableSVGDownload, jsonToDownload, rootStyles,\n    triggerGoogleAnalyticsEvent,\n  } = props;\n  const sizingNodeRef = useRef<HTMLDivElement | null>(null);\n  const svgNodeRef = useRef<any>(null);\n  const tooltipNodeRef = useRef<any>(null);\n\n  const [windowWidth, setWindowWidth] = useState<number>(window.innerWidth);\n\n  useEffect(() => {\n    const updateWindowWidth = debounce(() => {\n      setWindowWidth(window.innerWidth);\n    }, 500);\n    window.addEventListener('resize', updateWindowWidth);\n    return () => {\n      window.removeEventListener('resize', updateWindowWidth);\n    };\n  }, []);\n\n\n  useEffect(() => {\n    let svgNode: HTMLDivElement | null = null;\n    if (svgNodeRef && svgNodeRef.current && sizingNodeRef && sizingNodeRef.current &&\n        tooltipNodeRef && tooltipNodeRef.current) {\n      const sizingNode = sizingNodeRef.current;\n      svgNode = svgNodeRef.current;\n      const svg = select(svgNode);\n      const tooltip = select(tooltipNodeRef.current);\n      if (props.vizType === VizType.ScatterPlot) {\n        createScatterPlot({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          axisLabels: props.axisLabels,\n          axisMinMax: props.axisMinMax,\n          showAverageLines: props.showAverageLines,\n          averageLineText: props.averageLineText,\n          quadrantLabels: props.quadrantLabels,\n        });\n      } else if (props.vizType === VizType.BarChart) {\n        createBarChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          axisLabels: props.axisLabels,\n          axisMinMax: props.axisMinMax,\n          hideAxis: props.hideAxis,\n          averageLines: props.averageLines,\n        });\n      } else if (props.vizType === VizType.RadarChart) {\n        let width: number;\n        let height: number;\n        if (sizingNode.clientWidth > sizingNode.clientHeight) {\n          width = sizingNode.clientHeight;\n          height = sizingNode.clientHeight;\n        } else {\n          width = sizingNode.clientWidth;\n          height = sizingNode.clientWidth;\n        }\n        createRadarChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, options: {\n            width, height,\n            color: scaleOrdinal().range([props.color.start, props.color.end]),\n            maxValue: props.maxValue,\n          },\n        });\n      } else if (props.vizType === VizType.GeoMap) {\n        createGeoMap({\n          svg, tooltip, data: props.data, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          }, minColor: props.minColor, maxColor: props.maxColor,\n        });\n      } else if (props.vizType === VizType.ClusterBarChart) {\n        createClusterBarChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          axisLabels: props.axisLabels,\n        });\n      } else if (props.vizType === VizType.LineChart) {\n        creatLineChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          axisLabels: props.axisLabels,\n          axisMinMax: props.axisMinMax,\n          showGridLines: props.showGridLines,\n          formatAxis: props.formatAxis,\n          tickCount: props.tickCount,\n          animateAxis: props.animateAxis,\n        });\n      } else if (props.vizType === VizType.TreeMap) {\n        createTreeMap({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n        });\n      } else if (props.vizType === VizType.StackChart) {\n        createStackChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, config: props.config, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          enableBrushZoom: props.enableBrushZoom,\n        });\n      } else if (props.vizType === VizType.ClusterChart) {\n        createClusterChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          hideLabels: props.hideLabels,\n          circleSpacing: props.circleSpacing,\n          max: props.max,\n        });\n      } else if (props.vizType === VizType.BoxAndWhiskersChart) {\n        createBoxAndWhiskersChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n        });\n      }\n    }\n    return () => {\n      if (svgNode) {\n        svgNode.innerHTML = '';\n      }\n    };\n  }, [svgNodeRef, sizingNodeRef, windowWidth, props]);\n\n  const handleDownloadImage = (fileFormat: FileFormat) => {\n    const svgNode = svgNodeRef ? svgNodeRef.current : null;\n    const sizingNode = sizingNodeRef ? sizingNodeRef.current : null;\n    const highResMultiplier = 3;\n    let width: number | undefined;\n    let height: number | undefined;\n    if (props.vizType === VizType.RadarChart && sizingNode) {\n      if (sizingNode.clientWidth > sizingNode.clientHeight) {\n        width = sizingNode.clientHeight * highResMultiplier;\n        height = sizingNode.clientHeight * highResMultiplier;\n      } else {\n        width = sizingNode.clientWidth * highResMultiplier;\n        height = sizingNode.clientWidth * highResMultiplier;\n      }\n    } else {\n      width = sizingNode && sizingNode.clientWidth ? sizingNode.clientWidth * highResMultiplier : undefined;\n      height = sizingNode && sizingNode.clientHeight ? sizingNode.clientHeight * highResMultiplier : undefined;\n    }\n    const title = props.chartTitle ? props.chartTitle : 'chart';\n    downloadImage({svg: svgNode, width, height, title, fileFormat});\n    if (triggerGoogleAnalyticsEvent) {\n      triggerGoogleAnalyticsEvent(id, 'download-' + fileFormat, title);\n    }\n  };\n\n  const downloadPNGButton = enablePNGDownload !== true ? null : (\n    <DownloadImageButton\n      onClick={() => handleDownloadImage(FileFormat.PNG)}\n    >\n      <SvgIcon src={DownloadSVGURL} alt={'Download PNG'} />\n      Download PNG\n    </DownloadImageButton>\n  );\n  const downloadSVGButton = enableSVGDownload !== true ? null : (\n    <DownloadImageButton\n      onClick={() => handleDownloadImage(FileFormat.SVG)}\n    >\n      <SvgIcon src={DownloadSVGURL} alt={'Download SVG'} />\n      Download SVG\n    </DownloadImageButton>\n  );\n  let downloadDataButton: React.ReactElement<any> | null;\n  if (jsonToDownload !== undefined) {\n    const filename = props.chartTitle ? props.chartTitle + '.csv' : 'data.csv';\n    const onClick = () => {\n      if (triggerGoogleAnalyticsEvent) {\n        triggerGoogleAnalyticsEvent(id, 'download-csv', props.chartTitle);\n      }\n    };\n    downloadDataButton = (\n      <DownloadDataButton\n        data={jsonToDownload}\n        filename={filename}\n        onClick={onClick}\n      >\n        <SvgIcon src={DataSVGURL} alt={'Download Data'} />\n        Download Data\n      </DownloadDataButton>\n    );\n  } else {\n    downloadDataButton = null;\n  }\n\n  const downloadButtons = downloadPNGButton !== null || downloadSVGButton !== null || downloadDataButton !== null ? (\n    <DownloadButtonsContainer style={{marginTop: props.vizType !== VizType.RadarChart ? '1rem' : undefined}}>\n      {downloadPNGButton}\n      {downloadSVGButton}\n      {downloadDataButton}\n    </DownloadButtonsContainer>\n  ) : null;\n\n  if (props.vizType === VizType.Error) {\n    return (\n      <Root>\n        <ErrorMessage>\n          {props.message}\n        </ErrorMessage>\n      </Root>\n    );\n  } else {\n    const caption = props.chartCaption ? (\n      <Caption>{props.chartCaption}</Caption>\n    ) : null;\n    return (\n      <Root style={rootStyles}>\n        <SizingElm ref={sizingNodeRef} style={{height: props.height}}>\n          <svg ref={svgNodeRef} key={id + windowWidth + 'svg'} />\n        </SizingElm>\n        {caption}\n        {downloadButtons}\n        <Tooltip ref={tooltipNodeRef} key={id + windowWidth + 'tooltip'} />\n      </Root>\n    );\n  }\n};\nexport {\n  ScatterPlotDatum,\n  BarChartDatum,\n  ClusterBarChartDatum,\n  RadarChartDatum,\n  LineChartDatum,\n  StackChartDatum,\n  ClusterChartDatum,\n  BoxAndWhiskersChartDatum,\n  LabelPlacement,\n  FileFormat,\n  GeoJsonCustomProperties,\n  Coords,\n  LabelAnchor,\n  LabelPosition,\n  AnimationDirection,\n  RadarChartOptions,\n  RadarChartConfig,\n  StackChartConfig,\n  RootDatum,\n  LeafDatum,\n  defaultPaletteColors,\n  defaultDivergentColors,\n  defaultCoolChloropleth,\n  defaultHotChloropleth,\n  formatNumber,\n  adaptLabelFontSize,\n  ColorScaleLegend,\n  HorizontalLegend,\n  HowToReadDots,\n  Legend,\n}\nexport default DataViz;\n\n","import React from 'react';\nimport styled from 'styled-components/macro';\n\nconst Root = styled.div`\n  margin-top: 3rem;\n  max-width: 350px;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.85rem;\n`;\n\ninterface ColorScaleBarProps {\n  maxColor: string;\n  minColor: string;\n}\n\nconst LabelContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0.4rem;\n`;\n\nconst ColorScaleBar = styled.div<ColorScaleBarProps>`\n  height: 1rem;\n  width: 100%;\n  margin-bottom: 1rem;\n  background: linear-gradient(\n    90deg,\n    ${({minColor}) => minColor} 0%,\n    ${({maxColor}) => maxColor} 100%\n  );\n`;\n\nconst ColorScaleBarCustom = styled.div`\n  height: 1rem;\n  width: 100%;\n  margin-bottom: 1rem;\n  transition: all 0.2s ease;\n`;\n\ninterface BaseProps {\n  title: string;\n  maxLabel: string | number;\n  minLabel: string | number;\n  rootStyles?: React.CSSProperties;\n}\n\n\ntype Props = BaseProps & ({\n  maxColor: string;\n  minColor: string;\n  gradientString?: undefined;\n} | {\n  maxColor?: undefined;\n  minColor?: undefined;\n  gradientString: string;\n});\n\nconst Legend = (props: Props) => {\n  const { maxLabel, minLabel, title, rootStyles } = props;\n\n  const gradientBar = props.minColor && props.maxColor ? (\n    <ColorScaleBar\n      minColor={props.minColor}\n      maxColor={props.maxColor}\n    />\n  ) : (\n    <ColorScaleBarCustom\n      style={{background: props.gradientString}}\n    />\n  );\n\n  return (\n    <Root style={rootStyles}>\n      <LabelContainer>\n        <div>{minLabel}</div>\n        <div>{maxLabel}</div>\n      </LabelContainer>\n      {gradientBar}\n      <div>{title}</div>\n    </Root>\n  );\n};\n\nexport default Legend;","import React from 'react';\nimport styled from 'styled-components/macro';\n\nconst Root = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst LegendItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  font-size: 0.6rem;\n  width: 15%;\n  margin-right: 0.4rem;\n`;\n\nconst LegendBlock = styled.div`\n  width: 1rem;\n  height: 1rem;\n  border: solid 3px transparent;\n  margin-right: 0.6rem;\n  flex-shrink: 0;\n`;\n\nconst Label = styled.div`\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\ninterface LegendDatum {\n  label: string;\n  fill: string | undefined;\n  stroke: string | undefined;\n}\n\ninterface Props {\n  legendList: LegendDatum[];\n  rootStyles?: React.CSSProperties;\n  itemStyles?: React.CSSProperties;\n  labelStyles?: React.CSSProperties;\n}\n\nconst Legend = ({legendList, rootStyles, itemStyles, labelStyles}: Props) => {\n\n  const legendItems = legendList.map(({label, fill, stroke}) => (\n      <LegendItem key={label + fill + stroke}  title={label} style={itemStyles}>\n        <LegendBlock\n          style={{\n            backgroundColor: fill,\n            borderColor: stroke,\n          }}\n        />\n        <Label style={labelStyles}>{label}</Label>\n      </LegendItem>\n  ));\n\n  return (\n    <Root style={rootStyles}>\n      {legendItems}\n    </Root>\n  );\n};\n\nexport default Legend;","import React from 'react';\nimport styled from 'styled-components';\nimport {lighten} from 'polished';\n\nconst Root = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr;\n  grid-column-gap: 1rem;\n  font-size: 0.85rem;\n  margin-top: 3rem;\n`;\n\nconst ListContainer = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst ListItem = styled.li<{color: string}>`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.55rem;\n\n  &::before {\n    content: '';\n    width: 0.75rem;\n    height: 0.75rem;\n    border-radius: 2000px;\n    background-color: ${({color}) => color};\n    margin-right: 0.6rem;\n    flex-shrink: 0;\n  }\n`;\n\nconst HighlightedItem = styled(ListItem)`\n  margin-left: auto;\n\n  &::before {\n    border: solid 0.6rem ${({color}) => lighten(1, color)};\n  }\n`;\n\ninterface LegendItem {\n  color: string;\n  label: string;\n}\n\ninterface Props {\n  items: LegendItem[];\n  highlighted?: LegendItem;\n}\n\nconst HowToReadDots = ({items, highlighted}: Props) => {\n  const legendItems = items.map(({color, label}) => <ListItem color={color} key={label + color}>{label}</ListItem>);\n  const highlightedItem = highlighted ? (\n    <HighlightedItem color={highlighted.color}>{highlighted.label}</HighlightedItem>\n  ) : null;\n  return (\n    <Root>\n      <ListContainer>\n        {legendItems}\n      </ListContainer>\n      {highlightedItem}\n    </Root>\n  );\n};\n\nexport default HowToReadDots;","import React from 'react';\nimport styled from 'styled-components/macro';\n\nconst Root = styled.ul`\n  list-style: none;\n`;\n\nconst LegendItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  font-size: 1rem;\n`;\n\nconst LegendBlock = styled.div`\n  width: 1rem;\n  height: 1rem;\n  margin-right: 0.5rem;\n  border: solid 3px transparent;\n`;\n\ninterface LegendDatum {\n  label: string;\n  fill: string | undefined;\n  stroke: string | undefined;\n}\n\ninterface Props {\n  legendList: LegendDatum[];\n}\n\nconst Legend = ({legendList}: Props) => {\n\n  const legendItems = legendList.map(({label, fill, stroke}) => (\n    <LegendItem key={label + fill + stroke}>\n      <LegendBlock\n        style={{\n          backgroundColor: fill,\n          borderColor: stroke,\n        }}\n      />\n      {label}\n    </LegendItem>\n  ));\n\n  return (\n    <Root>\n      {legendItems}\n    </Root>\n  );\n};\n\nexport default Legend;","import * as d3 from 'd3';\n\nexport interface RadarChartOptions {\n  radius?: number;\n  width?: number;\n  height?: number;\n  factor?: number;\n  factorLegend?: number;\n  levels?: number;\n  maxValue?: number;\n  radians?: number;\n  opacityArea?: number;\n  ToRight?: number;\n  TranslateX?: number;\n  TranslateY?: number;\n  ExtraWidthX?: number;\n  ExtraWidthY?: number;\n  color?: d3.ScaleOrdinal<any, any> | any;\n}\n\nexport interface RadarChartConfig {\n  radius: number;\n  width: number;\n  height: number;\n  factor: number;\n  factorLegend: number;\n  levels: number;\n  maxValue: number;\n  radians: number;\n  opacityArea: number;\n  ToRight: number;\n  TranslateX: number;\n  TranslateY: number;\n  ExtraWidthX: number;\n  ExtraWidthY: number;\n  color: d3.ScaleOrdinal<any, any> | any;\n}\n\nexport interface Datum {\n  label: string;\n  value: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[][];\n  options?: RadarChartOptions;\n  labelFont?: string;\n}\n\nexport default ({svg, data, tooltip, options, labelFont}: Input) => {\n  // set default config\n  const config: RadarChartConfig = {\n    radius: 5,\n    width: 600,\n    height: 600,\n    factor: 1,\n    factorLegend: .85,\n    levels: 5,\n    maxValue: 100,\n    radians: 2 * Math.PI,\n    opacityArea: 0.5,\n    ToRight: 5,\n    TranslateX: 80,\n    TranslateY: 30,\n    ExtraWidthX: 100,\n    ExtraWidthY: 100,\n    color: d3.scaleOrdinal().range(['#6F257F', '#CA0D59']),\n  };\n\n  // if user input options, replace them in the config variable\n  if(options && 'undefined' !== typeof options){\n    Object.keys(options).forEach(function(key: keyof RadarChartOptions) {\n      if('undefined' !== typeof options[key]){\n        config[key] = options[key];\n      }\n    });\n  }\n\n  const margin = {top: 60, right: 60, bottom: 60, left: 60};\n  const width = config.width - margin.left - margin.right;\n  const height = config.height - margin.bottom - margin.top;\n\n  const allAxis = (data && data.length ? data[0].map(d => d.label) : []);\n  const total = allAxis.length;\n  const radius = config.factor * Math.min(width / 2, height / 2);\n\n\n  svg\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom);\n\n  const container = svg\n    .append('g')\n      .attr('transform',\n      'translate(' + margin.left + ',' + margin.top + ')');\n\n  //Circular segments\n  for(let j = 0; j < config.levels; j++) {\n    const levelFactor = config.factor * radius * ((j + 1)/config.levels);\n    container.selectAll('.levels')\n      .data(allAxis)\n      .enter()\n      .append('svg:line')\n        .attr('x1', (_d, i) => levelFactor * (1 - config.factor * Math.sin(i * config.radians / total)))\n        .attr('y1', (_d, i) => levelFactor * (1 - config.factor * Math.cos(i * config.radians / total)))\n        .attr('x2', (_d, i) => levelFactor * (1 - config.factor * Math.sin((i + 1) * config.radians / total)))\n        .attr('y2', (_d, i) => levelFactor * (1 - config.factor * Math.cos((i + 1) * config.radians / total)))\n        .attr('class', 'line')\n        .style('stroke', 'grey')\n        .style('stroke-opacity', '0.75')\n        .style('stroke-width', '0.6px')\n        .attr('transform', `translate(${width / 2 - levelFactor}, ${height / 2 - levelFactor})`);\n  }\n\n  //Text indicating at what % each level is\n  for(let j = 0; j < config.levels; j++) {\n    const levelFactor = config.factor * radius * ((j + 1) / config.levels);\n    container.selectAll('.levels')\n      .data([1]) //dummy data\n      .enter()\n      .append('svg:text')\n        .attr('x', () => levelFactor * (1 - config.factor*Math.sin(0)))\n        .attr('y', () => levelFactor * (1 - config.factor*Math.cos(0)))\n        .attr('class', 'legend')\n        .style('font-family', 'sans-serif')\n        .style('font-size', '10px')\n        .attr('transform', `translate(${width / 2 - levelFactor + config.ToRight}, ${height / 2 - levelFactor})`)\n        .attr('fill', '#737373')\n        .text( Math.round((j + 1) * config.maxValue / config.levels));\n  }\n\n  let series = 0;\n\n  const axis = container.selectAll('.axis')\n    .data(allAxis)\n    .enter()\n    .append('g')\n      .attr('class', 'axis');\n\n  axis.append('line')\n    .attr('x1', width/2)\n    .attr('y1', height  /2)\n    .attr('x2', (_d, i) => width / 2 * (1 - config.factor * Math.sin(i * config.radians / total)))\n    .attr('y2', (_d, i) => height / 2 * (1 - config.factor * Math.cos(i * config.radians / total)))\n    .attr('class', 'line')\n    .style('stroke', 'grey')\n    .style('stroke-width', '1px');\n\n  data.forEach((d) => {\n    const dataValues = d.map(({value}, i) => [\n      width/2*(1-(parseFloat(Math.max(value, 0).toString())/config.maxValue)*config.factor*Math.sin(i*config.radians/total)),\n      height/2*(1-(parseFloat(Math.max(value, 0).toString())/config.maxValue)*config.factor*Math.cos(i*config.radians/total)),\n    ]);\n\n    // push the first dataValue back to make a complete closed path\n    dataValues.push(dataValues[0]);\n\n      container.selectAll('.area')\n      .data([dataValues])\n      .enter()\n      .append('polygon')\n        .attr('class', 'radar-chart-serie'+series)\n        .style('stroke-width', '2px')\n        .style('stroke', config.color(series))\n        .attr('points', point => {\n          let value = '';\n          for(const p of point){\n            value = value + p[0] + ',' + p[1] + ' ';\n          }\n          return value;\n        })\n        .style('fill', config.color(series))\n        .style('fill-opacity', config.opacityArea)\n        .on('mouseover', function () {\n          const shape = 'polygon.'+d3.select(this).attr('class');\n          container.selectAll('polygon')\n          .transition()\n          .style('fill-opacity', 0.1);\n          container.selectAll(shape)\n          .transition()\n          .style('fill-opacity', .7);\n        })\n        .on('mouseout', () => {\n          container.selectAll('polygon')\n          .transition()\n          .style('fill-opacity', config.opacityArea);\n        });\n\n    series++;\n  });\n\n  series = 0;\n\n  data.forEach(d => {\n\n    container.selectAll('.nodes')\n      .data(d)\n      .enter()\n      .append('svg:circle')\n        .attr('class', 'radar-chart-serie' + series)\n        .attr('r', config.radius)\n        .attr('alt', j => Math.max(j.value, 0))\n        .attr('cx', (j, i) => width/2*(1-(Math.max(j.value, 0)/config.maxValue)*config.factor*Math.sin(i*config.radians/total)))\n        .attr('cy', (j, i) => height  /2*(1-(Math.max(j.value, 0)/config.maxValue)*config.factor*Math.cos(i*config.radians/total)))\n        .attr('data-id', j => j.label)\n        .style('fill', '#fff')\n        .style('stroke-width', '2px')\n        .style('stroke', config.color(series)).style('fill-opacity', .9)\n        .on('mousemove', p => {\n          tooltip\n            .style('left', d3.event.pageX + 'px')\n            .style('top', d3.event.pageY + 'px')\n            .style('display', 'block')\n            .html(`<strong>${p.label}</strong>: ${p.value}`);\n        })\n        .on('mouseout', function(){ tooltip.style('display', 'none');});\n\n    series++;\n  });\n\n  const labels = axis.append('text')\n    .style('font-size', '11px')\n    .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n    .attr('text-anchor', 'middle')\n    .attr('dy', '1.5em')\n    .attr('transform', (_d, i) => {\n      if (i === 0) {\n        return 'translate(0, -12)';\n      } else if (i === 1 && total === 4) {\n        return 'translate(4, 0)';\n      } else {\n        return 'translate(0, 0)';\n      }\n    })\n    .attr('class', 'legend')\n    .attr('x', (_d, i) => width / 2 * (1 - config.factorLegend * Math.sin(i * config.radians / total)) -60 * Math.sin(i * config.radians/total))\n    .attr('y', (_d, i) => height / 2 * (1 - Math.cos(i * config.radians / total)) - 20 * Math.cos(i *config.radians / total));\n\n  const seperator = '|||||';\n\n  labels.selectAll('tspan')\n    .data((d, i) => {\n      const res = d.split('\\n');\n      const arr = res.map(text => `${i}${seperator}${text}`);\n      return arr;\n    })\n    .enter()\n    .append('tspan')\n    .text(d => {\n      const text = d.split(seperator).pop();\n      return text !== undefined ? text : '';\n    })\n    .attr('x', (d) => {\n      const originalI = d.split(seperator).shift();\n      const i = originalI !== undefined ? parseInt(originalI, 10) : 0;\n      return width / 2 * (1 - config.factorLegend * Math.sin(i * config.radians / total)) -60 * Math.sin(i * config.radians/total);\n    })\n    .attr('dx', 0)\n    .attr('dy', (_d, i) => i !== 0 ? 15 : 0);\n\n};\n\n","import * as d3 from 'd3';\nimport { baseColor } from './Utils';\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\nexport interface GeoJsonCustomProperties {\n  percent: number;\n  tooltipContent?: string;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: d3.ExtendedFeature<any, GeoJsonCustomProperties>;\n  size: Dimensions;\n  minColor: string;\n  maxColor: string;\n}\n\nexport default (input: Input) => {\n  const { svg, data, size, tooltip, minColor, maxColor } = input;\n\n  const margin = {top: 30, right: 30, bottom: 30, left: 30};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  const center = d3.geoCentroid(data);\n  let scale  = 150;\n  let offset: [number, number] = [width/2, height/2];\n  let projection = d3.geoMercator().scale(scale).center(center)\n        .translate(offset);\n\n  // create the path\n  let path = d3.geoPath().projection(projection);\n\n  // using the path determine the bounds of the current map and use\n  // these to determine better values for the scale and translation\n  const bounds  = path.bounds(data);\n  const hscale  = scale*width  / (bounds[1][0] - bounds[0][0]);\n  const vscale  = scale*height / (bounds[1][1] - bounds[0][1]);\n  scale   = (hscale < vscale) ? hscale : vscale;\n  offset  = [width - (bounds[0][0] + bounds[1][0])/2,\n                    height - (bounds[0][1] + bounds[1][1])/2];\n\n  // new projection\n  projection = d3.geoMercator().center(center)\n    .scale(scale).translate(offset);\n  path = path.projection(projection);\n\n  const allValues: number[] = (data as any).features.map((node: any) => node.properties.percent);\n\n  const rawMinValue = d3.min(allValues);\n  const rawMaxValue = d3.max(allValues);\n\n  const minValue = rawMinValue ? Math.floor(rawMinValue) : 0;\n  const maxValue = rawMaxValue ? Math.ceil(rawMaxValue) : 0;\n\n  const colorScale = d3.scaleLinear<string>().domain([minValue, maxValue]).range([minColor, maxColor]);\n\n  svg\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom);\n\n  const container = svg\n    .append('g')\n      .attr('transform',\n      'translate(' + margin.left + ',' + margin.top + ')');\n\n  container.selectAll('path')\n     .data((data as any).features)\n      .enter()\n     .append('path')\n     .attr('d', path)\n     .attr('stroke-width',1)\n     .attr('stroke',baseColor)\n     .attr('class','pathClass')\n     .on('mousemove', function(d: any) {\n       if (d.properties.tooltipContent) {\n        tooltip\n          .style('left', d3.event.pageX + 'px')\n          .style('top', d3.event.pageY + 'px')\n          .style('display', 'block')\n          .html(d.properties.tooltipContent);\n       }\n      })\n      .on('mouseout', function(){\n        tooltip.style('display', 'none');\n      });\n\n  container.selectAll('.pathClass').attr('fill', (d: any) => colorScale(d.properties.percent));\n\n};\n","import * as d3 from 'd3';\n\nexport interface Datum {\n  groupName: string;\n  x: string;\n  y: number;\n  fill?: string;\n  tooltipContent?: string;\n  tooltipContentOnly?: boolean;\n  onClick?: () => void;\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[];\n  size: Dimensions;\n  axisLabels?: {left?: string, bottom?: string};\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const { svg, size, axisLabels, data, tooltip, labelFont } = input;\n\n  const margin = {\n    top: 30, right: 30,\n    bottom: axisLabels && axisLabels.bottom ? 60 : 30,\n    left: 30};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n  const x = d3.scaleBand().rangeRound([0, width])\n    .padding(0.1),\n    y = d3.scaleLinear().rangeRound([height, 0]);\n\n  const g = svg.append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n  const yMax = d3.max(data, function(d) {\n    return d.y;\n  });\n  const yMaxDomain = yMax ? yMax : 0;\n  x.domain(data.map(function(d) {\n    return d.x;\n  }));\n  y.domain([0, yMaxDomain]);\n\n  const x1 = d3.scaleBand()\n    .rangeRound([0, x.bandwidth()])\n    .padding(0.05)\n    .domain(data.map(function(d) {\n      return d.groupName;\n    }));\n\n  color.domain(data.map(function(d) {\n    return d.groupName;\n  }));\n\n  const groups = g.selectAll(null)\n    .data(data)\n    .enter()\n    .append('g')\n    .attr('transform', function(d) {\n      return 'translate(' + x(d.x) + ',0)';\n    });\n\n  groups.selectAll(null)\n    .data(function(d) {\n      return [d];\n    })\n    .enter()\n    .append('rect')\n    .attr('x', function(d) {\n      const xVal = x1(d.groupName);\n      return xVal ? xVal : 0;\n    })\n    .attr('y', function(d) {\n      return y(d.y);\n    })\n    .attr('width', x1.bandwidth())\n    .attr('height', function(d) {\n      return height - y(d.y);\n    })\n    .attr('fill', d => d.fill ? d.fill : color(d.groupName))\n    .on('mousemove', ({groupName, x: valueName, tooltipContent, tooltipContentOnly}) => {\n      if (tooltipContentOnly && tooltipContent && tooltipContent.length) {\n        tooltip.html(tooltipContent);\n      } else {\n        const content = tooltipContent === undefined || tooltipContent.length === 0\n          ? '' : `:<br />${tooltipContent}`;\n        tooltip.html(`<strong>${groupName}, ${valueName}</strong>${content}`);\n      }\n      tooltip\n        .style('display', 'block')\n        .style('left', (d3.event.pageX + 4) + 'px')\n        .style('top', (d3.event.pageY - 4) + 'px');\n      })\n    .on('mouseout', () => {\n      tooltip\n          .style('display', 'none');\n    });\n\n  g.append('g')\n    .attr('class', 'axis')\n    .attr('transform', 'translate(0,' + height + ')')\n    .call(d3.axisBottom(x));\n\n  // append Y axis label\n  g.append('g')\n    .attr('class', 'axis')\n    .call(d3.axisLeft(y).ticks(null, 's'))\n    .append('text')\n    .attr('x', 2)\n    .attr('y', () => {\n      const yTick = y.ticks().pop();\n      const yTickVal = yTick ? yTick : 0;\n      return y(yTickVal) + 0.5;\n    })\n    // .attr(\"dy\", \"0.32em\")\n\n      .attr('y', -margin.top / 2)\n      .attr('x', 0)\n      .attr('dy', '0.75em')\n    .attr('fill', '#000')\n    .attr('text-anchor', 'start')\n    .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n    .text(axisLabels && axisLabels.left ? axisLabels.left : '');\n};\n","import * as d3 from 'd3';\n\nexport interface RootDatum {\n  id: string;\n  label: string;\n  fill?: string;\n  children: (LeafDatum | RootDatum)[];\n}\n\nexport interface LeafDatum {\n  id: string;\n  label: string;\n  tooltipContent: string;\n  size: number;\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  size: Dimensions;\n  data: RootDatum;\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const { svg, size, data, tooltip, labelFont} = input;\n\n  const margin = {top: 0, right: 0, bottom: 0, left: 0};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  const treemap = d3.treemap()\n      .tile(d3.treemapResquarify)\n      .size([width, height])\n      .round(true)\n      .paddingInner(1);\n\n  const root = d3.hierarchy(data)\n      .eachBefore((d: any) => d.data.id = (d.parent ? d.parent.data.id + '.' : '') + d.data.id)\n      .sum((d: any) => d.size)\n      .sort((a, b) => {\n        if (b.height - a.height) {\n          return b.height - a.height;\n        } else if (b.value && a.value) {\n          return b.value - a.value;\n        } else {\n          return 0;\n        }\n       });\n\n  treemap(root);\n\n  const cell = svg.selectAll('g')\n    .data(root.leaves())\n    .enter().append('g')\n      .attr('transform', (d: any) => 'translate(' + d.x0 + ',' + d.y0 + ')')\n      .on('mousemove', (d: any) => {\n          tooltip\n            .style('position', 'fixed')\n            .style('left', d3.event.clientX + 'px')\n            .style('top', d3.event.clientY + 'px')\n            .style('display', 'flex')\n            .style('align-items', 'center')\n            .html(`<div style=\"\n              display: inline-block;\n              background-color: ${d.parent.data.fill};\n              width: 12px;\n              height: 12px;\n              margin-right: 12px;\n              flex-shrink: 0;\n            \"></div>` +\n                d.data.tooltipContent);\n        })\n      .on('mouseout', () => tooltip.style('display', 'none'));\n\n  cell.append('rect')\n      .attr('id', (d: any) => d.data.id)\n      .attr('finalwidth', (d: any) => d.x1 - d.x0)\n      .attr('finalheight', (d: any) => d.y1 - d.y0)\n      .attr('width', (d: any) => d.x1 - d.x0)\n      .attr('height', (d: any) => d.y1 - d.y0)\n      .attr('fill', (d: any) =>  d.parent.data.fill);\n\n  cell.append('clipPath')\n      .attr('id', (d: any) => 'clip-' + d.data.id)\n    .append('use')\n      .attr('xlink:href', (d: any) => '#' + d.data.id);\n\n  cell.append('text')\n      .attr('clip-path', (d: any) => 'url(#clip-' + d.data.id + ')')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .attr('font-size', '0.75rem')\n      .attr('x', 8)\n      .attr('y', 16)\n      .text((d: any) => d.data.label + ' - ' + d.data.size + '%')\n      .call(wrap);\n\n  cell\n      .style('transform', (d: any) => `translate(${d.x0}px, ${d.y0}px) scale(0)`)\n      .transition()\n      .duration(500)\n      .style('transform', (d: any) => `translate(${d.x0}px, ${d.y0}px) scale(1)`);\n\n  function wrap(text: any) {\n    text.each(function() {\n      // @ts-ignore\n      const t = d3.select(this as any);\n      // @ts-ignore\n      const rect = this.parentElement.querySelector('rect');\n      const rectWidth = rect.getAttribute('finalwidth');\n      const rectHeight = rect.getAttribute('finalheight');\n      const words = t.text().split(/\\s+/).reverse();\n      let word = words.pop();\n      let line: string[] = [];\n      let lineNumber = 0; //<-- 0!\n      const lineHeight = 1.2; // ems\n      const x = t.attr('x'); //<-- include the x!\n      const y = t.attr('y');\n      const dy = t.attr('dy') ? t.attr('dy') : 0; //<-- null check\n      let tspan = t.text(null).append('tspan').attr('x', x).attr('y', y).attr('dy', dy + 'em');\n      while (word !== undefined) {\n        line.push(word);\n        tspan.text(line.join(' '));\n        const node = tspan.node();\n        if (node && node.getComputedTextLength() > (rectWidth * 0.8)) {\n          line.pop();\n          tspan.text(line.join(' '));\n          line = [word];\n          // @ts-ignore\n          tspan = t.append('tspan').attr('x', x).attr('y', y).attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n        }\n        word = words.pop();\n      }\n      if (t.node().getBBox().width > rectWidth || t.node().getBBox().height > rectHeight * 0.8) {\n        t.attr('opacity', '0');\n      }\n    });\n  }\n};\n","import * as d3 from 'd3';\nimport {formatNumber} from './Utils';\n\nexport interface Datum {\n  [key: string]: number;\n}\n\nexport interface StackChartConfig {\n  primaryKey: string;\n  groups: {\n    key: string;\n    label: string;\n    fill?: string;\n  }[];\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  size: Dimensions;\n  config: StackChartConfig;\n  data: Datum[];\n  enableBrushZoom?: boolean;\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const { svg, size, data, config, tooltip, enableBrushZoom, labelFont } = input;\n\n  const margin = {top: 30, right: 30, bottom: 30, left: 30};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  // append the svg object to the body of the page\n\n  svg\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom);\n\n  const g = svg.append('g')\n              .attr('transform',\n                'translate(' + margin.left + ',' + margin.top + ')');\n\n  const keys = config.groups.map(({key}) => key);\n  const color = d3.scaleOrdinal()\n    .domain(keys)\n    .range(d3.schemeSet2);\n  const stackedData = d3.stack().order(d3.stackOrderDescending).keys(keys)(data);\n\n    // set the ranges\n  const xScale = d3.scaleLinear()\n            .range([0, width]);\n  const yScale = d3.scaleLinear()\n            .range([height, 0]);\n\n  const allYValues: number[] = [];\n  stackedData.forEach(datum => {\n    if (datum && datum.length) {\n      datum.forEach(value => {\n        allYValues.push(value[1]);\n      });\n    }\n  });\n  const allXValues: number[] = data.map(d => d[config.primaryKey]);\n\n  const rawMinY = d3.min(allYValues);\n  const rawMaxY = d3.max(allYValues);\n  const rawMinX = d3.min(allXValues);\n  const rawMaxX = d3.max(allXValues);\n\n  const minY = rawMinY ? rawMinY : 0;\n  const maxY = rawMaxY ? rawMaxY : 0;\n  const minX = rawMinX ? rawMinX : 0;\n  const maxX = rawMaxX ? rawMaxX : 0;\n\n  // Scale the range of the data in the domains\n  xScale.domain([minX, maxX]);\n  yScale.domain([minY, maxY]);\n\n  //////////\n  // BRUSHING AND CHART //\n  //////////\n\n  svg.append('defs').append('svg:clipPath')\n      .attr('id', 'clip')\n      .append('svg:rect')\n      .attr('width', width )\n      .attr('height', height )\n      .attr('x', 0)\n      .attr('y', 0);\n\n  // Add brushing\n  const brush = d3.brushX()                 // Add the brush feature using the d3.brush function\n      .extent( [ [0,0], [width,height] ] ) // initialise the brush area: start at 0,0 and finishes at width,height: it means I select the whole graph area\n      .on('end', updateChart); // Each time the brush selection changes, trigger the 'updateChart' function\n\n  // Create the scatter variable: where both the circles and the brush take place\n\n  const areaChart = g.append('g')\n    .attr('clip-path', 'url(#clip)');\n\n  // Area generator\n  const area = d3.area()\n    .x((d: any) => xScale(d.data[config.primaryKey]))\n    .y0((d) => yScale(d[0]))\n    .y1((d) => yScale(d[1]));\n\n  // Show the areas\n  areaChart\n    .selectAll('mylayers')\n    .data(stackedData)\n    .enter()\n    .append('path')\n      .attr('class', function(d) { return 'myArea ' + d.key; })\n      .style('fill', d => {\n        const groupConfig = config.groups.find(group => group.key === d.key);\n        if (groupConfig && groupConfig.fill) {\n          return groupConfig.fill;\n        } else {\n          return color(d.key) as string;\n        }\n      })\n      .attr('d', area as any)\n      .on('mousemove', d => {\n          const groupConfig = config.groups.find(group => group.key === d.key);\n          if (groupConfig) {\n            const fill = groupConfig.fill ? groupConfig.fill : color(d.key) as string;\n            tooltip\n              .style('position', 'fixed')\n              .style('left', d3.event.clientX + 'px')\n              .style('top', d3.event.clientY + 'px')\n              .style('display', 'flex')\n              .style('align-items', 'center')\n              .html(`<div style=\"\n                display: inline-block;\n                background-color: ${fill};\n                width: 12px;\n                height: 12px;\n                margin-right: 12px;\n                flex-shrink: 0;\n              \"></div>` + groupConfig.label);\n          }\n        })\n      .on('mouseout', () => tooltip.style('display', 'none'));\n\n  if (enableBrushZoom) {\n    // Add the brushing\n    areaChart\n      .append('g')\n        .attr('class', 'brush')\n        .call(brush);\n  }\n\n  const xAxis = g.append('g')\n    .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n    .attr('transform', 'translate(0,' + height + ')')\n    .call(d3.axisBottom(xScale).ticks(5).tickFormat(y => y.toString()));\n  g.append('g')\n    .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n    .call(d3.axisLeft(yScale).tickFormat(formatNumber));\n\n  let idleTimeout: number | null;\n  function idled() { idleTimeout = null; }\n\n  // A function that update the chart for given boundaries\n  function updateChart() {\n\n    const extent = d3.event.selection;\n\n    // If no selection, back to initial coordinate. Otherwise, update X axis domain\n    if(!extent){\n      if (!idleTimeout) return idleTimeout = setTimeout(idled, 350); // This allows to wait a little bit\n      xScale.domain([minX, maxX]);\n    }else{\n      xScale.domain([ xScale.invert(extent[0]), xScale.invert(extent[1]) ]);\n      areaChart.select('.brush').call(brush.move, null); // This remove the grey brush area as soon as the selection has been done\n    }\n\n    // Update axis and area position\n    xAxis.transition().duration(1000).call(d3.axisBottom(xScale).ticks(5).tickFormat(y => y.toString()));\n    areaChart\n      .selectAll('path')\n      .transition().duration(1000)\n      .attr('d', area);\n\n    return undefined;\n  }\n\n};\n","import * as d3 from 'd3';\nimport {adaptLabelFontSize} from './Utils';\n\nexport interface Datum {\n  name: string;\n  label: string;\n  value: number;\n  fill: string;\n  tooltipContent?: string;\n}\n\ninterface ParentDatum {\n  id: string;\n}\n\ninterface SrcDatum extends ParentDatum {\n  name: string;\n  value: number;\n  parentId: string;\n}\n\ntype SrcData = (SrcDatum | ParentDatum)[];\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  size: Dimensions;\n  data: Datum[];\n  hideLabels?: boolean;\n  circleSpacing?: number;\n  max?: number;\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const {\n    svg, size, data, tooltip, hideLabels,\n    circleSpacing, max, labelFont,\n  } = input;\n\n\n  const allValues: number[] = [];\n\n  const srcData: SrcData = data.map(d => {\n    allValues.push(d.value);\n    return {\n      id: d.label, size: d.value, parentId: 'global', ...d,\n    };\n  });\n  srcData.unshift({id: 'global'});\n\n  const margin = {top: 10, right: 10, bottom: 10, left: 10};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  svg.attr('width', width)\n     .attr('height', height);\n\n  const g = svg.append('g')\n            .attr('class', 'main-group');\n\n\n  let layout: d3.PackLayout<any>;\n  if (max) {\n    const sizeScale = d3.scaleSqrt().range([0, max]);\n    layout = d3.pack()\n              .radius((d: any) => sizeScale(d.value))\n              .size([width, height])\n              .padding(circleSpacing !== undefined ? circleSpacing : 6);\n  } else {\n    layout = d3.pack()\n              .size([width, height])\n              .padding(circleSpacing !== undefined ? circleSpacing : 6);\n  }\n\n  const stratData = d3.stratify()(srcData);\n  const root = d3.hierarchy(stratData)\n      .sum(function(d: any) { return d.data.size; })\n      .sort(function(a: any, b: any) { return b.value - a.value; });\n  const nodes = root.descendants();\n\n  layout(root);\n\n  g.selectAll('circle')\n    .data(nodes)\n    .enter()\n    .filter((d) => d.parent !== null )\n    .append('circle')\n    .attr('cx', (d: any) => d.x)\n    .attr('cy', (d: any) => d.y)\n    .attr('r', (d: any) => d.r)\n    .style('fill', (d: any) => d.data.data.fill)\n    .on('mousemove', (d: any) => {\n        const content = d.data.data.tooltipContent\n          ? d.data.data.tooltipContent\n          : `<strong>${d.data.data.name}</strong>: ${d.data.data.value}`;\n        tooltip\n          .style('position', 'fixed')\n          .style('left', d3.event.clientX + 'px')\n          .style('top', d3.event.clientY + 'px')\n          .style('display', 'flex')\n          .style('align-items', 'center')\n          .html(`<div style=\"\n            display: inline-block;\n            width: 12px;\n            height: 12px;\n            margin-right: 12px;\n            background-color: ${d.data.data.fill};\n            flex-shrink: 0;\n          \"></div>${content}\n          `);\n      })\n    .on('mouseout', () => tooltip.style('display', 'none'));\n\n  if (!hideLabels) {\n    g.selectAll('text')\n      .data(nodes)\n      .enter()\n      .filter((d) => d.parent !== null )\n      .append('text')\n      .attr('x', (d: any) => d.x)\n      .attr('y', (d: any) => d.y)\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .text(d => {\n        if (d.data.id) {\n          return d.data.id;\n        } else {\n          return '';\n        }\n      })\n      .style('fill', '#fff')\n      .style('font-size', adaptLabelFontSize)\n      .attr('text-anchor', 'middle')\n      .style('transform', (d: any) => {\n        const adjust = parseInt(d.r, 10) * 0.15;\n        return 'translate(0px, ' + adjust + 'px)';\n      })\n      .style('pointer-events', 'none');\n  }\n\n  g.style('transform', () => max !== undefined ? 'scale(' + max / 100 + ')' : null)\n   .style('transform-origin', 'center');\n};\n","import * as d3 from 'd3';\n\nexport interface Datum {\n  category: string;\n  label: string;\n  value: number;\n  plotPoint: boolean;\n  primaryPoint: boolean;\n  fill?: string;\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[];\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  size: Dimensions;\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const { svg, data, size, labelFont, tooltip} = input;\n\n  const margin = {top: 30, right: 20, bottom: 30, left: 40};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  svg\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom);\n\nconst group = svg.append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n// Compute quartiles, median, inter quantile range min and max --> these info are then used to draw the box.\nconst sumstat = d3.nest() // nest function allows to group the calculation per level of a factor\n  .key((d: Datum) => d.category)\n  .rollup((d: Datum[]) => {\n    const q1 = d3.quantile(d.map(g => g.value).sort(d3.ascending),.25) as number;\n    const median = d3.quantile(d.map(g => g.value).sort(d3.ascending),.5) as number;\n    const q3 = d3.quantile(d.map(g => g.value).sort(d3.ascending),.75) as number;\n    const interQuantileRange = q3 - q1;\n    const allValues = d.map(({value}) => value);\n    const [min, max] = d3.extent(allValues);\n    return({q1, median, q3, interQuantileRange, min, max}) as any;\n  })\n  .entries(data);\n\n  const allCategories: string[] = [];\n  const allMinMaxValues: number[] = [];\n  sumstat.forEach(({key, value}) => {\n    allCategories.push(key);\n    allMinMaxValues.push((value as any as {min: number}).min);\n    allMinMaxValues.push((value as any as {max: number}).max);\n  });\n\n  // Show the X scale\n  const x = d3.scaleBand()\n    .range([ 0, width ])\n    .domain(allCategories)\n    .paddingInner(1)\n    .paddingOuter(.5);\n\n  group.append('g')\n    .attr('transform', 'translate(0,' + height + ')')\n    .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n    .call(d3.axisBottom(x));\n\n  const [minY, maxY] = d3.extent(allMinMaxValues) as [number, number];\n\n  // Show the Y scale\n  const y = d3.scaleLinear()\n    .domain([minY * 0.85,maxY * 1.15])\n    .range([height, 0]);\n\n  group.append('g')\n    .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n    .call(d3.axisLeft(y));\n\n  // Show the main vertical line\n  group\n    .selectAll('vertLines')\n    .data(sumstat)\n    .enter()\n    .append('line')\n      .attr('x1', d => x(d.key) as number)\n      .attr('x2', d => x(d.key) as number)\n      .attr('y1', d => y((d.value as any as {min: number}).min) as number)\n      .attr('y2', d => y((d.value as any as {max: number}).max) as number)\n      .attr('stroke', '#555')\n      .style('width', 40);\n\n  // rectangle for the main box\n  const boxWidth = width / allCategories.length * 0.7;\n  group\n    .selectAll('boxes')\n    .data(sumstat)\n    .enter()\n    .append('rect')\n        .attr('x', d => (x(d.key) as number) - boxWidth / 2)\n        .attr('y', d => y((d.value as any as {q3: number}).q3) as number)\n        .attr('height', d => (y((d.value as any as {q1: number}).q1) - y((d.value as any as {q3: number}).q3)))\n        .attr('width', boxWidth)\n        .attr('stroke', '#555')\n        .style('fill', '#EC7063')\n        .style('opacity', '0.3');\n\n  // Show the median\n  group\n    .selectAll('medianLines')\n    .data(sumstat)\n    .enter()\n    .append('line')\n      .attr('x1', d => (x(d.key) as number) - boxWidth / 2)\n      .attr('x2', d => (x(d.key) as number) + boxWidth / 2)\n      .attr('y1', d => y((d.value as any as {median: number}).median))\n      .attr('y2', d => y((d.value as any as {median: number}).median))\n      .style('width', 80)\n      .style('stroke', '#555');\n\n  // Show the max line\n  group\n    .selectAll('maxLines')\n    .data(sumstat)\n    .enter()\n    .append('line')\n      .attr('x1', d => (x(d.key) as number) - boxWidth / 2)\n      .attr('x2', d => (x(d.key) as number) + boxWidth / 2)\n      .attr('y1', d => y((d.value as any as {max: number}).max))\n      .attr('y2', d => y((d.value as any as {max: number}).max))\n      .style('width', 80)\n      .style('stroke', '#555');\n  // Show the min line\n  group\n    .selectAll('minLines')\n    .data(sumstat)\n    .enter()\n    .append('line')\n      .attr('x1', d => (x(d.key) as number) - boxWidth / 2)\n      .attr('x2', d => (x(d.key) as number) + boxWidth / 2)\n      .attr('y1', d => y((d.value as any as {min: number}).min))\n      .attr('y2', d => y((d.value as any as {min: number}).min))\n      .style('width', 80)\n      .style('stroke', '#555');\n\n  group\n    .selectAll('indPoints')\n    .data(data.filter(d => d.plotPoint && !d.primaryPoint))\n    .enter()\n    .append('circle')\n      .attr('cx', d => x(d.category) as number)\n      .attr('cy', d => y(d.value) as number)\n      .attr('r', 4)\n      .style('fill', d => d.fill ? d.fill : '#2874A6')\n      .on('mousemove', d => {\n          tooltip\n            .style('position', 'fixed')\n            .style('left', d3.event.clientX + 'px')\n            .style('top', d3.event.clientY + 'px')\n            .style('display', 'flex')\n            .style('align-items', 'center')\n            .html(`<strong>${d.label}, ${d.category}</strong>: ${parseFloat(d.value.toFixed(2))}`);\n      })\n      .on('mouseout', () => tooltip.style('display', 'none'));\n  group\n    .selectAll('primaryPoints')\n    .data(data.filter(d => d.plotPoint && d.primaryPoint))\n    .enter()\n    .append('circle')\n      .attr('cx', d => x(d.category) as number)\n      .attr('cy', d => y(d.value) as number)\n      .attr('r', 7)\n      .style('fill', d => d.fill ? d.fill : 'red')\n      .on('mousemove', d => {\n          tooltip\n            .style('position', 'fixed')\n            .style('left', d3.event.clientX + 'px')\n            .style('top', d3.event.clientY + 'px')\n            .style('display', 'flex')\n            .style('align-items', 'center')\n            .html(`<strong>${d.label}, ${d.category}</strong>: ${d.value}`);\n      })\n      .on('mouseout', () => tooltip.style('display', 'none'));\n\n};\n","import React from 'react';\nimport styled from 'styled-components/macro';\nimport { Link } from 'react-router-dom';\nimport { Content } from '../styling/Grid';\nimport {\n  SectionHeader,\n  secondaryFont,\n} from '../styling/styleUtils';\nimport {VizType} from 'react-fast-charts';\n\nconst List = styled.ul`\n  font-family: ${secondaryFont};\n`;\nconst ListItem = styled.li`\n  font-size: 1.25rem;\n\n  a {\n    color: rgb(78, 140, 141); \n    text-decoration: none;\n    border-bottom: solid 1px rgb(78, 140, 141);\n  }\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <SectionHeader>Examples of react-fast-charts</SectionHeader>\n      <List>\n        <ListItem><Link to={'/' + VizType.ScatterPlot}>VizType.ScatterPlot</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.BarChart}>VizType.BarChart</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.ClusterBarChart}>VizType.ClusterBarChart</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.RadarChart}>VizType.RadarChart</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.GeoMap}>VizType.GeoMap</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.LineChart}>VizType.LineChart</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.TreeMap}>VizType.TreeMap</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.StackChart}>VizType.StackChart</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.ClusterChart}>VizType.ClusterChart</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.BoxAndWhiskersChart}>VizType.BoxAndWhiskersChart</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.Error}>VizType.ErrorViz</Link></ListItem>\n      </List>\n    </Content>\n  );\n}\n","import React from 'react';\nimport {\n  NavContainer,\n  gridSmallMediaWidth,\n} from '../styling/Grid';\nimport styled from 'styled-components/macro';\nimport {\n  baseColor,\n  secondaryFont,\n} from '../styling/styleUtils';\n\nexport const mobileHeight = 50; // in px\n\nconst Ul = styled.ul`\n  top: 0;\n  background-color: #fff;\n  margin: 1rem 0 0;\n  padding: 0 0 0 1.3rem;\n  list-style: none;\n  text-align: right;\n  border-top: solid 1px transparent;\n\n  @media (max-width: ${gridSmallMediaWidth}px) {\n    display: none;\n  }\n`;\n\nconst Link = styled.a`\n  padding: 0.4rem;\n  height: 1.9rem;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  background-color: var(--background-color);\n  text-decoration: none;\n  color: ${baseColor};\n  font-family: ${secondaryFont};\n  font-size: 0.8rem;\n  letter-spacing: 1px;\n\n  &:after {\n    content: '';\n    display: block;\n    height: 100%;\n    width: 0.35rem;\n    margin-left: 0.35rem;\n    background-color: var(--border-color);\n  }\n\n  &:hover {\n    background-color: var(--hover-color);\n    &:after {\n      background-color: var(--border-hover-color);\n    }\n  }\n\n\n  @media (max-width: ${gridSmallMediaWidth}px) {\n    flex-direction: row-reverse;\n    &:after {\n      margin-right: 0.35rem;\n    }\n  }\n`;\n\n// Allow CSS custom properties\ndeclare module 'csstype' {\n  interface Properties {\n    '--background-color'?: string;\n    '--hover-color'?: string;\n    '--border-color'?: string;\n    '--border-hover-color'?: string;\n  }\n}\n\nexport interface NavItem {\n  label: string;\n  target: string;\n}\n\ninterface Props {\n  links: NavItem[];\n  backgroundColor: string;\n  hoverColor: string;\n  borderColor: string;\n}\n\n\nconst StickySideNav = (props: Props) => {\n  const {\n    links, backgroundColor, hoverColor, borderColor,\n   } = props;\n\n\n  const colorTheme: React.CSSProperties = {\n    '--background-color': backgroundColor,\n    '--hover-color': hoverColor,\n    '--border-color': hoverColor,\n    '--border-hover-color': borderColor,\n  };\n\n  const navLinks = links.map(({label, target}) => {\n    return (\n      <li key={label + target}>\n        <Link\n          href={target}\n          style={colorTheme}\n        >\n          {label}\n        </Link>\n      </li>\n    );\n  });\n\n  return (\n    <NavContainer>\n      <Ul>\n        {navLinks}\n      </Ul>\n    </NavContainer>\n  );\n};\n\nexport default StickySideNav;","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  ScatterPlotDatum,\n} from 'react-fast-charts';\n\nconst data: ScatterPlotDatum[] = [\n  {\n    label: 'Value 1',\n    x: 4,\n    y: 6,\n    fill: 'red',\n    radius: 5,\n  },\n  {\n    label: 'Value 2',\n    x: 2,\n    y: 9,\n    fill: 'blue',\n    radius: 9,\n  },\n  {\n    label: 'Value 3',\n    x: 3,\n    y: 2,\n    fill: 'blue',\n    radius: 5,\n  },\n  {\n    label: 'Value 4',\n    x: 7,\n    y: 5,\n    fill: 'green',\n    radius: 9,\n  },\n  {\n    label: 'Value 5',\n    x: 5,\n    y: 8,\n    fill: 'green',\n    radius: 5,\n    highlighted: true,\n  },\n  {\n    label: 'Value 6',\n    x: 6,\n    y: 7,\n    fill: 'red',\n    radius: 12,\n  },\n];\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  ScatterPlotDatum,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-scatterplot'}\n  vizType={VizType.ScatterPlot}\n  data={data}\n  axisLabels={{\n    bottom: 'Bottom Axis', left: 'Left Axis'\n  }}\n/>\n`;\n\nconst dataAsString = `\nconst data: ScatterPlotDatum[] = [\n  {\n    label: 'Value 1',\n    x: 4,\n    y: 6,\n    fill: 'red',\n    radius: 5,\n  },\n  {\n    label: 'Value 2',\n    x: 2,\n    y: 9,\n    fill: 'blue',\n    radius: 9,\n  },\n  {\n    label: 'Value 3',\n    x: 3,\n    y: 2,\n    fill: 'blue',\n    radius: 5,\n  },\n  {\n    label: 'Value 4',\n    x: 7,\n    y: 5,\n    fill: 'green',\n    radius: 9,\n  },\n  {\n    label: 'Value 5',\n    x: 5,\n    y: 8,\n    fill: 'green',\n    radius: 5,\n    highlighted: true,\n  },\n  {\n    label: 'Value 6',\n    x: 6,\n    y: 7,\n    fill: 'red',\n    radius: 12,\n  },\n];\n\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Scatter Plot</SectionHeader>\n          <DataViz\n            id={'example-scatterplot'}\n            vizType={VizType.ScatterPlot}\n            data={data}\n            axisLabels={{bottom: 'Bottom Axis', left: 'Left Axis'}}\n          />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  BarChartDatum,\n} from 'react-fast-charts';\n\nconst data: BarChartDatum[][] = [\n  [\n    {\n      x: '2011',\n      y: 10,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2012',\n      y: 11,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2013',\n      y: 6,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2014',\n      y: 8,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2015',\n      y: 9,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2016',\n      y: 12,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n  ],\n  [\n    {\n      x: '2011',\n      y: 6,\n      fill: 'blue',\n    },\n    {\n      x: '2012',\n      y: 9,\n      fill: 'blue',\n    },\n    {\n      x: '2013',\n      y: 2,\n      fill: 'blue',\n    },\n    {\n      x: '2014',\n      y: 5,\n      fill: 'blue',\n    },\n    {\n      x: '2015',\n      y: 8,\n      fill: 'blue',\n    },\n    {\n      x: '2016',\n      y: 7,\n      fill: 'blue',\n    },\n  ],\n];\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  BarChartDatum,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-bar-chart'}\n  vizType={VizType.BarChart}\n  data={data}\n  axisLabels={{left: 'Value', bottom: 'Year'}}\n/>\n`;\n\nconst dataAsString = `\nconst data: BarChartDatum[][] = [\n  [\n    {\n      x: '2011',\n      y: 10,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2012',\n      y: 11,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2013',\n      y: 6,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2014',\n      y: 8,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2015',\n      y: 9,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2016',\n      y: 12,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n  ],\n  [\n    {\n      x: '2011',\n      y: 6,\n      fill: 'blue',\n    },\n    {\n      x: '2012',\n      y: 9,\n      fill: 'blue',\n    },\n    {\n      x: '2013',\n      y: 2,\n      fill: 'blue',\n    },\n    {\n      x: '2014',\n      y: 5,\n      fill: 'blue',\n    },\n    {\n      x: '2015',\n      y: 8,\n      fill: 'blue',\n    },\n    {\n      x: '2016',\n      y: 7,\n      fill: 'blue',\n    },\n  ],\n];\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Bar Chart</SectionHeader>\n          <DataViz\n            id={'example-bar-chart'}\n            vizType={VizType.BarChart}\n            data={data}\n            axisLabels={{left: 'Value', bottom: 'Year'}}\n          />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  ClusterBarChartDatum,\n} from 'react-fast-charts';\n\nconst data: ClusterBarChartDatum[] = [\n  {\n    x: '2011',\n    y: 6,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2012',\n    y: 9,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2013',\n    y: 2,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2014',\n    y: 5,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2015',\n    y: 8,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2016',\n    y: 7,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2011',\n    y: 4,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2012',\n    y: 7,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2013',\n    y: 5,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2014',\n    y: 9,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2015',\n    y: 3,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2016',\n    y: 10,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n];\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  ClusterBarChartDatum,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-cluster-bar-chart'}\n  vizType={VizType.ClusterBarChart}\n  data={data}\n/>\n`;\n\nconst dataAsString = `\nconst data: ClusterBarChartDatum[] = [\n  {\n    x: '2011',\n    y: 6,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2012',\n    y: 9,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2013',\n    y: 2,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2014',\n    y: 5,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2015',\n    y: 8,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2016',\n    y: 7,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2011',\n    y: 4,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2012',\n    y: 7,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2013',\n    y: 5,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2014',\n    y: 9,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2015',\n    y: 3,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2016',\n    y: 10,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n];\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Cluster Bar Chart</SectionHeader>\n          <DataViz\n            id={'example-cluster-bar-chart'}\n            vizType={VizType.ClusterBarChart}\n            data={data}\n          />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  RadarChartDatum,\n} from 'react-fast-charts';\n\nconst data: RadarChartDatum[][] = [\n  [\n    {\n      label: 'Point 1',\n      value: 6,\n    },\n    {\n      label: 'Point 2',\n      value: 4,\n    },\n    {\n      label: 'Point 3',\n      value: 8,\n    },\n    {\n      label: 'Point 4',\n      value: 9,\n    },\n    {\n      label: 'Point 5',\n      value: 3,\n    },\n  ],\n  [\n    {\n      label: 'Point 1',\n      value: 3,\n    },\n    {\n      label: 'Point 2',\n      value: 7,\n    },\n    {\n      label: 'Point 3',\n      value: 6,\n    },\n    {\n      label: 'Point 4',\n      value: 5,\n    },\n    {\n      label: 'Point 5',\n      value: 8,\n    },\n  ],\n];\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  RadarChartDatum,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-radar-chart'}\n  vizType={VizType.RadarChart}\n  color={{start: 'blue', end: 'red'}}\n  maxValue={10}\n  data={data}\n/>\n`;\n\nconst dataAsString = `\nconst data: RadarChartDatum[][] = [\n  [\n    {\n      label: 'Point 1',\n      value: 6,\n    },\n    {\n      label: 'Point 2',\n      value: 4,\n    },\n    {\n      label: 'Point 3',\n      value: 8,\n    },\n    {\n      label: 'Point 4',\n      value: 9,\n    },\n    {\n      label: 'Point 5',\n      value: 3,\n    },\n  ],\n  [\n    {\n      label: 'Point 1',\n      value: 3,\n    },\n    {\n      label: 'Point 2',\n      value: 7,\n    },\n    {\n      label: 'Point 3',\n      value: 6,\n    },\n    {\n      label: 'Point 4',\n      value: 5,\n    },\n    {\n      label: 'Point 5',\n      value: 8,\n    },\n  ],\n];\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Radar Chart</SectionHeader>\n          <DataViz\n            id={'example-radar-chart'}\n            vizType={VizType.RadarChart}\n            color={{start: 'blue', end: 'red'}}\n            maxValue={10}\n            data={data}\n          />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n} from 'react-fast-charts';\nimport raw from 'raw.macro';\n\nconst codeAsString = `import DataViz, {\n  VizType,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-geo-map'}\n  vizType={VizType.GeoMap}\n  data={data}\n  minColor={'yellow'}\n  maxColor={'red'}\n/>\n`;\n\nconst dataAsString = `\nimport raw from 'raw.macro';\n\n\n...\n\n\nconst worldMap = JSON.parse(raw('../assets/world-geojson.json'));\nconst featuresWithValues = worldMap.features.map((feature: any) => {\n  const percent = Math.random() * 100;\n  const properties = {\n    ...feature.properties,\n    percent,\n    tooltipContent: \\`$\\{feature.properties.name}: $\\{percent.toFixed(2)}%\\`,\n  };\n  return {...feature, properties};\n});\nconst data = {...worldMap, features: featuresWithValues};\n`;\n\nconst worldMap = JSON.parse(raw('../assets/world-geojson.json'));\nconst featuresWithValues = worldMap.features.map((feature: any) => {\n  const percent = Math.random() * 100;\n  const properties = {\n    ...feature.properties,\n    percent,\n    tooltipContent: `${feature.properties.name}: ${percent.toFixed(2)}%`,\n  };\n  return {...feature, properties};\n});\nconst data = {...worldMap, features: featuresWithValues};\n\nexport default () => {\n\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>GeoMap</SectionHeader>\n          <DataViz\n            id={'example-geo-map'}\n            vizType={VizType.GeoMap}\n            data={data}\n            minColor={'yellow'}\n            maxColor={'red'}\n          />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  LineChartDatum,\n  LabelPosition,\n  LabelAnchor,\n} from 'react-fast-charts';\n\nconst data: LineChartDatum[] = [\n  {\n    coords: [\n      {x: 2005, y: 5},\n      {x: 2006, y: 6},\n      {x: 2007, y: 8},\n      {x: 2008, y: 6},\n      {x: 2009, y: 5},\n      {x: 2010, y: 9},\n      {x: 2011, y: 8},\n      {x: 2012, y: 7},\n      {x: 2013, y: 6},\n      {x: 2014, y: 5},\n      {x: 2015, y: 5},\n      {x: 2016, y: 8},\n    ],\n    animationDuration: 0,\n    label: 'Green',\n    color: 'forestgreen',\n    labelColor: 'purple',\n    width: 3,\n    labelPosition: LabelPosition.Top,\n    labelAnchor: LabelAnchor.Middle,\n  }, {\n    coords: [\n      {x: 2005, y: 2},\n      {x: 2006, y: 4},\n      {x: 2007, y: 5},\n      {x: 2008, y: 3},\n      {x: 2009, y: 6},\n      {x: 2010, y: 5},\n      {x: 2011, y: 4},\n      {x: 2012, y: 3},\n      {x: 2013, y: 3},\n      {x: 2014, y: 4},\n      {x: 2015, y: 6},\n      {x: 2016, y: 7},\n    ],\n    animationDuration: 1000,\n    label: 'Salmon',\n    color: 'darksalmon',\n    labelColor: 'purple',\n    width: 3,\n    labelPosition: LabelPosition.Center,\n    labelAnchor: LabelAnchor.Left,\n  }\n];\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  LineChartDatum,\n  LabelPosition,\n  LabelAnchor,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-line-chart'}\n  vizType={VizType.LineChart}\n  data={data}\n  axisLabels={{left: 'Value', bottom: 'Year'}}\n  axisMinMax={{\n    minY: -10,\n    maxY: 20,\n    maxX: 2021,\n  }}\n  formatAxis={{\n    x: n => n.toString()\n  }}\n/>\n`;\n\nconst dataAsString = `\n\nconst data: LineChartDatum[] = [\n  {\n    coords: [\n      {x: 2005, y: 5},\n      {x: 2006, y: 6},\n      {x: 2007, y: 8},\n      {x: 2008, y: 6},\n      {x: 2009, y: 5},\n      {x: 2010, y: 9},\n      {x: 2011, y: 8},\n      {x: 2012, y: 7},\n      {x: 2013, y: 6},\n      {x: 2014, y: 5},\n      {x: 2015, y: 5},\n      {x: 2016, y: 8},\n    ],\n    animationDuration: 0,\n    label: 'Green',\n    color: 'forestgreen',\n    labelColor: 'purple',\n    width: 3,\n    labelPosition: LabelPosition.Top,\n    labelAnchor: LabelAnchor.Middle,\n  }, {\n    coords: [\n      {x: 2005, y: 2},\n      {x: 2006, y: 4},\n      {x: 2007, y: 5},\n      {x: 2008, y: 3},\n      {x: 2009, y: 6},\n      {x: 2010, y: 5},\n      {x: 2011, y: 4},\n      {x: 2012, y: 3},\n      {x: 2013, y: 3},\n      {x: 2014, y: 4},\n      {x: 2015, y: 6},\n      {x: 2016, y: 7},\n    ],\n    animationDuration: 1000,\n    label: 'Salmon',\n    color: 'darksalmon',\n    labelColor: 'purple',\n    width: 3,\n    labelPosition: LabelPosition.Center,\n    labelAnchor: LabelAnchor.Left,\n  }\n];\n\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Line Chart</SectionHeader>\n        <DataViz\n          id={'sandbox-line-chart'}\n          vizType={VizType.LineChart}\n          data={data}\n          axisLabels={{left: 'Value', bottom: 'Year'}}\n          axisMinMax={{\n            minY: -10,\n            maxY: 20,\n            maxX: 2021,\n          }}\n          formatAxis={{\n            x: n => n.toString()\n          }}\n        />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  RootDatum,\n} from 'react-fast-charts';\n\nconst data: RootDatum = {\n \"id\": \"example-tree-map-data\",\n \"label\": \"example-tree-map-data\",\n \"children\": [\n  {\n   \"id\": \"Beverages\",\n   \"label\": \"Beverages\",\n   \"fill\": \"#537DAA\",\n   \"children\": [\n      {\n        \"id\": \"Beverages\",\n        \"label\": \"Beverages\",\n        \"tooltipContent\": \"Beverages\",\n        \"size\": 0.5\n      }\n    ]\n   },\n  {\n   \"id\": \"Chemicals\",\n   \"label\": \"Chemicals\",\n   \"fill\": \"#A1CBE7\",\n   \"children\": [\n      {\n        \"id\": \"Chemicals1\",\n        \"label\": \"Chemicals 1\",\n        \"tooltipContent\": \"Chemicals1\",\n        \"size\": 2\n      },\n      {\n        \"id\": \"Chemicals2\",\n        \"label\": \"Chemicals 2\",\n        \"tooltipContent\": \"Chemicals2\",\n        \"size\": 2\n      },\n      {\n        \"id\": \"Chemicals3\",\n        \"label\": \"Chemicals 3\",\n        \"tooltipContent\": \"Chemicals3\",\n        \"size\": 1\n      },\n      {\n        \"id\": \"Chemicals4\",\n        \"label\": \"Chemicals 4\",\n        \"tooltipContent\": \"Chemicals4\",\n        \"size\": 0.5\n      },\n      {\n        \"id\": \"Chemicals5\",\n        \"label\": \"Chemicals 5\",\n        \"tooltipContent\": \"Chemicals5\",\n        \"size\": 1\n      }\n    ]\n   },\n  {\n   \"id\": \"CrudeMaterials\",\n   \"label\": \"CrudeMaterials\",\n   \"fill\": \"#F08D34\",\n   \"children\": [\n      {\n        \"id\": \"CrudeMaterials\",\n        \"label\": \"Crude Materials\",\n        \"tooltipContent\": \"CrudeMaterials\",\n        \"size\": 1\n      }\n    ]\n   },\n  {\n   \"id\": \"Food\",\n   \"label\": \"Food\",\n   \"fill\": \"#F5BD7D\",\n   \"children\": [\n      {\n        \"id\": \"Fish\",\n        \"label\": \"Fish\",\n        \"tooltipContent\": \"Fish\",\n        \"size\": 8\n      },\n      {\n        \"id\": \"Poultry\",\n        \"label\": \"Poultry\",\n        \"tooltipContent\": \"Poultry\",\n        \"size\": 8\n      }\n    ]\n   },\n  {\n   \"id\": \"MachineryandVehicles\",\n   \"label\": \"Machinery and Vehicles\",\n   \"fill\": \"#8CD17D\",\n   \"children\": [\n      {\n        \"id\": \"Road\",\n        \"label\": \"Road\",\n        \"tooltipContent\": \"Road\",\n        \"size\": 5\n      },\n      {\n        \"id\": \"Cars\",\n        \"label\": \"Cars\",\n        \"tooltipContent\": \"Cars\",\n        \"size\": 4\n      },\n      {\n        \"id\": \"Trucks\",\n        \"label\": \"Trucks\",\n        \"tooltipContent\": \"Trucks\",\n        \"size\": 3\n      },\n      {\n        \"id\": \"Tires\",\n        \"label\": \"Tires\",\n        \"tooltipContent\": \"Tires\",\n        \"size\": 1\n      },\n      {\n        \"id\": \"Other\",\n        \"label\": \"Other\",\n        \"tooltipContent\": \"Other\",\n        \"size\": 0.5\n      }\n    ]\n   },\n  {\n   \"id\": \"Material Manufacturers\",\n   \"label\": \"Material Manufacturers\",\n   \"fill\": \"#B69930\",\n   \"children\": [\n      {\n        \"id\": \"Leather\",\n        \"label\": \"Leather\",\n        \"tooltipContent\": \"Leather\",\n        \"size\": 16\n      },\n      {\n        \"id\": \"Cotton\",\n        \"label\": \"Cotton\",\n        \"tooltipContent\": \"Cotton\",\n        \"size\": 4\n      },\n      {\n        \"id\": \"Wool\",\n        \"label\": \"Wool\",\n        \"tooltipContent\": \"Wool\",\n        \"size\": 4\n      }\n    ]\n   },\n  {\n   \"id\": \"Unspecified\",\n   \"label\": \"Unspecified\",\n   \"fill\": \"#86BCB6\",\n   \"children\": [\n      {\n        \"id\": \"SpecialTransactions\",\n        \"label\": \"Special Transactions, commodity not classified according to class\",\n        \"tooltipContent\": \"Special Transactions, commodity not classified according to class\",\n        \"size\": 28\n      }\n    ]\n   },\n  {\n   \"id\": \"Services\",\n   \"label\": \"Services\",\n   \"fill\": \"#499894\",\n   \"children\": [\n      {\n        \"id\": \"ICT\",\n        \"label\": \"ICT\",\n        \"tooltipContent\": \"ICT\",\n        \"size\": 61\n      },\n      {\n        \"id\": \"TravelandTourism\",\n        \"label\": \"Travel and Tourism\",\n        \"tooltipContent\": \"TravelandTourism\",\n        \"size\": 60\n      }\n    ]\n   },\n  {\n   \"id\": \"VegetableOils\",\n   \"label\": \"VegetableOils\",\n   \"fill\": \"#E56F72\",\n   \"children\": [\n      {\n        \"id\": \"OliveOil\",\n        \"label\": \"Olive Oil\",\n        \"tooltipContent\": \"OliveOil\",\n        \"size\": 0.4\n      }\n    ]\n   }\n ]\n};\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  RootDatum,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-tree-map'}\n  vizType={VizType.TreeMap}\n  data={data}\n/>\n`;\n\nconst dataAsString = `\nconst data: RootDatum = {\n \"id\": \"example-tree-map-data\",\n \"label\": \"example-tree-map-data\",\n \"children\": [\n  {\n   \"id\": \"Beverages\",\n   \"label\": \"Beverages\",\n   \"fill\": \"#537DAA\",\n   \"children\": [\n      {\n        \"id\": \"Beverages\",\n        \"label\": \"Beverages\",\n        \"tooltipContent\": \"Beverages\",\n        \"size\": 0.5\n      }\n    ]\n   },\n  {\n   \"id\": \"Chemicals\",\n   \"label\": \"Chemicals\",\n   \"fill\": \"#A1CBE7\",\n   \"children\": [\n      {\n        \"id\": \"Chemicals1\",\n        \"label\": \"Chemicals 1\",\n        \"tooltipContent\": \"Chemicals1\",\n        \"size\": 2\n      },\n      {\n        \"id\": \"Chemicals2\",\n        \"label\": \"Chemicals 2\",\n        \"tooltipContent\": \"Chemicals2\",\n        \"size\": 2\n      },\n      {\n        \"id\": \"Chemicals3\",\n        \"label\": \"Chemicals 3\",\n        \"tooltipContent\": \"Chemicals3\",\n        \"size\": 1\n      },\n      {\n        \"id\": \"Chemicals4\",\n        \"label\": \"Chemicals 4\",\n        \"tooltipContent\": \"Chemicals4\",\n        \"size\": 0.5\n      },\n      {\n        \"id\": \"Chemicals5\",\n        \"label\": \"Chemicals 5\",\n        \"tooltipContent\": \"Chemicals5\",\n        \"size\": 1\n      }\n    ]\n   },\n  {\n   \"id\": \"CrudeMaterials\",\n   \"label\": \"CrudeMaterials\",\n   \"fill\": \"#F08D34\",\n   \"children\": [\n      {\n        \"id\": \"CrudeMaterials\",\n        \"label\": \"Crude Materials\",\n        \"tooltipContent\": \"CrudeMaterials\",\n        \"size\": 1\n      }\n    ]\n   },\n  {\n   \"id\": \"Food\",\n   \"label\": \"Food\",\n   \"fill\": \"#F5BD7D\",\n   \"children\": [\n      {\n        \"id\": \"Fish\",\n        \"label\": \"Fish\",\n        \"tooltipContent\": \"Fish\",\n        \"size\": 8\n      },\n      {\n        \"id\": \"Poultry\",\n        \"label\": \"Poultry\",\n        \"tooltipContent\": \"Poultry\",\n        \"size\": 8\n      }\n    ]\n   },\n  {\n   \"id\": \"MachineryandVehicles\",\n   \"label\": \"Machinery and Vehicles\",\n   \"fill\": \"#8CD17D\",\n   \"children\": [\n      {\n        \"id\": \"Road\",\n        \"label\": \"Road\",\n        \"tooltipContent\": \"Road\",\n        \"size\": 5\n      },\n      {\n        \"id\": \"Cars\",\n        \"label\": \"Cars\",\n        \"tooltipContent\": \"Cars\",\n        \"size\": 4\n      },\n      {\n        \"id\": \"Trucks\",\n        \"label\": \"Trucks\",\n        \"tooltipContent\": \"Trucks\",\n        \"size\": 3\n      },\n      {\n        \"id\": \"Tires\",\n        \"label\": \"Tires\",\n        \"tooltipContent\": \"Tires\",\n        \"size\": 1\n      },\n      {\n        \"id\": \"Other\",\n        \"label\": \"Other\",\n        \"tooltipContent\": \"Other\",\n        \"size\": 0.5\n      }\n    ]\n   },\n  {\n   \"id\": \"Material Manufacturers\",\n   \"label\": \"Material Manufacturers\",\n   \"fill\": \"#B69930\",\n   \"children\": [\n      {\n        \"id\": \"Leather\",\n        \"label\": \"Leather\",\n        \"tooltipContent\": \"Leather\",\n        \"size\": 16\n      },\n      {\n        \"id\": \"Cotton\",\n        \"label\": \"Cotton\",\n        \"tooltipContent\": \"Cotton\",\n        \"size\": 4\n      },\n      {\n        \"id\": \"Wool\",\n        \"label\": \"Wool\",\n        \"tooltipContent\": \"Wool\",\n        \"size\": 4\n      }\n    ]\n   },\n  {\n   \"id\": \"Unspecified\",\n   \"label\": \"Unspecified\",\n   \"fill\": \"#86BCB6\",\n   \"children\": [\n      {\n        \"id\": \"SpecialTransactions\",\n        \"label\": \"Special Transactions, commodity not classified according to class\",\n        \"tooltipContent\": \"Special Transactions, commodity not classified according to class\",\n        \"size\": 28\n      }\n    ]\n   },\n  {\n   \"id\": \"Services\",\n   \"label\": \"Services\",\n   \"fill\": \"#499894\",\n   \"children\": [\n      {\n        \"id\": \"ICT\",\n        \"label\": \"ICT\",\n        \"tooltipContent\": \"ICT\",\n        \"size\": 61\n      },\n      {\n        \"id\": \"TravelandTourism\",\n        \"label\": \"Travel and Tourism\",\n        \"tooltipContent\": \"TravelandTourism\",\n        \"size\": 60\n      }\n    ]\n   },\n  {\n   \"id\": \"VegetableOils\",\n   \"label\": \"VegetableOils\",\n   \"fill\": \"#E56F72\",\n   \"children\": [\n      {\n        \"id\": \"OliveOil\",\n        \"label\": \"Olive Oil\",\n        \"tooltipContent\": \"OliveOil\",\n        \"size\": 0.4\n      }\n    ]\n   }\n ]\n};\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>TreeMap</SectionHeader>\n          <DataViz\n            id={'example-tree-map'}\n            vizType={VizType.TreeMap}\n            data={data}\n          />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  StackChartConfig,\n  StackChartDatum,\n} from 'react-fast-charts';\n\nconst config: StackChartConfig = {\n  primaryKey: 'year',\n  groups: [\n    {\n      key: 'rest_of_the_world',\n      label: 'Rest of the world',\n      fill: 'black',\n    },\n    {\n      key: 'mexico',\n      label: 'Mexico',\n      fill: 'red',\n    },\n    {\n      key: 'netherlands',\n      label: 'Netherlands',\n    },\n    {\n      key: 'belgium',\n      label: 'Belgium',\n      fill: 'blue',\n    },\n    {\n      key: 'canada',\n      label: 'Canada',\n      fill: 'salmon',\n    },\n    {\n      key: 'ireland',\n      label: 'Ireland',\n    },\n    {\n      key: 'germany',\n      label: 'Germany',\n    },\n    {\n      key: 'united_kingdom',\n      label: 'United Kingdom',\n    },\n    {\n      key: 'italy',\n      label: 'Italy',\n    },\n    {\n      key: 'poland',\n      label: 'Poland',\n    },\n    {\n      key: 'dominican_republic',\n      label: 'Dominican Republic',\n    },\n  ],\n};\n\nconst data: StackChartDatum[] = [\n  {\n    year: 2002,\n    rest_of_the_world: 8855,\n    mexico: 11486,\n    netherlands: 686581,\n    belgium: 1678,\n    canada: 392642,\n    ireland: 71085,\n    germany: 14344,\n    united_kingdom: 11794,\n    italy: 7519,\n    poland: 5642,\n    dominican_republic: 1355,\n  },\n  {\n    year: 2003,\n    rest_of_the_world: 8354,\n    mexico: 11951,\n    netherlands: 694147,\n    belgium: 2240,\n    canada: 386142,\n    ireland: 95914,\n    germany: 13917,\n    united_kingdom: 9518,\n    italy: 8777,\n    poland: 9923,\n    dominican_republic: 1377,\n  },\n  {\n    year: 2004,\n    rest_of_the_world: 8211,\n    mexico: 12405,\n    netherlands: 698363,\n    belgium: 3109,\n    canada: 361144,\n    ireland: 73398,\n    germany: 13971,\n    united_kingdom: 11995,\n    italy: 7646,\n    poland: 8187,\n    dominican_republic: 1470,\n  },\n  {\n    year: 2005,\n    rest_of_the_world: 9644,\n    mexico: 13740,\n    netherlands: 704236,\n    belgium: 4851,\n    canada: 351015,\n    ireland: 101121,\n    germany: 14478,\n    united_kingdom: 12147,\n    italy: 9943,\n    poland: 11767,\n    dominican_republic: 1450,\n  },\n  {\n    year: 2006,\n    rest_of_the_world: 9959,\n    mexico: 16318,\n    netherlands: 828601,\n    belgium: 7211,\n    canada: 380863,\n    ireland: 98620,\n    germany: 14460,\n    united_kingdom: 11857,\n    italy: 12410,\n    poland: 10796,\n    dominican_republic: 1503,\n  },\n  {\n    year: 2007,\n    rest_of_the_world: 10041,\n    mexico: 16204,\n    netherlands: 789142,\n    belgium: 11436,\n    canada: 397821,\n    ireland: 105031,\n    germany: 15825,\n    united_kingdom: 11984,\n    italy: 16381,\n    poland: 13812,\n    dominican_republic: 1432,\n  },\n  {\n    year: 2008,\n    rest_of_the_world: 9757,\n    mexico: 15858,\n    netherlands: 767479,\n    belgium: 12200,\n    canada: 362440,\n    ireland: 109655,\n    germany: 13625,\n    united_kingdom: 11612,\n    italy: 19503,\n    poland: 12478,\n    dominican_republic: 1502,\n  },\n  {\n    year: 2009,\n    rest_of_the_world: 8720,\n    mexico: 15210,\n    netherlands: 662921,\n    belgium: 10391,\n    canada: 280890,\n    ireland: 101793,\n    germany: 12346,\n    united_kingdom: 9022,\n    italy: 20051,\n    poland: 10792,\n    dominican_republic: 1546,\n  },\n  {\n    year: 2010,\n    rest_of_the_world: 9035,\n    mexico: 15787,\n    netherlands: 652054,\n    belgium: 12078,\n    canada: 311936,\n    ireland: 100205,\n    germany: 14213,\n    united_kingdom: 9374,\n    italy: 22375,\n    poland: 11715,\n    dominican_republic: 1431,\n  },\n  {\n    year: 2011,\n    rest_of_the_world: 8749,\n    mexico: 16688,\n    netherlands: 600947,\n    belgium: 16111,\n    canada: 280736,\n    ireland: 115873,\n    germany: 13811,\n    united_kingdom: 8382,\n    italy: 23133,\n    poland: 11388,\n    dominican_republic: 1348,\n  },\n  {\n    year: 2012,\n    rest_of_the_world: 7840,\n    mexico: 17809,\n    netherlands: 612335,\n    belgium: 18017,\n    canada: 243315,\n    ireland: 110408,\n    germany: 9173,\n    united_kingdom: 8182,\n    italy: 25365,\n    poland: 12752,\n    dominican_republic: 1516,\n  },\n  {\n    year: 2013,\n    rest_of_the_world: 6099,\n    mexico: 18618,\n    netherlands: 568978,\n    belgium: 17206,\n    canada: 231047,\n    ireland: 108615,\n    germany: 8158,\n    united_kingdom: 7576,\n    italy: 19198,\n    poland: 12225,\n    dominican_republic: 1153,\n  },\n  {\n    year: 2014,\n    rest_of_the_world: 6503,\n    mexico: 21524,\n    netherlands: 542067,\n    belgium: 22213,\n    canada: 207130,\n    ireland: 82255,\n    germany: 6784,\n    united_kingdom: 5739,\n    italy: 20126,\n    poland: 12770,\n    dominican_republic: 1120,\n  },\n  {\n    year: 2015,\n    rest_of_the_world: 6650,\n    mexico: 22716,\n    netherlands: 570892,\n    belgium: 27175,\n    canada: 201833,\n    ireland: 106226,\n    germany: 7161,\n    united_kingdom: 5220,\n    italy: 19745,\n    poland: 13327,\n    dominican_republic: 1299,\n  },\n];\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  StackChartConfig,\n  StackChartDatum,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-stack-chart'}\n  vizType={VizType.StackChart}\n  config={config}\n  data={data}\n/>\n`;\n\nconst configAsString = `\nconst config: StackChartConfig = {\n  primaryKey: 'year',\n  groups: [\n    {\n      key: 'rest_of_the_world',\n      label: 'Rest of the world',\n      fill: 'black',\n    },\n    {\n      key: 'mexico',\n      label: 'Mexico',\n      fill: 'red',\n    },\n    {\n      key: 'netherlands',\n      label: 'Netherlands',\n    },\n    {\n      key: 'belgium',\n      label: 'Belgium',\n      fill: 'blue',\n    },\n    {\n      key: 'canada',\n      label: 'Canada',\n      fill: 'salmon',\n    },\n    {\n      key: 'ireland',\n      label: 'Ireland',\n    },\n    {\n      key: 'germany',\n      label: 'Germany',\n    },\n    {\n      key: 'united_kingdom',\n      label: 'United Kingdom',\n    },\n    {\n      key: 'italy',\n      label: 'Italy',\n    },\n    {\n      key: 'poland',\n      label: 'Poland',\n    },\n    {\n      key: 'dominican_republic',\n      label: 'Dominican Republic',\n    },\n  ],\n};\n`;\n\nconst dataAsString = `\nconst data: StackChartDatum[] = [\n  {\n    year: 2002,\n    rest_of_the_world: 8855,\n    mexico: 11486,\n    netherlands: 686581,\n    belgium: 1678,\n    canada: 392642,\n    ireland: 71085,\n    germany: 14344,\n    united_kingdom: 11794,\n    italy: 7519,\n    poland: 5642,\n    dominican_republic: 1355,\n  },\n  {\n    year: 2003,\n    rest_of_the_world: 8354,\n    mexico: 11951,\n    netherlands: 694147,\n    belgium: 2240,\n    canada: 386142,\n    ireland: 95914,\n    germany: 13917,\n    united_kingdom: 9518,\n    italy: 8777,\n    poland: 9923,\n    dominican_republic: 1377,\n  },\n  {\n    year: 2004,\n    rest_of_the_world: 8211,\n    mexico: 12405,\n    netherlands: 698363,\n    belgium: 3109,\n    canada: 361144,\n    ireland: 73398,\n    germany: 13971,\n    united_kingdom: 11995,\n    italy: 7646,\n    poland: 8187,\n    dominican_republic: 1470,\n  },\n  {\n    year: 2005,\n    rest_of_the_world: 9644,\n    mexico: 13740,\n    netherlands: 704236,\n    belgium: 4851,\n    canada: 351015,\n    ireland: 101121,\n    germany: 14478,\n    united_kingdom: 12147,\n    italy: 9943,\n    poland: 11767,\n    dominican_republic: 1450,\n  },\n  {\n    year: 2006,\n    rest_of_the_world: 9959,\n    mexico: 16318,\n    netherlands: 828601,\n    belgium: 7211,\n    canada: 380863,\n    ireland: 98620,\n    germany: 14460,\n    united_kingdom: 11857,\n    italy: 12410,\n    poland: 10796,\n    dominican_republic: 1503,\n  },\n  {\n    year: 2007,\n    rest_of_the_world: 10041,\n    mexico: 16204,\n    netherlands: 789142,\n    belgium: 11436,\n    canada: 397821,\n    ireland: 105031,\n    germany: 15825,\n    united_kingdom: 11984,\n    italy: 16381,\n    poland: 13812,\n    dominican_republic: 1432,\n  },\n  {\n    year: 2008,\n    rest_of_the_world: 9757,\n    mexico: 15858,\n    netherlands: 767479,\n    belgium: 12200,\n    canada: 362440,\n    ireland: 109655,\n    germany: 13625,\n    united_kingdom: 11612,\n    italy: 19503,\n    poland: 12478,\n    dominican_republic: 1502,\n  },\n  {\n    year: 2009,\n    rest_of_the_world: 8720,\n    mexico: 15210,\n    netherlands: 662921,\n    belgium: 10391,\n    canada: 280890,\n    ireland: 101793,\n    germany: 12346,\n    united_kingdom: 9022,\n    italy: 20051,\n    poland: 10792,\n    dominican_republic: 1546,\n  },\n  {\n    year: 2010,\n    rest_of_the_world: 9035,\n    mexico: 15787,\n    netherlands: 652054,\n    belgium: 12078,\n    canada: 311936,\n    ireland: 100205,\n    germany: 14213,\n    united_kingdom: 9374,\n    italy: 22375,\n    poland: 11715,\n    dominican_republic: 1431,\n  },\n  {\n    year: 2011,\n    rest_of_the_world: 8749,\n    mexico: 16688,\n    netherlands: 600947,\n    belgium: 16111,\n    canada: 280736,\n    ireland: 115873,\n    germany: 13811,\n    united_kingdom: 8382,\n    italy: 23133,\n    poland: 11388,\n    dominican_republic: 1348,\n  },\n  {\n    year: 2012,\n    rest_of_the_world: 7840,\n    mexico: 17809,\n    netherlands: 612335,\n    belgium: 18017,\n    canada: 243315,\n    ireland: 110408,\n    germany: 9173,\n    united_kingdom: 8182,\n    italy: 25365,\n    poland: 12752,\n    dominican_republic: 1516,\n  },\n  {\n    year: 2013,\n    rest_of_the_world: 6099,\n    mexico: 18618,\n    netherlands: 568978,\n    belgium: 17206,\n    canada: 231047,\n    ireland: 108615,\n    germany: 8158,\n    united_kingdom: 7576,\n    italy: 19198,\n    poland: 12225,\n    dominican_republic: 1153,\n  },\n  {\n    year: 2014,\n    rest_of_the_world: 6503,\n    mexico: 21524,\n    netherlands: 542067,\n    belgium: 22213,\n    canada: 207130,\n    ireland: 82255,\n    germany: 6784,\n    united_kingdom: 5739,\n    italy: 20126,\n    poland: 12770,\n    dominican_republic: 1120,\n  },\n  {\n    year: 2015,\n    rest_of_the_world: 6650,\n    mexico: 22716,\n    netherlands: 570892,\n    belgium: 27175,\n    canada: 201833,\n    ireland: 106226,\n    germany: 7161,\n    united_kingdom: 5220,\n    italy: 19745,\n    poland: 13327,\n    dominican_republic: 1299,\n  },\n];\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Stack Chart</SectionHeader>\n          <DataViz\n            id={'example-stack-chart'}\n            vizType={VizType.StackChart}\n            config={config}\n            data={data}\n          />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <TwoColumnSection>\n          <Code>\n            {configAsString}\n          </Code>\n          <Code>\n            {dataAsString}\n          </Code>\n      </TwoColumnSection>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  ClusterChartDatum,\n} from 'react-fast-charts';\n\nconst data: ClusterChartDatum[] = [\n  {\n    name: 'Value 1',\n    label: 'Value 1',\n    value: 78,\n    fill: 'green',\n  },\n  {\n    name: 'Value 2',\n    label: 'Value 2',\n    value: 67,\n    fill: 'orange',\n  },\n  {\n    name: 'Value 3',\n    label: 'Value 3',\n    value: 48,\n    fill: 'pink',\n  },\n  {\n    name: 'Value 4',\n    label: 'Value 4',\n    value: 39,\n    fill: 'red',\n  },\n  {\n    name: 'Value 5',\n    label: 'Value 5',\n    value: 69,\n    fill: 'brown',\n  },\n  {\n    name: 'Value 6',\n    label: 'Value 6',\n    value: 24,\n    fill: 'salmon',\n  },\n];\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  ClusterChartDatum,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-cluster-chart'}\n  vizType={VizType.ClusterChart}\n  data={data}\n/>\n`;\n\nconst dataAsString = `\nconst data: ClusterChartDatum[] = [\n  {\n    name: 'Value 1',\n    label: 'Value 1',\n    value: 78,\n    fill: 'green',\n  },\n  {\n    name: 'Value 2',\n    label: 'Value 2',\n    value: 67,\n    fill: 'orange',\n  },\n  {\n    name: 'Value 3',\n    label: 'Value 3',\n    value: 48,\n    fill: 'pink',\n  },\n  {\n    name: 'Value 4',\n    label: 'Value 4',\n    value: 39,\n    fill: 'red',\n  },\n  {\n    name: 'Value 5',\n    label: 'Value 5',\n    value: 69,\n    fill: 'brown',\n  },\n  {\n    name: 'Value 6',\n    label: 'Value 6',\n    value: 24,\n    fill: 'salmon',\n  },\n];\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Cluster Chart</SectionHeader>\n          <DataViz\n            id={'example-cluster-chart'}\n            vizType={VizType.ClusterChart}\n            data={data}\n          />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  BoxAndWhiskersChartDatum,\n} from 'react-fast-charts';\n\nconst data: BoxAndWhiskersChartDatum[] = [\n  {\n    category: '2010',\n    label: 'Value 1',\n    value: 7,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 2',\n    value: 5,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 3',\n    value: 3,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 4',\n    value: 8,\n    plotPoint: true,\n    primaryPoint: true,\n  },\n  {\n    category: '2010',\n    label: 'Value 5',\n    value: 12,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 6',\n    value: 13,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 7',\n    value: 9,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 1',\n    value: 9,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 2',\n    value: 7,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 3',\n    value: 6,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 4',\n    value: 8,\n    plotPoint: true,\n    primaryPoint: true,\n  },\n  {\n    category: '2020',\n    label: 'Value 5',\n    value: 18,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 6',\n    value: 11,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 7',\n    value: 10,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n];\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  BoxAndWhiskersChartDatum,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-box-and-whiskers-chart'}\n  vizType={VizType.BoxAndWhiskersChart}\n  data={data}\n/>\n`;\n\nconst dataAsString = `\nconst data: BoxAndWhiskersChartDatum[] = [\n  {\n    category: '2010',\n    label: 'Value 1',\n    value: 7,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 2',\n    value: 5,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 3',\n    value: 3,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 4',\n    value: 8,\n    plotPoint: true,\n    primaryPoint: true,\n  },\n  {\n    category: '2010',\n    label: 'Value 5',\n    value: 12,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 6',\n    value: 13,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 7',\n    value: 9,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 1',\n    value: 9,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 2',\n    value: 7,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 3',\n    value: 6,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 4',\n    value: 8,\n    plotPoint: true,\n    primaryPoint: true,\n  },\n  {\n    category: '2020',\n    label: 'Value 5',\n    value: 18,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 6',\n    value: 11,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 7',\n    value: 10,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n];\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Box and Whiskers Chart</SectionHeader>\n        <DataViz\n          id={'example-box-and-whiskers-chart'}\n          vizType={VizType.BoxAndWhiskersChart}\n          data={data}\n        />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n} from 'react-fast-charts';\n\nconst codeAsString = `import DataViz, {\n  VizType,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-error-message'}\n  vizType={VizType.Error}\n  message={'There was an error for this chart'}\n/>\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Error</SectionHeader>\n        <DataViz\n          id={'example-error-message'}\n          vizType={VizType.Error}\n          message={'There was an error for this chart'}\n        />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n} from '../styling/styleUtils';\nimport {ColorScaleLegend} from 'react-fast-charts';\n\nconst codeAsString = `import {ColorScaleLegend} from 'react-fast-charts';\n\n\n...\n\n\n<ColorScaleLegend\n  title={'Legend Title'}\n  minLabel={0}\n  maxLabel={100}\n  minColor={'red'}\n  maxColor={'blue'}\n/>\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Color Scale Legend</SectionHeader>\n        <ColorScaleLegend\n          title={'Legend Title'}\n          minLabel={0}\n          maxLabel={100}\n          minColor={'red'}\n          maxColor={'blue'}\n        />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n} from '../styling/styleUtils';\nimport {HorizontalLegend} from 'react-fast-charts';\n\nconst codeAsString = `import {HorizontalLegend} from 'react-fast-charts';\n\n\n...\n\n\n<HorizontalLegend\n  legendList={[\n    {\n      label: 'Box 1',\n      fill: 'red',\n      stroke: undefined,\n    },\n    {\n      label: 'Box 2',\n      fill: 'blue',\n      stroke: undefined,\n    },\n    {\n      label: 'Box 3',\n      fill: 'green',\n      stroke: undefined,\n    },\n  ]}\n/>\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Horizontal Legend</SectionHeader>\n        <HorizontalLegend\n          legendList={[\n            {\n              label: 'Box 1',\n              fill: 'red',\n              stroke: undefined,\n            },\n            {\n              label: 'Box 2',\n              fill: 'blue',\n              stroke: undefined,\n            },\n            {\n              label: 'Box 3',\n              fill: 'green',\n              stroke: undefined,\n            },\n          ]}\n        />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n} from '../styling/styleUtils';\nimport {HowToReadDots} from 'react-fast-charts';\n\nconst codeAsString = `import {HowToReadDots} from 'react-fast-charts';\n\n\n...\n\n\n<HowToReadDots\n  items={[\n    {\n      label: 'Dot 1',\n      color: 'rgba(138,83,150,0.5)',\n    },\n    {\n      label: 'Dot 2',\n      color: 'rgba(50,122,118,0.5)',\n    },\n  ]}\n  highlighted={{\n    label: 'Dot 2',\n    color: 'rgba(50,122,118,0.5)',\n  }}\n/>\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>How To Read Dots</SectionHeader>\n        <div style={{maxWidth: 250}}>\n          <HowToReadDots\n            items={[\n              {\n                label: 'Dot 1',\n                color: 'rgba(138,83,150,0.5)',\n              },\n              {\n                label: 'Dot 2',\n                color: 'rgba(50,122,118,0.5)',\n              },\n            ]}\n            highlighted={{\n              label: 'Dot 2',\n              color: 'rgba(50,122,118,0.5)',\n            }}\n          />\n        </div>\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n} from '../styling/styleUtils';\nimport {Legend} from 'react-fast-charts';\n\nconst codeAsString = `import {Legend} from 'react-fast-charts';\n\n\n...\n\n\n<Legend\n  legendList={[\n    {\n      label: 'Box 1',\n      fill: 'red',\n      stroke: undefined,\n    },\n    {\n      label: 'Box 2',\n      fill: 'blue',\n      stroke: undefined,\n    },\n    {\n      label: 'Box 3',\n      fill: 'green',\n      stroke: undefined,\n    },\n  ]}\n/>\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Legend</SectionHeader>\n        <Legend\n          legendList={[\n            {\n              label: 'Box 1',\n              fill: 'red',\n              stroke: undefined,\n            },\n            {\n              label: 'Box 2',\n              fill: 'blue',\n              stroke: undefined,\n            },\n            {\n              label: 'Box 3',\n              fill: 'green',\n              stroke: undefined,\n            },\n          ]}\n        />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n    </Content>\n  );\n};\n\n","import React from 'react'\nimport GlobalStyles from './styling/GlobalStyles';\nimport { Root } from './styling/Grid';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport {VizType} from 'react-fast-charts';\n\nimport Landing from './pages';\nimport StickySideNav from './components/StickySideNav';\n\nimport ScatterPlot from './pages/ScatterPlot';\nimport BarChart from './pages/BarChart';\nimport ClusterBarChart from './pages/ClusterBarChart';\nimport RadarChart from './pages/RadarChart';\nimport GeoMap from './pages/GeoMap';\nimport LineChart from './pages/LineChart';\nimport TreeMap from './pages/TreeMap';\nimport StackChart from './pages/StackChart';\nimport ClusterChart from './pages/ClusterChart';\nimport BoxAndWhiskersChart from './pages/BoxAndWhiskersChart';\nimport ErrorViz from './pages/Error';\n\nimport ColorScaleLegend from './pages/ColorScaleLegend';\nimport HorizontalLegend from './pages/HorizontalLegend';\nimport HowToReadDots from './pages/HowToReadDots';\nimport Legend from './pages/Legend';\n\nconst navItems = [\n  {label: 'Scatter Plot', target: '#/' + VizType.ScatterPlot},\n  {label: 'Bar Chart', target: '#/' + VizType.BarChart},\n  {label: 'Cluster Bar Chart', target: '#/' + VizType.ClusterBarChart},\n  {label: 'Radar Chart', target: '#/' + VizType.RadarChart},\n  {label: 'GeoMap', target: '#/' + VizType.GeoMap},\n  {label: 'Line Chart', target: '#/' + VizType.LineChart},\n  {label: 'TreeMap', target: '#/' + VizType.TreeMap},\n  {label: 'Stack Chart', target: '#/' + VizType.StackChart},\n  {label: 'Cluster Chart', target: '#/' + VizType.ClusterChart},\n  {label: 'Box And Whiskers Chart', target: '#/' + VizType.BoxAndWhiskersChart},\n  {label: 'Error', target: '#/' + VizType.Error},\n\n  {label: 'Color Scale Legend', target: '#/ColorScaleLegend'},\n  {label: 'Horizontal Legend', target: '#/HorizontalLegend'},\n  {label: 'How To Read Dots', target: '#/HowToReadDots'},\n  {label: 'Legend', target: '#/Legend'},\n]\n\nconst App = () => {\n  return (\n    <Root>\n      <GlobalStyles />\n        <StickySideNav\n          links={navItems}\n          backgroundColor={'#ecf0f2'}\n          borderColor={'#819ea8'}\n          hoverColor={'#b7c7cd'}\n        />\n        <Router>\n          <Switch>\n              <Route exact path={'/' + VizType.ScatterPlot} component={ScatterPlot} />\n              <Route exact path={'/' + VizType.BarChart} component={BarChart} />\n              <Route exact path={'/' + VizType.ClusterBarChart} component={ClusterBarChart} />\n              <Route exact path={'/' + VizType.RadarChart} component={RadarChart} />\n              <Route exact path={'/' + VizType.GeoMap} component={GeoMap} />\n              <Route exact path={'/' + VizType.LineChart} component={LineChart} />\n              <Route exact path={'/' + VizType.TreeMap} component={TreeMap} />\n              <Route exact path={'/' + VizType.StackChart} component={StackChart} />\n              <Route exact path={'/' + VizType.ClusterChart} component={ClusterChart} />\n              <Route exact path={'/' + VizType.BoxAndWhiskersChart} component={BoxAndWhiskersChart} />\n              <Route exact path={'/' + VizType.Error} component={ErrorViz} />\n              <Route exact path={'/ColorScaleLegend'} component={ColorScaleLegend} />\n              <Route exact path={'/HorizontalLegend'} component={HorizontalLegend} />\n              <Route exact path={'/HowToReadDots'} component={HowToReadDots} />\n              <Route exact path={'/Legend'} component={Legend} />\n            <Route component={Landing} />\n          </Switch>\n        </Router>\n    </Root>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}