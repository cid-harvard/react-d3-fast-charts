{"version":3,"sources":["../../dist/download~bjCODHXh.svg","../../dist/data~tHUHAyCj.svg","styling/Grid.ts","styling/styleUtils.ts","styling/GlobalStyles.tsx","../../src/dataViz/scatterPlot.ts","../../src/dataViz/barChart.ts","../../src/dataViz/Utils.ts","../../src/dataViz/lineChart.ts","../../src/dataViz/downloadImage.ts","../../src/dataViz/differenceTreeMap.ts","../../src/dataViz/utils/differenceTreeMapUtils.ts","../../src/dataViz/ColorScaleLegend.tsx","../../src/dataViz/HorizontalLegend.tsx","../../src/dataViz/HowToReadDots.tsx","../../src/dataViz/Legend.tsx","../../src/index.tsx","../../src/dataViz/radarChart.ts","../../src/dataViz/geoMap.ts","../../src/dataViz/clusterBarChart.ts","../../src/dataViz/treeMap.ts","../../src/dataViz/stackChart.ts","../../src/dataViz/clusterChart.ts","../../src/dataViz/boxAndWhiskers.ts","pages/index.tsx","components/StickySideNav.tsx","pages/ScatterPlot.tsx","pages/BarChart.tsx","pages/ClusterBarChart.tsx","pages/RadarChart.tsx","pages/GeoMap.tsx","pages/LineChart.tsx","pages/TreeMap.tsx","pages/DifferenceTreeMap.tsx","pages/StackChart.tsx","pages/ClusterChart.tsx","pages/BoxAndWhiskersChart.tsx","pages/Error.tsx","pages/ColorScaleLegend.tsx","pages/HorizontalLegend.tsx","pages/HowToReadDots.tsx","pages/Legend.tsx","App.tsx","index.tsx"],"names":["module","exports","gridLines","Root","styled","div","Content","header","contentMaxWidth","main","FullWidthContentContainer","NavContainer","nav","secondaryFont","footer","TwoColumnSectionBase","span","h1","h4","legendColor","label","columnDefs","TwoColumnSection","SectionHeaderBase","h3","SectionHeader","Code","color","h5","p","ol","pre","CenteredCode","h2","cite","GlobalStyles","createGlobalStyle","ranges","divider","suffix","formatNumber","n","range","parseFloat","adaptLabelFontSize","d","labelAvailableWidth","labelWidth","this","LabelPlacement","LabelAnchor","LabelPosition","AnimationDirection","input","svg","size","tooltip","labelFont","animateOn","formatValue","mergedData","primaryData","mergedBranchesData","primaryDatum","secondaryDatum","secondaryData","datum","leaves","primaryValue","secondaryValue","secondaryLeaf","leaf","primaryLeaf","children","id","transformData","margin","width","height","treemap","d3","root","b","a","cell","larger","smaller","diff","Math","lighten","_d","text","t","rect","parentElement","querySelector","rectWidth","rectHeight","words","word","line","lineNumber","x","y","dy","tspan","node","FileFormat","LabelContainer","ColorScaleBar","ColorScaleBarCustom","Legend","props","maxLabel","minLabel","title","rootStyles","gradientBar","minColor","maxColor","style","background","gradientString","React","LegendItem","LegendBlock","Label","legendList","itemStyles","labelStyles","legendItems","fill","stroke","key","backgroundColor","borderColor","ListContainer","ListItem","HighlightedItem","HowToReadDots","items","highlighted","highlightedItem","SizingElm","Tooltip","DownloadButtonsContainer","downloadButtonStyles","darken","DownloadImageButton","DownloadDataButton","SvgIcon","ErrorMessage","Caption","VizType","enablePNGDownload","enableSVGDownload","jsonToDownload","triggerGoogleAnalyticsEvent","sizingNodeRef","useRef","svgNodeRef","tooltipNodeRef","useState","window","windowWidth","setWindowWidth","useEffect","updateWindowWidth","debounce","svgNode","sizingNode","select","data","axisLabels","axisMinMax","showAverageLines","averageLineText","quadrantLabels","container","allXValues","allYValues","rawMinX","rawMaxX","rawMinY","rawMaxY","minScaleBuffer","maxScaleBuffer","minX","maxX","minY","maxY","xScale","yScale","makeGridlinesX","makeGridlinesY","appendQuadrantLabel","xVal","i","textParts","radius","tooltipContent","tooltipContentOnly","content","onClick","createScatterPlot","clientHeight","hideAxis","averageLines","createBarChart","options","config","factor","factorLegend","levels","maxValue","radians","opacityArea","ToRight","TranslateX","TranslateY","ExtraWidthX","ExtraWidthY","Object","allAxis","total","j","levelFactor","series","axis","dataValues","value","point","shape","labels","originalI","parseInt","createRadarChart","scaleOrdinal","center","scale","offset","projection","path","bounds","hscale","vscale","allValues","rawMinValue","rawMaxValue","minValue","colorScale","createGeoMap","formatAxis","animateAxis","tickCount","animateBars","g","x1","groups","groupName","valueName","onMouseMove","pageY","formatY","yDomain","startMinY","startMaxY","startY","createClusterBarChart","showGridLines","valueline","coord","labelColor","coords","labelDataIndex","targetCood","paths","adjustedCoords","shortenedLine","shortPath","document","multiplier","formatX","xDomain","startMaxX","startMinX","startX","animationDuration","animationDirection","animationStartIndex","axisDelay","creatLineChart","createTreeMap","createDifferenceTreeMap","enableBrushZoom","keys","stackedData","brush","extent","areaChart","idleTimeout","setTimeout","idled","xAxis","area","groupConfig","group","createStackChart","hideLabels","circleSpacing","max","srcData","parentId","sizeScale","layout","stratData","nodes","createClusterChart","sumstat","q1","median","q3","interQuantileRange","min","allCategories","allMinMaxValues","boxWidth","createBoxAndWhiskersChart","handleDownloadImage","fileFormat","canvas","img","svgStr","serializer","canvasContext","url","downloadImage","downloadPNGButton","src","DownloadSVGURL","alt","downloadSVGButton","filename","downloadDataButton","DataSVGURL","downloadButtons","marginTop","undefined","caption","ref","List","ul","li","to","ScatterPlot","BarChart","ClusterBarChart","RadarChart","GeoMap","LineChart","TreeMap","StackChart","ClusterChart","BoxAndWhiskersChart","Error","Ul","Link","StickySideNav","links","hoverColor","colorTheme","navLinks","map","target","href","vizType","bottom","left","data1","data2","dataNumber","setDataNumber","curr","start","end","worldMap","JSON","parse","featuresWithValues","features","feature","percent","random","properties","name","toFixed","labelPosition","Top","labelAnchor","Middle","Center","Left","toString","child","push","DifferenceTreeMap","val","primaryKey","year","rest_of_the_world","mexico","netherlands","belgium","canada","ireland","germany","united_kingdom","italy","poland","dominican_republic","category","plotPoint","primaryPoint","message","maxWidth","navItems","App","exact","component","ErrorViz","ColorScaleLegend","HorizontalLegend","Landing","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a6845341.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/download~bjCODHXh.02e9c647.svg\";","module.exports = __webpack_public_path__ + \"static/media/data~tHUHAyCj.0ed67368.svg\";","import styled from 'styled-components/macro';\n\nconst gridLines = {\n  // Horizontal Grid Lines\n  pageTop: 'countryToolsGlobalGridPageTop',\n  bannerTop: 'countryToolsGlobalGridBannerTop',\n  bannerBottom: 'countryToolsGlobalGridBannerBottom',\n  headerTop: 'countryToolsGlobalGridHeaderTop',\n  headerBottom: 'countryToolsGlobalGridHeaderBottom',\n  mobileMenuTop: 'countryToolsGlobalGridMobileMenuTop',\n  mobileMenuBottom: 'countryToolsGlobalGridMobileMenuBottom',\n  contentTop: 'countryToolsGlobalGridContentTop',\n  contentBottom: 'countryToolsGlobalGridContentBottom',\n  footerTop: 'countryToolsGlobalGridFooterTop',\n  footerBottom: 'countryToolsGlobalGridFooterBottom',\n  pageBottom: 'countryToolsGlobalGridPageBottom',\n  // Vertical Grid Lines\n  pageLeft: 'countryToolsGlobalGridPageLeft',\n  pageMarginLeft: 'countryToolsPageMarginLeft',\n  contentStart: 'countryToolsContentStart',\n  contentEnd: 'countryToolsContentEnd',\n  navStart: 'countryToolsNavStart',\n  navEnd: 'countryToolsNavEnd',\n  pageMarginRight: 'countryToolsPageMarginLeft',\n  pageRight: 'countryToolsGlobalGridPageRight',\n};\n\nexport const gridSmallMediaWidth = 700; // in px\n\nconst contentMaxWidth = 900; // in px\nconst navMaxWidth = 180; // in px\n\n\nexport const Root = styled.div`\n  display: grid;\n  min-height: 100vh;\n  grid-template-rows:\n    [${gridLines.pageTop} ${gridLines.bannerTop}] auto\n    [${gridLines.bannerBottom} ${gridLines.headerTop}] auto\n    [${gridLines.headerBottom} ${gridLines.mobileMenuTop}] auto\n    [${gridLines.mobileMenuBottom} ${gridLines.contentTop}] 1fr\n    [${gridLines.contentBottom} ${gridLines.footerTop}] auto\n    [${gridLines.footerBottom} ${gridLines.pageBottom}];\n\n  grid-template-columns:\n    [${gridLines.pageLeft} ${gridLines.pageMarginLeft}] minmax(1rem, 1fr)\n    [${gridLines.contentStart}] minmax(auto, ${contentMaxWidth}px)\n    [${gridLines.contentEnd} ${gridLines.navStart}]  minmax(auto, ${navMaxWidth}px)\n    [${gridLines.navEnd} ${gridLines.pageMarginRight}] minmax(1rem, 1fr)\n    [${gridLines.pageRight}];\n`;\n\nexport const FullWidthHeader = styled.header`\n  grid-row: ${gridLines.headerTop} / ${gridLines.headerBottom};\n  grid-column: ${gridLines.pageLeft} / ${gridLines.pageRight};\n`;\nexport const FullWidthHeaderContent = styled.div`\n  max-width: ${contentMaxWidth + navMaxWidth}px;\n  margin: 0 auto;\n`;\n\nexport const Header = styled.header`\n  grid-row: ${gridLines.headerTop} / ${gridLines.headerBottom};\n  grid-column: ${gridLines.contentStart} / ${gridLines.navEnd};\n`;\n\nexport const Content = styled.main`\n  grid-row: ${gridLines.contentTop} / ${gridLines.contentBottom};\n  grid-column: ${gridLines.contentStart} / ${gridLines.contentEnd};\n\n  @media (max-width: ${gridSmallMediaWidth}px) {\n    grid-column: ${gridLines.contentStart} / ${gridLines.navEnd};\n  }\n`;\n\nexport const ContentFull = styled.main`\n  grid-row: ${gridLines.contentTop} / ${gridLines.contentBottom};\n  grid-column: ${gridLines.contentStart} / ${gridLines.navEnd};\n`;\n\nexport const FullWidthContent = styled.main`\n  grid-row: ${gridLines.contentTop} / ${gridLines.contentBottom};\n  grid-column: ${gridLines.pageLeft} / ${gridLines.pageRight};\n`;\n\nexport const FullWidthContentContainer = styled.div`\n  max-width: ${contentMaxWidth + navMaxWidth}px;\n  margin: 0 auto;\n`;\n\nexport const NavContainer = styled.nav`\n  grid-row: ${gridLines.contentTop} / ${gridLines.contentBottom};\n  grid-column: ${gridLines.navStart} / ${gridLines.navEnd};\n  position: relative;\n  z-index: 200;\n\n  @media (max-width: ${gridSmallMediaWidth}px) {\n    grid-row: ${gridLines.mobileMenuTop} / ${gridLines.mobileMenuBottom};\n    grid-column: ${gridLines.pageLeft} / ${gridLines.pageRight};\n    position: sticky;\n    top: 0;\n  }\n`;\n\nexport const FullWidthFooter = styled.footer`\n  grid-row: ${gridLines.footerTop} / ${gridLines.footerBottom};\n  grid-column: ${gridLines.pageLeft} / ${gridLines.pageRight};\n`;\nexport const FullWidthFooterContent = styled.footer`\n  max-width: ${contentMaxWidth + navMaxWidth}px;\n  margin: 0 auto;\n`;\n\nexport const storyMobileWidth = 700; // in px\n\nexport const StoriesGrid = styled(FullWidthContentContainer)`\n  display: grid;\n  grid-template-columns: 8fr 5fr;\n  column-gap: 2rem;\n  position: relative;\n\n  @media (max-width: ${storyMobileWidth}px) {\n    grid-template-columns: 1fr;\n  }\n`;\n","import styled from 'styled-components/macro';\nimport {storyMobileWidth} from './Grid';\n\nexport const baseColor = '#333333'; // dark gray/black color for text\nexport const lightBaseColor = '#7c7c7c'; // light gray color for subtitles and contextual information\nexport const lightBorderColor = '#dcdcdc'; // really light gray color for subtle borders between elements\n\nexport const tertiaryColor = '#f3f3f3'; // really light gray color for use as a hover background color on cards\n\nexport const primaryFont = \"'Source Sans Pro', sans-serif\";\nexport const secondaryFont = \"'OfficeCodeProWeb', monospace\";\n\nexport const semiBoldFontBoldWeight = 600;\nexport const boldFontWeight = 700;\n\nexport const Light = styled.span`\n  color: ${lightBaseColor};\n`;\n\nexport const StandardH1 = styled.h1`\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-size: 2.2rem;\n  font-weight: 400;\n`;\n\ninterface HeaderWithLegendProps {\n  legendColor: string;\n}\n\nexport const HeaderWithLegend = styled.h4<HeaderWithLegendProps>`\n  margin-top: 0;\n  display: flex;\n  align-items: center;\n  font-weight: 400;\n  font-size: 1.1rem;\n\n  &:before {\n    content: '';\n    display: inline-block;\n    width: 1.5rem;\n    height: 1.5rem;\n    background-color: ${({legendColor}) => legendColor};\n    margin-right: 0.5rem;\n  }\n`;\n\nexport const labelMarginBottom = 0.3; // in rem\n\nexport const Label = styled.label`\n  font-family: ${secondaryFont};\n  margin-bottom: ${labelMarginBottom}rem;\n  display: block;\n`;\n\ninterface TwoColumnSectionProps {\n  columnDefs?: string;\n}\n\nexport const TwoColumnSectionBase = styled.div<TwoColumnSectionProps>`\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-template-columns: ${({columnDefs}) => columnDefs ? columnDefs : '1fr 1fr'};\n`;\n\nexport const TwoColumnSection = styled(TwoColumnSectionBase)`\n  margin-bottom: 2rem;\n\n  @media (max-width: 850px) {\n    grid-template-columns: auto;\n    grid-template-rows: auto auto auto;\n  }\n`;\nexport const InlineTwoColumnSection = styled(TwoColumnSectionBase)`\n  @media (max-width: 850px) {\n    padding: 1rem;\n  }\n\n  @media (max-width: 500px) {\n    grid-template-columns: auto;\n    grid-template-rows: auto auto auto;\n  }\n`;\n\nconst SectionHeaderBase = styled.h3`\n  grid-row: 1;\n  grid-column: 1 / -1;\n  font-family: ${secondaryFont};\n  color: ${baseColor};\n  letter-spacing: 1px;\n`;\n\nexport const SectionHeader = styled(SectionHeaderBase)`\n  display: flex;\n  align-items: center;\n  font-size: 1.4rem;\n  text-transform: uppercase;\n  font-weight: 400;\n\n  &:after {\n    content: '';\n    display: block;\n    height: 0;\n    border-top: 2px solid ${lightBorderColor};\n    flex-grow: 1;\n    margin-left: 1.25rem;\n  }\n`;\n\ninterface TitleColorProps {\n  color?: string;\n}\n\nexport const SectionHeaderSecondary = styled(SectionHeaderBase)<TitleColorProps>`\n  font-size: 1.2rem;\n  text-transform: uppercase;\n  font-weight: 600;\n  color: ${({color}) => color ? color : baseColor};\n`;\n\nexport const SubSectionHeader = styled.h4<TitleColorProps>`\n  margin-top: 0;\n  font-weight: 600;\n  text-transform: uppercase;\n  font-size: 1.2rem;\n  letter-spacing: 1px;\n  font-family: ${secondaryFont};\n  color: ${({color}) => color ? color : baseColor};\n`;\n\nexport const ParagraphHeader = styled.h5<TitleColorProps>`\n  font-family: ${secondaryFont};\n  letter-spacing: 1px;\n  display: flex;\n  align-items: center;\n  margin: 0 0 0.5rem;\n  color: ${({color}) => color ? color : baseColor};\n\n  &:after {\n    content: '';\n    display: block;\n    height: 0;\n    border-top: 2px solid ${lightBorderColor};\n    flex-grow: 1;\n    margin-left: 1rem;\n  }\n`;\n\nexport const NarrowPaddedColumn = styled.div`\n  padding: 0 0.5rem;\n`;\n\nexport const LargeParagraph = styled.p`\n  font-size: 1.2rem;\n  margin-bottom: 2rem;\n`;\n\nexport const SmallParagraph = styled.p`\n  font-size: 0.8rem;\n`;\n\nexport const SmallOrderedList = styled.ol`\n  li {\n    font-size: 0.8rem;\n  }\n`;\n\nexport const Card = styled.div`\n  padding: 0.7rem;\n  border: solid 1px ${lightBorderColor};\n  box-shadow: 0px 0px 3px -1px #b5b5b5;\n  margin-bottom: 2rem;\n  background-color: #fff;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${tertiaryColor};\n  }\n`;\n\nexport const Code = styled.pre`\n  background-color: ${tertiaryColor};\n  color: #444;\n  padding: 1rem;\n  box-sizing: border-box;\n  margin: 1rem 1rem;\n`;\n\nexport const CenteredCode = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const FullWidth = styled.div`\n  grid-column: 1 / -1;\n`;\n\nexport const CoverPhoto = styled.div`\n  grid-column: 1 / -1;\n  height: 40vh;\n  background-color: ${tertiaryColor};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const StoryTitle = styled.h1`\n  text-align: center;\n  margin: 2rem 0 1.5rem;\n  font-size: 2.5rem;\n  margin-top: 2rem;\n  letter-spacing: 1px;\n  text-align: center;\n`;\n\nexport const StoryHeading = styled.h2`\n  grid-column: 1 / -1;\n  font-weight: 600;\n  font-size: 1.75rem;\n  text-align: center;\n`;\n\nexport const Authors = styled.div`\n  font-family: ${secondaryFont};\n  letter-spacing: -0.8px;\n  font-size: 1rem;\n  color: #666;\n  text-align: center;\n  font-weight: 400;\n  margin-bottom: 1.5rem;\n`;\n\n\nexport const StorySectionContainer = styled.div`\n  min-height: 50vh;\n  position: relative;\n  padding-bottom: 10vh;\n`;\n\nexport const StickyContainer = styled.div`\n  position: sticky;\n  top: 0;\n  min-height: 80vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  @media (max-width: ${storyMobileWidth}px) {\n    position: relative;\n    z-index: 10;\n  }\n`;\n\nexport const VizSource = styled.cite`\n  text-align: center;\n  display: block;\n  margin: 0.75rem 0 1rem;\n  font-size: 0.7rem;\n`;\n\nexport const VizSourceCompact = styled.cite`\n  text-align: center;\n  display: block;\n  margin: 0.5rem 0 0.25rem;\n  font-size: 0.7rem;\n`;\n","import { createGlobalStyle } from 'styled-components/macro';\nimport {\n  baseColor,\n  lightBaseColor,\n  semiBoldFontBoldWeight,\n  primaryFont,\n} from './styleUtils';\n\nconst GlobalStyles = createGlobalStyle`\n  @media(max-width: 600px) {\n    html {\n      font-size: 14px;\n    }\n  }\n  @media(max-width: 450px) {\n    html {\n      font-size: 12px;\n    }\n  }\n\n  body {\n    font-family: ${primaryFont};\n    color: ${baseColor};\n    margin: 0;\n    padding: 0;\n  }\n\n  h1 {\n    font-weight: ${semiBoldFontBoldWeight};\n    font-size: 1.7rem;\n  }\n\n  h3 {\n    font-weight: ${semiBoldFontBoldWeight};\n    font-size: 1.1rem;\n    color: ${lightBaseColor};\n  }\n\n  p {\n    line-height: 1.5;\n    margin: 0 0 1rem;\n  }\n\n  button {\n    cursor: pointer;\n    border: none;\n    width: auto;\n    text-align: inherit;\n    overflow: visible;\n\n    /* Normalize 'line-height'. Cannot be changed from 'normal' in Firefox 4+. */\n    line-height: normal;\n\n    /* Corrects font smoothing for webkit */\n    -webkit-font-smoothing: inherit;\n    -moz-osx-font-smoothing: inherit;\n\n    /* Corrects inability to style clickable 'input' types in iOS */\n    -webkit-appearance: none;\n\n    /* Remove excess padding and border in Firefox 4+ */\n    &::-moz-focus-inner {\n        border: 0;\n        padding: 0;\n    }\n  }\n\n  ol {\n    padding-left: 1rem;\n\n    li {\n      margin-bottom: 0.6rem;\n      font-size: 0.9rem;\n    }\n  }\n`;\n\nexport default GlobalStyles;\n","import * as d3 from 'd3';\n\nexport interface Datum {\n  label: string;\n  x: number;\n  y: number;\n  fill?: string;\n  radius?: number;\n  tooltipContent?: string;\n  tooltipContentOnly?: boolean;\n  onClick?: () => void;\n  highlighted?: boolean;\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[];\n  size: Dimensions;\n  axisLabels?: {left?: string, bottom?: string};\n  axisMinMax?: {\n    minX?: number,\n    maxX?: number,\n    minY?: number,\n    maxY?: number,\n  };\n  showAverageLines?: boolean;\n  averageLineText?: {left?: string, bottom?: string};\n  quadrantLabels?: {I?: string, II?: string, III?: string, IV?: string};\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const {\n    svg, tooltip, data, size, axisLabels, axisMinMax, showAverageLines,\n    averageLineText, quadrantLabels, labelFont,\n  } = input;\n\n  const margin = {top: 30, right: 30, bottom: 60, left: 60};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  // append the svg object to the body of the page\n  svg\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom);\n\n  const container = svg\n    .append('g')\n      .attr('transform',\n            'translate(' + margin.left + ',' + margin.top + ')');\n\n  const allXValues = data.map(({x}) => x);\n  const allYValues = data.map(({y}) => y);\n\n  const rawMinX = axisMinMax && axisMinMax.minX !== undefined ? axisMinMax.minX : d3.min(allXValues);\n  const rawMaxX = axisMinMax && axisMinMax.maxX !== undefined ? axisMinMax.maxX : d3.max(allXValues);\n  const rawMinY = axisMinMax && axisMinMax.minY !== undefined ? axisMinMax.minY : d3.min(allYValues);\n  const rawMaxY = axisMinMax && axisMinMax.maxY !== undefined ? axisMinMax.maxY : d3.max(allYValues);\n\n  const minScaleBuffer = axisMinMax ? 1 : 0.9;\n  const maxScaleBuffer = axisMinMax ? 1 : 1.1;\n\n  const minX = rawMinX ? Math.floor(rawMinX * minScaleBuffer) : 0;\n  const maxX = rawMaxX ? Math.ceil(rawMaxX * maxScaleBuffer) : 0;\n  const minY = rawMinY ? Math.floor(rawMinY * minScaleBuffer) : 0;\n  const maxY = rawMaxY ? Math.ceil(rawMaxY * maxScaleBuffer) : 0;\n\n\n\n  // Add X axis\n  const xScale = d3.scaleLinear()\n    .domain([minX, maxX])\n    .range([ 0, width ]);\n\n  container.append('g')\n    .attr('transform', 'translate(0,' + height + ')')\n    .call(d3.axisBottom(xScale));\n\n  // Add Y axis\n  const yScale = d3.scaleLinear()\n    .domain([minY, maxY])\n    .range([ height, 0]);\n  container.append('g')\n    .call(d3.axisLeft(yScale));\n\n  // gridlines in x axis function\n  const makeGridlinesX: any = () => d3.axisBottom(xScale).ticks(10);\n\n  // gridlines in y axis function\n  const makeGridlinesY: any = () => d3.axisLeft(yScale).ticks(10);\n\n  // add the X gridlines\n  container.append('g')\n      .attr('class', 'grid')\n      .attr('transform', 'translate(0,' + height + ')')\n      .style('opacity', '0.25')\n      .style('stroke-dasharray', '3 1')\n      .call(makeGridlinesX()\n          .tickSize(-height)\n          .tickFormat(''),\n      );\n\n  // add the Y gridlines\n  container.append('g')\n      .attr('class', 'grid')\n      .style('opacity', '0.25')\n      .style('stroke-dasharray', '3 1')\n      .call(makeGridlinesY()\n          .tickSize(-width)\n          .tickFormat(''),\n      );\n\n  if (showAverageLines) {\n    container.append('line')\n      .attr('x1',xScale(minX))\n      .attr('x2',xScale(maxX))\n      .attr('y1',yScale(maxY / 2) + 0.5)\n      .attr('y2',yScale(maxY / 2) + 0.5)\n      .attr('stroke-width', '1px')\n      .style('pointer-events', 'none')\n      .attr('stroke', '#9e9e9e');\n    container.append('line')\n      .attr('x1',xScale(maxX / 2) + 0.5)\n      .attr('x2',xScale(maxX / 2) + 0.5)\n      .attr('y1',yScale(minY))\n      .attr('y2',yScale(maxY))\n      .attr('stroke-width', '1px')\n      .style('pointer-events', 'none')\n      .attr('stroke', '#9e9e9e');\n  }\n\n  if (averageLineText) {\n    if (averageLineText.left) {\n      container.append('text')\n        .attr('x',xScale(minX) + 4)\n        .attr('y',yScale(maxY / 2) + 12)\n        .style('opacity', 0.8)\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .style('font-size', '12px')\n        .style('pointer-events', 'none')\n        .text(averageLineText.left);\n    }\n    if (averageLineText.bottom) {\n      container.append('text')\n        .attr('x',xScale(maxX / 2) + 4)\n        .attr('y',yScale(minY) - 6)\n        .style('opacity', 0.8)\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .style('font-size', '12px')\n        .style('pointer-events', 'none')\n        .text(averageLineText.bottom);\n\n    }\n  }\n\n  const appendQuadrantLabel = (xVal: number, yVal: number, textParts: string[], textAnchor: string) => {\n    const label = container.append('text')\n        .style('text-anchor', textAnchor)\n        .style('opacity', 0.8)\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .style('font-size', '12px')\n        .style('pointer-events', 'none')\n        .style('dominant-baseline', 'bottom')\n        .attr('x', xVal)\n        .attr('y', yVal);\n\n      label.selectAll('tspan')\n        .data(textParts)\n        .enter()\n        .append('tspan')\n        .text(d => {\n          const text = d;\n          return text !== undefined ? text : '';\n        })\n        .attr('x', xVal)\n        .attr('dx', 0)\n        .attr('dy', (_d, i) => i !== 0 ? 15 : 0);\n\n  };\n\n  if (quadrantLabels !== undefined) {\n    if (quadrantLabels.I !== undefined) {\n      const xVal = width - 4;\n      const yVal = yScale(maxY) + 12;\n      const textParts = (quadrantLabels.I as string).split('\\n');\n      appendQuadrantLabel(xVal, yVal, textParts, 'end');\n    }\n    if (quadrantLabels.II !== undefined) {\n      const xVal = xScale(minX) + 4;\n      const yVal = yScale(maxY) + 12;\n      const textParts = (quadrantLabels.II as string).split('\\n');\n      appendQuadrantLabel(xVal, yVal, textParts, 'start');\n    }\n    if (quadrantLabels.III !== undefined) {\n      const textParts = (quadrantLabels.III as string).split('\\n');\n      const xVal = xScale(minX) + 4;\n      const yVal = yScale(minY) - ((textParts.length - 1) * 15) - 6;\n      appendQuadrantLabel(xVal, yVal, textParts, 'start');\n    }\n    if (quadrantLabels.IV !== undefined) {\n      const textParts = (quadrantLabels.IV as string).split('\\n');\n      const xVal = width - 4;\n      const yVal = yScale(minY) - ((textParts.length - 1) * 15) - 6;\n      appendQuadrantLabel(xVal, yVal, textParts, 'end');\n    }\n  }\n\n  // Add dots\n  container.append('g')\n    .selectAll('dot')\n    .data(data)\n    .enter()\n    .append('circle')\n      .attr('cx', ({x}) => xScale(x))\n      .attr('cy', ({y}) => yScale(y))\n      .attr('r', ({radius}) => radius ? radius : 4)\n      .style('fill', ({fill}) => fill ? fill : '#69b3a2')\n      .style('cursor', ({onClick}) => onClick ? 'pointer' : 'default')\n      .on('mousemove', ({label, tooltipContent, tooltipContentOnly}) => {\n        if (tooltipContentOnly && tooltipContent && tooltipContent.length) {\n          tooltip.html(tooltipContent);\n        } else {\n          const content = tooltipContent === undefined || tooltipContent.length === 0\n            ? '' : `:<br />${tooltipContent}`;\n          tooltip.html(`<strong>${label}</strong>${content}`);\n\n        }\n        tooltip\n          .style('display', 'block')\n          .style('left', (d3.event.pageX + 4) + 'px')\n          .style('top', (d3.event.pageY - 4) + 'px');\n        })\n      .on('mouseout', () => {\n        tooltip\n            .style('display', 'none');\n      })\n      .on('click', ({onClick}) => onClick ? onClick() : undefined);\n\n  const highlighted = data.find(d => d.highlighted);\n  if (highlighted) {\n    // Add highlighted dot background\n    container.append('g')\n      .selectAll('dot')\n      .data([highlighted])\n      .enter()\n      .append('circle')\n        .attr('cx', ({x}) => xScale(x))\n        .attr('cy', ({y}) => yScale(y))\n        .attr('r', 16)\n        .style('fill', ({fill}) => fill ? fill : '#69b3a2')\n        .style('opacity', '0.4')\n        .style('pointer-events', 'none');\n    // Add highlighted dot over to top\n    container.append('g')\n      .selectAll('dot')\n      .data([highlighted])\n      .enter()\n      .append('circle')\n        .attr('cx', ({x}) => xScale(x))\n        .attr('cy', ({y}) => yScale(y))\n        .attr('r', ({radius}) => radius ? radius : 4)\n        .style('fill', ({fill}) => fill ? fill : '#69b3a2')\n        .style('cursor', ({onClick}) => onClick ? 'pointer' : 'default')\n        .on('mousemove', ({label, tooltipContent, tooltipContentOnly}) => {\n          if (tooltipContentOnly && tooltipContent && tooltipContent.length) {\n            tooltip.html(tooltipContent);\n          } else {\n            const content = tooltipContent === undefined || tooltipContent.length === 0\n              ? '' : `:<br />${tooltipContent}`;\n            tooltip.html(`<strong>${label}</strong>${content}`);\n\n          }\n          tooltip\n            .style('display', 'block')\n            .style('left', (d3.event.pageX + 4) + 'px')\n            .style('top', (d3.event.pageY - 4) + 'px');\n          })\n        .on('mouseout', () => {\n          tooltip\n              .style('display', 'none');\n        });\n  }\n\n\n  // append X axis label\n  svg\n    .append('text')\n    .attr('transform', `translate(${width / 2 + margin.left}, ${height + margin.bottom + (margin.top / 2)})`)\n      .style('text-anchor', 'middle')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .text(axisLabels && axisLabels.bottom ? axisLabels.bottom : '');\n\n  // append Y axis label\n  svg\n    .append('text')\n    .attr('transform', 'rotate(-90)')\n      .attr('y', margin.right / 2)\n      .attr('x', 0 - (height / 2 + margin.top))\n      .attr('dy', '0.75em')\n      .style('text-anchor', 'middle')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .text(axisLabels && axisLabels.left ? axisLabels.left : '');\n\n};\n","import * as d3 from 'd3';\nimport {formatNumber} from './Utils';\n\nexport interface Datum {\n  x: string;\n  y: number;\n  fill?: string;\n  stroke?: string;\n  tooltipContent?: string;\n  tooltipContentOnly?: boolean;\n  onClick?: () => void;\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\nexport enum LabelPlacement {\n  left = 'left',\n  right = 'right',\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[][];\n  size: Dimensions;\n  axisLabels?: {left?: string, bottom?: string};\n  axisMinMax?: {\n    minY?: number,\n    maxY?: number,\n  };\n  hideAxis?: {\n    left?: boolean;\n    bottom?: boolean;\n  };\n  averageLines?: {\n    value: number,\n    label?: string;\n    labelPlacement?: LabelPlacement;\n    strokeWidth?: number;\n    strokeDasharray?: number;\n    strokeColor?: string;\n  }[];\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const {\n    svg, data, size, axisLabels, tooltip, axisMinMax, hideAxis,\n    averageLines, labelFont,\n  } = input;\n\n  const margin = {\n    top: 30, right: 30,\n    bottom: axisLabels && axisLabels.bottom ? 60 : 30,\n    left: 35};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n    // set the ranges\n  const xScale = d3.scaleBand()\n            .range([0, width])\n            .padding(0.1);\n  const yScale = d3.scaleLinear()\n            .range([height, 0]);\n\n  // append the svg object to the body of the page\n  // append a 'group' element to 'svg'\n  // moves the 'group' element to the top left margin\n  svg\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom);\n\n  const container = svg\n    .append('g')\n      .attr('transform',\n            'translate(' + margin.left + ',' + margin.top + ')');\n  const allYValues: number[] = [];\n  data.forEach(datum => datum.forEach(({y}) => allYValues.push(y)));\n\n  const minScaleBuffer = 0.9;\n  const maxScaleBuffer = 1.1;\n\n  let minY: number;\n  let maxY: number;\n\n  if (axisMinMax !== undefined && axisMinMax.minY !== undefined) {\n    minY = axisMinMax.minY;\n  } else {\n    const rawMinY = d3.min(allYValues);\n    minY = rawMinY ? Math.floor(rawMinY * minScaleBuffer) : 0;\n  }\n\n  if (axisMinMax !== undefined && axisMinMax.maxY !== undefined) {\n    maxY = axisMinMax.maxY;\n  } else {\n    const rawMaxY = d3.max(allYValues);\n    maxY = rawMaxY ? Math.floor(rawMaxY * maxScaleBuffer) : 0;\n  }\n\n  // Scale the range of the data in the domains\n  xScale.domain(data && data.length ? data[0].map(function(d) { return d.x; }) : [])\n        .rangeRound([0, width])\n        .paddingInner(0.2);\n  yScale.domain([minY, maxY]);\n\n  // append the rectangles for the bar chart\n  data.forEach((dataset, i) => {\n    container.selectAll('.bar-' + i)\n        .data(dataset)\n      .enter().append('rect')\n        .attr('class', 'bar')\n        .attr('x', function(d) {\n          const xVal = xScale(d.x);\n          return xVal ? xVal : 0;\n        })\n        .attr('width', xScale.bandwidth())\n        .attr('y', function(d) { return yScale(d.y); })\n        .style('fill', ({fill}) => fill ? fill : '#69b3a2')\n        .style('stroke', ({stroke}) => stroke ? stroke : 'none')\n        .style('stroke-width', 3)\n        .attr('height', function(d) { return height - yScale(d.y); })\n        .on('mousemove', ({x, tooltipContent, tooltipContentOnly}) => {\n          if (tooltipContentOnly && tooltipContent && tooltipContent.length) {\n            tooltip.html(tooltipContent);\n          } else {\n            const content = tooltipContent === undefined || tooltipContent.length === 0\n              ? '' : `:<br />${tooltipContent}`;\n            tooltip.html(`<strong>${x}</strong>${content}`);\n          }\n          tooltip\n            .style('display', 'block')\n            .style('position', 'fixed')\n            .style('left', d3.event.clientX + 'px')\n            .style('top', d3.event.clientY + 'px');\n          })\n        .on('mouseout', () => {\n          tooltip\n              .style('display', 'none');\n        });\n  });\n\n  // append X axis label\n  if (!(hideAxis && hideAxis.bottom)) {\n    // add the x Axis\n    container.append('g')\n        .attr('transform', 'translate(0,' + height + ')')\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .call(d3.axisBottom(xScale));\n    svg\n      .append('text')\n      .attr('transform', `translate(${width / 2 + margin.left}, ${height + margin.bottom + (margin.top / 2)})`)\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .style('font-size', '0.8rem')\n        .style('text-anchor', 'middle')\n        .text(axisLabels && axisLabels.bottom ? axisLabels.bottom : '');\n  }\n  if (!(hideAxis && hideAxis.left)) {\n      // add the y Axis\n    container.append('g')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .call(d3.axisLeft(yScale).tickFormat(formatNumber));\n    // append Y axis label\n    svg\n      .append('text')\n        .attr('y', margin.top / 2)\n        .attr('x', margin.right)\n        .attr('dy', '0.75em')\n        .style('font-size', '0.8rem')\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .text(axisLabels && axisLabels.left ? axisLabels.left : '');\n  }\n\n  if (averageLines && averageLines.length) {\n    averageLines.forEach(line => {\n      svg\n       .append('line')\n      .attr('x1',margin.left)\n      .attr('x2',size.width - margin.right)\n      .attr('y1', yScale(line.value) + 0.5)\n      .attr('y2', yScale(line.value) + 0.5)\n      .attr('stroke-width', line.strokeWidth ? line.strokeWidth : '1px')\n      .attr('stroke', line.strokeColor ? line.strokeColor : '#333')\n      .attr('stroke-dasharray', line.strokeDasharray ? line.strokeDasharray : 0)\n      .style('pointer-events', 'none');\n\n      if (line.label) {\n\n        svg.append('text')\n          .attr('x', line.labelPlacement === LabelPlacement.right ? size.width - margin.right : margin.left + 8)\n          .attr('y',yScale(line.value) - 4)\n          .style('text-anchor', line.labelPlacement === LabelPlacement.right ? 'end' : 'start')\n          .style('opacity', 0.8)\n          .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n          .style('font-size', '12px')\n          .style('pointer-events', 'none')\n          .text(line.label);\n      }\n    });\n  }\n\n};\n","export const baseColor = '#333333'; // dark gray/black color for text\nexport const secondaryFont = \"'OfficeCodeProWeb', monospace\";\nexport const tertiaryColor = '#f3f3f3'; // really light gray color for use as a hover background color on cards\n\nexport const defaultPaletteColors = [\n  '#003f5c',\n  '#2f4b7c',\n  '#665191',\n  '#a05195',\n  '#d45087',\n  '#f95d6a',\n  '#ff7c43',\n  '#ffa600',\n  '#ffa600',\n  '#c1ab00',\n  '#86a927',\n  '#4fa049',\n  '#019463',\n  '#008575',\n  '#00747a',\n  '#166273',\n];\n\nexport const defaultDivergentColors = [\n  '#00876c',\n  '#8cbcac',\n  '#f1f1f1',\n  '#ec9c9d',\n  '#d43d51',\n];\n\nexport const defaultCoolChloropleth = [\n  '#004c6d',\n  '#326988',\n  '#5487a5',\n  '#76a6c2',\n  '#98c7e0',\n  '#bbe8ff',\n];\n\nexport const defaultHotChloropleth = [\n  '#ff7b00',\n  '#fd9936',\n  '#fcb45e',\n  '#fbcc88',\n  '#fce2b4',\n  '#fff6e2',\n];\n\nconst ranges = [\n  { divider: 1e18 , suffix: 'E' },\n  { divider: 1e15 , suffix: 'P' },\n  { divider: 1e12 , suffix: 'T' },\n  { divider: 1e9 , suffix: 'B' },\n  { divider: 1e6 , suffix: 'M' },\n  { divider: 1e3 , suffix: 'k' },\n];\n\nexport const formatNumber = (n: number) => {\n  for (const range of ranges) {\n    if (n >= range.divider) {\n      return parseFloat((n / range.divider).toFixed(2)).toString() + range.suffix;\n    }\n  }\n  return n.toString();\n};\n\nexport function adaptLabelFontSize(d: any) {\n  // var xPadding, diameter, labelAvailableWidth, labelWidth;\n\n  const xPadding = 8;\n  const diameter = 2 * d.r;\n  const labelAvailableWidth = diameter - xPadding;\n\n  // @ts-ignore\n  const labelWidth = this.getComputedTextLength();\n\n  // There is enough space for the label so leave it as is.\n  if (labelWidth < labelAvailableWidth) {\n    return null;\n  }\n\n  /*\n   * The meaning of the ratio between labelAvailableWidth and labelWidth equaling 1 is that\n   * the label is taking up exactly its available space.\n   * With the result as `1em` the font remains the same.\n   *\n   * The meaning of the ratio between labelAvailableWidth and labelWidth equaling 0.5 is that\n   * the label is taking up twice its available space.\n   * With the result as `0.5em` the font will change to half its original size.\n   */\n  return (labelAvailableWidth / labelWidth) + 'em';\n}\n","import * as d3 from 'd3';\nimport {formatNumber} from './Utils';\n\nexport interface Coords {\n  x: number;\n  y: number;\n}\n\nexport enum LabelAnchor {\n  Left = 'start',\n  Middle = 'middle',\n  Right = 'end',\n}\n\nexport enum LabelPosition {\n  Top = 'top',\n  Center = 'center',\n  Bottom = 'bottom',\n}\n\nexport enum AnimationDirection {\n  Forward = 'forward',\n  Backward = 'backward',\n}\n\nexport interface Datum {\n  coords: Coords[];\n  animationDuration?: number;\n  animationDirection?: AnimationDirection;\n  animationStartIndex?: number;\n  label?: string;\n  labelColor?: string;\n  showLabelLine?: boolean;\n  labelPosition?: LabelPosition;\n  labelAnchor?: LabelAnchor;\n  labelDataIndex?: number;\n  color?: string;\n  width?: number;\n  tooltipContent?: string;\n}\n\ninterface InternalDatum extends Datum {\n  totalLength?: number;\n  animationStartPercentAsDecimal?: number;\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[];\n  size: Dimensions;\n  axisLabels?: {left?: string, bottom?: string};\n  axisMinMax?: {\n    minX?: number,\n    maxX?: number,\n    minY?: number,\n    maxY?: number,\n  };\n  animateAxis?: {\n    animationDuration: number,\n    startMinX: number,\n    startMaxX: number,\n    startMinY: number,\n    startMaxY: number,\n    startLeftLabel?: string;\n    startBottomLabel?: string;\n  };\n  showGridLines?: {\n    xAxis?: boolean;\n    yAxis?: boolean;\n  };\n  formatAxis?: {\n    x?: (n: number) => string;\n    y?: (n: number) => string;\n  };\n  tickCount?: {\n    x?: number;\n    y?: number;\n  };\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const {\n    svg, size, axisLabels, tooltip, axisMinMax,\n    showGridLines, formatAxis, tickCount, animateAxis,\n    labelFont,\n  } = input;\n\n  const data: InternalDatum[] = input.data;\n\n  const margin = {top: 30, right: 30, bottom: 30, left: 35};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  // set the ranges\n  const x = d3.scaleLinear().range([0, width]);\n  const y = d3.scaleLinear().range([height, 0]);\n\n  // define the line\n  const valueline = d3.line()\n    .x(function(d: any) { return x(d.x); })\n    .y(function(d: any) { return y(d.y); });\n\n  // append the svg obgect to the body of the page\n  // appends a 'group' element to 'svg'\n  // moves the 'group' element to the top left margin\n  svg\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom);\n\n  const g = svg.append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n  const allXValues: number[] = [];\n  const allYValues: number[] = [];\n  data.forEach(line => line.coords.forEach((coord) => {\n    allXValues.push(coord.x);\n    allYValues.push(coord.y);\n  }));\n\n  const rawMinX = axisMinMax && axisMinMax.minX !== undefined ? axisMinMax.minX : d3.min(allXValues);\n  const rawMaxX = axisMinMax && axisMinMax.maxX !== undefined ? axisMinMax.maxX : d3.max(allXValues);\n  const rawMinY = axisMinMax && axisMinMax.minY !== undefined ? axisMinMax.minY : d3.min(allYValues);\n  const rawMaxY = axisMinMax && axisMinMax.maxY !== undefined ? axisMinMax.maxY : d3.max(allYValues);\n\n  const minX = rawMinX ? Math.floor(rawMinX) : 0;\n  const maxX = rawMaxX ? Math.ceil(rawMaxX) : 0;\n  const minY = rawMinY ? Math.floor(rawMinY) : 0;\n  const maxY = rawMaxY ? Math.ceil(rawMaxY) : 0;\n\n  // Scale the range of the data\n  x.domain([minX, maxX]);\n  y.domain([minY, maxY]);\n\n  g.selectAll('.label-lines')\n      .data(data)\n      .enter()\n        .append('line')\n        .attr('transform', 'translate(' + margin.left + ', 0)')\n        .style('stroke-dasharray', '3 1')\n        .attr('stroke', ({labelColor}) => labelColor ? labelColor : 'gray')\n        .attr('y1', ({coords, labelDataIndex}) => {\n          const targetCood = labelDataIndex && labelDataIndex < coords.length ? labelDataIndex : coords.length - 1;\n          return y(coords[targetCood].y);\n        })\n        .attr('x1', ({coords, labelDataIndex}) => {\n          const targetCood = labelDataIndex && labelDataIndex < coords.length ? labelDataIndex : coords.length - 1;\n          return x(coords[targetCood].x);\n        })\n        .attr('y2', height)\n        .attr('x2', ({coords, labelDataIndex}) => {\n          const targetCood = labelDataIndex && labelDataIndex < coords.length ? labelDataIndex : coords.length - 1;\n          return x(coords[targetCood].x);\n        })\n        .text(({label}) => label ? label : '')\n        .attr('opacity', '0')\n        .transition() // Call Transition Method\n        .delay(d => {\n          const axisDelay = animateAxis ? animateAxis.animationDuration : 0;\n          const lineDelay = d.animationDuration ? d.animationDuration : 0;\n          return axisDelay + lineDelay;\n        })\n        .duration(d => d.animationDuration ? d.animationDuration : 0 ) // Set Duration timing (ms)\n        .ease(d3.easeLinear) // Set Easing option\n        .attr('opacity', d => d.showLabelLine ? '1' : '0');\n\n  // Add the valueline path.\n  const paths = g.selectAll('.paths')\n      .data(data)\n      .enter()\n        .append('path')\n        .attr('class', 'line')\n        .attr('fill', 'none')\n        .attr('stroke', ({color}) => color ? color : 'gray')\n        .attr('stroke-width', (line) => line.width ? line.width : 1.5)\n        .attr('stroke-linejoin', 'round')\n        .attr('stroke-linecap', 'round')\n        .attr('d', d => valueline(d.coords as any as [[number, number]]))\n        .attr('transform', 'translate(' + margin.left + ', 0)')\n        .on('mousemove', ({tooltipContent}) => {\n          if (tooltipContent && tooltipContent.length) {\n            tooltip.html(tooltipContent);\n            tooltip\n              .style('display', 'block')\n              .style('left', (d3.event.pageX + 4) + 'px')\n              .style('top', (d3.event.pageY - 4) + 'px');\n          }\n        })\n        .on('mouseout', () => {\n          tooltip\n              .style('display', 'none');\n        });\n\n  // Set Properties of Dash Array and Dash Offset and initiate Transition\n  paths.each(function(d) {\n      d.totalLength = this.getTotalLength();\n      if (d.animationStartIndex !== undefined) {\n        const adjustedCoords = d.coords.filter((_c, i) => i <= (d.animationStartIndex as number));\n        const shortenedLine = valueline(adjustedCoords as any as [[number, number]]);\n        const shortPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        shortPath.setAttribute('d', shortenedLine ? shortenedLine : '');\n        d.animationStartPercentAsDecimal = 1 - (shortPath.getTotalLength() / d.totalLength);\n      }\n    })\n    .attr('stroke-dasharray', d => d.totalLength ? d.totalLength : 0)\n    .attr('stroke-dashoffset', d => {\n      const multiplier = d.animationStartPercentAsDecimal !== undefined ? d.animationStartPercentAsDecimal : 1;\n      return d.totalLength && d.animationDirection !== AnimationDirection.Backward ? d.totalLength * multiplier : 0;\n    })\n    .transition() // Call Transition Method\n    .delay(animateAxis ? animateAxis.animationDuration : 0)\n    .duration(d => d.animationDuration ? d.animationDuration : 0) // Set Duration timing (ms)\n    .ease(d3.easeLinear) // Set Easing option\n    .attr('stroke-dashoffset', d => {\n      const multiplier = d.animationStartPercentAsDecimal !== undefined ? d.animationStartPercentAsDecimal : 1;\n      return d.totalLength && d.animationDirection === AnimationDirection.Backward ? d.totalLength * multiplier : 0;\n    }); // Set final value of dash-offset for transition\n\n  // Add the labels\n  g.selectAll('.labels')\n      .data(data)\n      .enter()\n        .append('text')\n        .attr('transform', d => {\n          if (d.labelPosition === LabelPosition.Top) {\n            return `translate(${margin.left + 8} -8)`;\n          } else if (d.labelPosition === LabelPosition.Bottom) {\n            return `translate(${margin.left + 8} 12)`;\n          } else if (d.labelPosition === LabelPosition.Center) {\n            return `translate(${margin.left + 8} 2)`;\n          } else {\n            return `translate(${margin.left + 8} 2)`;\n          }\n        })\n        .attr('text-anchor', d => d.labelAnchor ? d.labelAnchor : LabelAnchor.Left)\n        .attr('class', 'line-label')\n        .attr('fill', ({labelColor}) => labelColor ? labelColor : 'gray')\n        .attr('font-size', '0.7rem')\n        .attr('y', ({coords, labelDataIndex}) => {\n          const targetCood = labelDataIndex && labelDataIndex < coords.length ? labelDataIndex : coords.length - 1;\n          return y(coords[targetCood].y);\n        })\n        .attr('x', ({coords, labelDataIndex}) => {\n          const targetCood = labelDataIndex && labelDataIndex < coords.length ? labelDataIndex : coords.length - 1;\n          return x(coords[targetCood].x);\n        })\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .text(({label}) => label ? label : '')\n        .attr('opacity', '0')\n        .transition() // Call Transition Method\n        .delay(d => {\n          const axisDelay = animateAxis ? animateAxis.animationDuration : 0;\n          const lineDelay = d.animationDuration ? d.animationDuration : 0;\n          return axisDelay + lineDelay;\n        }) // Set Delay timing (ms)\n        .duration(d => d.animationDuration ? d.animationDuration : 0 ) // Set Duration timing (ms)\n        .ease(d3.easeLinear) // Set Easing option\n        .attr('opacity', '1');\n\n  const formatX = formatAxis && formatAxis.x ? formatAxis.x : formatNumber;\n  const formatY = formatAxis && formatAxis.y ? formatAxis.y : formatNumber;\n  let xDomain = d3.axisBottom(x);\n  let yDomain = d3.axisLeft(y);\n  if (animateAxis !== undefined) {\n    const {\n      startMaxX, startMinX, startMinY, startMaxY,\n    } = animateAxis;\n    const startX = d3.scaleLinear().range([0, width]);\n    const startY = d3.scaleLinear().range([height, 0]);\n    // Scale the range of the data\n    startX.domain([startMinX, startMaxX]);\n    startY.domain([startMinY, startMaxY]);\n\n    xDomain = d3.axisBottom(startX);\n    yDomain = d3.axisLeft(startY);\n  }\n  // Add the x Axis\n  g.append('g')\n      .attr('class', 'myXaxis')\n      .attr('transform', 'translate(' + margin.left + ',' + height + ')')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .call(xDomain.tickFormat(formatX).ticks(tickCount && tickCount.x ? tickCount.x : 10));\n\n  // Add the y Axis\n  g.append('g')\n      .attr('class', 'myYaxis')\n      .attr('transform', 'translate(' + margin.left + ', 0)')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .call(yDomain.tickFormat(formatY).ticks(tickCount && tickCount.y ? tickCount.y : 10));\n\n  if (animateAxis !== undefined) {\n    (g.selectAll('.myYaxis')\n      .transition()\n      .duration(animateAxis.animationDuration) as any)\n      .call(d3.axisLeft(y).tickFormat(formatY).ticks(tickCount && tickCount.y ? tickCount.y : 10));\n\n    (g.selectAll('.myXaxis')\n      .transition()\n      .duration(animateAxis.animationDuration) as any)\n      .call(d3.axisBottom(x).tickFormat(formatX).ticks(tickCount && tickCount.x ? tickCount.x : 10));\n  }\n\n  // gridlines in x axis function\n  const makeGridlinesX: any = () => d3.axisBottom(x).ticks(tickCount && tickCount.x ? tickCount.x : 10);\n\n  // gridlines in y axis function\n  const makeGridlinesY: any = () => d3.axisLeft(y).ticks(tickCount && tickCount.y ? tickCount.y : 10);\n\n  // add the X gridlines\n  if (showGridLines && showGridLines.xAxis) {\n    g.append('g')\n      .attr('class', 'grid')\n      .attr('transform', 'translate(' + margin.left + ',' + height + ')')\n      .style('opacity', '0.25')\n      .style('stroke-dasharray', '3 1')\n      .call(makeGridlinesX()\n          .tickSize(-height)\n          .tickFormat(''),\n      );\n  }\n\n  // add the Y gridlines\n  if (showGridLines && showGridLines.yAxis) {\n    g.append('g')\n      .attr('class', 'grid')\n      .attr('transform', 'translate(' + margin.left + ', 0)')\n      .style('opacity', '0.25')\n      .style('stroke-dasharray', '3 1')\n      .call(makeGridlinesY()\n          .tickSize(-width)\n          .tickFormat(''),\n      );\n  }\n\n  // append X axis label\n  svg\n    .append('text')\n    .attr('transform', `translate(${width / 2 + margin.left}, ${height + margin.bottom + margin.top})`)\n      .style('text-anchor', 'middle')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .text(axisLabels && axisLabels.bottom ? axisLabels.bottom : '');\n\n  // append Y axis label\n  svg\n    .append('text')\n    .attr('transform', 'rotate(-90)')\n      .attr('y', 0)\n      .attr('x', 0 - (height / 2 + margin.top))\n      .attr('dy', '0.75em')\n      .style('text-anchor', 'middle')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .text(axisLabels && axisLabels.left ? axisLabels.left : '');\n\n  g.style('transform', 'scale(0.95) translateY(' + margin.top + 'px)')\n   .style('transform-origin', 'center');\n\n   // add the dots\n  data.forEach((datum) => {\n    const {\n      coords, color, label,\n      animationDuration, animationDirection, animationStartIndex,\n    } = datum;\n    if (animationDirection === AnimationDirection.Backward) {\n      coords.reverse();\n    }\n    const fill = color ? color : 'gray';\n    g.selectAll('.circles')\n        .data(coords)\n        .enter()\n          .append('circle')\n          .on('mousemove', (coord) => {\n              if (label && label.length) {\n                tooltip.html(`\n                  <div style=\"\n                    display: inline-block;\n                    background-color: ${fill};\n                    width: 12px;\n                    height: 12px;\n                    margin-right: 12px;\n                    flex-shrink: 0;\n                  \"></div>\n                  <div>\n                    <strong>${label}</strong>\n                    <br />\n                    ${coord.x}: ${parseFloat(coord.y.toFixed(2))}\n                  </div>\n                `);\n                tooltip\n                  .style('position', 'fixed')\n                  .style('left', d3.event.clientX + 'px')\n                  .style('top', d3.event.clientY + 'px')\n                  .style('display', 'flex')\n                  .style('align-items', 'center');\n              }\n            })\n            .on('mouseout', () => {\n              tooltip\n                  .style('display', 'none');\n            })\n          .attr('cx', (coord) => x(coord.x))\n          .attr('cy', (coord) => y(coord.y))\n          .attr('r', 4)\n          .style('fill', fill)\n          .style('stroke', 'transparent')\n          .style('stroke-width', 25)\n          .attr('transform', 'translate(' + margin.left + ', 0)')\n          .style('opacity', (_d, i) =>\n            animationDirection === AnimationDirection.Backward ||\n            (animationStartIndex !== undefined && i <= (animationStartIndex))\n              ? 1 : 0,\n          )\n          .transition() // Call Transition Method\n          .delay((_d, i) => {\n            const axisDelay = animateAxis ? animateAxis.animationDuration : 0;\n            if (animationDuration && i !== 0) {\n              return animationDuration * (i / coords.length) + axisDelay;\n            } else {\n              return axisDelay;\n            }\n          })\n          .duration(animationDuration ? 100 : 0) // Set Duration timing (ms)\n          .style('opacity', (_coord, i) => {\n            if (animationDirection === AnimationDirection.Backward) {\n              return animationStartIndex !== undefined && i >= (coords.length - 1) - animationStartIndex ? 1 : 0;\n            } else {\n              return 1;\n            }\n          });\n  });\n\n};\n\n","export enum FileFormat {\n  SVG = 'svg',\n  PNG = 'png',\n}\n\ninterface Input {\n  svg: Node | null;\n  width: number | undefined;\n  height: number | undefined;\n  title: string;\n  fileFormat?: FileFormat;\n}\n\nexport default (input: Input) => {\n  const {svg, title} = input;\n  const width = input.width ? input.width : 1500;\n  const height = input.height ? input.height : 1500;\n  const canvas = document.createElement('canvas');\n  if (canvas && svg) {\n    const img = new Image();\n    const serializer = new XMLSerializer();\n    const svgStr = serializer.serializeToString(svg);\n\n    img.src = 'data:image/svg+xml;base64,' + window.btoa(svgStr);\n    img.width = width;\n    img.height = height;\n\n    canvas.width = width;\n    canvas.height = height;\n    const canvasContext = canvas.getContext('2d');\n\n    let url = '';\n    img.onload = function() {\n      if (canvasContext) {\n        canvasContext.drawImage(img, 0, 0, width, height);\n      }\n      url = canvas.toDataURL('image/png');\n\n      const fileFormat = input.fileFormat !== undefined ? input.fileFormat : FileFormat.PNG;\n      const a = document.createElement('a');\n      if (fileFormat === FileFormat.SVG) {\n        a.href = img.src;\n      } else {\n        a.href = url;\n      }\n      a.download = title +'.' + fileFormat;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      document.body.removeChild(img);\n    };\n\n    document.body.appendChild(img);\n  }\n};","import * as d3 from 'd3';\nimport {RootDatum} from './treeMap';\nimport {lighten} from 'polished';\nimport {transformData} from './utils/differenceTreeMapUtils';\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  size: Dimensions;\n  data: [RootDatum, RootDatum];\n  labelFont?: string;\n  animateOn?: boolean;\n  formatValue?: (value: number) => string;\n}\n\nexport default (input: Input) => {\n  const { svg, size, tooltip, labelFont, animateOn, formatValue} = input;\n\n  const mergedData = transformData(input.data[0], input.data[1]);\n\n  const margin = {top: 0, right: 0, bottom: 0, left: 0};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  const treemap = d3.treemap()\n      .tile(d3.treemapResquarify)\n      .size([width, height])\n      .round(true)\n      .paddingInner(1);\n\n  const root = d3.hierarchy(mergedData)\n      .eachBefore((d: any) => d.data.id = (d.parent ? d.parent.data.id + '.' : '') + d.data.id)\n      .sum((d: any) => d.size)\n      .sort((a, b) => {\n        if (b.height - a.height) {\n          return b.height - a.height;\n        } else if (b.value && a.value) {\n          return b.value - a.value;\n        } else {\n          return 0;\n        }\n       });\n\n  treemap(root);\n\n  const cell = svg.selectAll('g')\n    .data(root.leaves())\n    .enter().append('g')\n      .each((d: any) => {\n        const larger = d.data.primaryValue > d.data.secondaryValue ? d.data.primaryValue : d.data.secondaryValue;\n        const smaller = d.data.primaryValue === larger ? d.data.secondaryValue : d.data.primaryValue;\n        const diff = Math.sqrt(smaller/larger);\n        d.primaryWidth = d.x1 - d.x0;\n        d.primaryHeight = d.y1 - d.y0;;\n\n        d.secondaryWidth = diff * d.primaryWidth;\n        d.secondaryHeight = diff * d.primaryHeight;\n        d.secondaryLeft = (d.primaryWidth - d.secondaryWidth) / 2;\n        d.secondaryTop = (d.primaryHeight - d.secondaryHeight) / 2;\n      })\n      .attr('transform', (d: any) => 'translate(' + d.x0 + ',' + d.y0 + ')')\n      .on('mousemove', (d: any) => {\n          tooltip\n            .style('position', 'fixed')\n            .style('left', d3.event.clientX + 'px')\n            .style('top', d3.event.clientY + 'px')\n            .style('display', 'flex')\n            .style('align-items', 'center')\n            .html(() => {\n              let primaryValue: string | number;\n              let secondaryValue: string | number;\n              if (d.data.primaryValue === undefined) {\n                primaryValue = 'No data available';\n              } else {\n                primaryValue = formatValue ? formatValue(d.data.primaryValue) : d.data.primaryValue;\n              }\n              if (d.data.secondaryValue === undefined) {\n                secondaryValue = 'No data available';\n              } else {\n                secondaryValue = formatValue ? formatValue(d.data.secondaryValue) : d.data.secondaryValue;\n              }\n              return `\n              <div>\n                <div style=\"\n                  margin-bottom: 12px;\n                  text-align: center;\n                  text-transform: uppercase;\n                \">\n                  <small>${d.data.label}</small>\n                </div>\n                <div>\n                  <div style=\"\n                    display: inline-block;\n                    background-color: ${d.parent.data.fill};\n                    width: 12px;\n                    height: 12px;\n                    margin-right: 12px;\n                    flex-shrink: 0;\n                  \"></div>\n                  <strong>${input.data[0].label}:</strong> ${primaryValue}\n                </div>\n                <div>\n                  <div style=\"\n                    display: inline-block;\n                    background-color: ${lighten(0.125, d.parent.data.fill)};\n                    width: 12px;\n                    height: 12px;\n                    margin-right: 12px;\n                    flex-shrink: 0;\n                  \"></div>\n                  <strong>${input.data[1].label}:</strong> ${secondaryValue}\n                </div>\n              </div>\n            `\n            });\n        })\n      .on('mouseout', () => tooltip.style('display', 'none'));\n\n  cell.append('rect')\n      .attr('id', (d: any) => d.data.id)\n      .attr('finalwidth', (d: any) => d.primaryWidth)\n      .attr('finalheight', (d: any) => d.primaryHeight)\n      .attr('width', (d: any) => d.primaryWidth)\n      .attr('height', (d: any) => d.primaryHeight)\n      .attr('fill', (d: any) => {\n        const primaryValue = d.data.primaryValue ? d.data.primaryValue : 0;\n        const secondaryValue = d.data.secondaryValue ? d.data.secondaryValue : 0;\n        if (primaryValue > secondaryValue) {\n          return d.parent.data.fill;\n        }\n        return lighten(0.125, d.parent.data.fill);\n      });\n\n  cell.append('rect')\n      .attr('id', (d: any) => d.data.id + '-secondary')\n      .attr('finalwidth', (d: any) => d.secondaryWidth)\n      .attr('finalheight', (d: any) => d.secondaryHeight)\n      .attr('width', (d: any) => d.secondaryWidth)\n      .attr('height', (d: any) => d.secondaryHeight)\n      .attr('transform', (d:any) => `translate(${d.secondaryLeft}, ${d.secondaryTop})`)\n      .attr('fill', (d: any) => {\n        const primaryValue = d.data.primaryValue ? d.data.primaryValue : 0;\n        const secondaryValue = d.data.secondaryValue ? d.data.secondaryValue : 0;\n        if (primaryValue > secondaryValue) {\n          return lighten(0.125, d.parent.data.fill);\n        }\n        return d.parent.data.fill;\n      });\n\n  cell.append('clipPath')\n      .attr('id', (d: any) => 'clip-' + d.data.id)\n    .append('use')\n      .attr('xlink:href', (d: any) => '#' + d.data.id);\n\n  cell.append('text')\n      .attr('clip-path', (d: any) => 'url(#clip-' + d.data.id + ')')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .attr('font-size', '0.7rem')\n      .attr('x', 8)\n      .attr('y', 16)\n      .text((_d: any) => {\n        return _d.data.label;\n        // return '';\n      })\n      .call(wrap);\n\n  if (animateOn) {\n    cell\n        .style('transform', (d: any) => `translate(${d.x0}px, ${d.y0}px) scale(0)`)\n        .transition()\n        .duration(500)\n        .style('transform', (d: any) => `translate(${d.x0}px, ${d.y0}px) scale(1)`);\n  }\n\n  function wrap(text: any) {\n    text.each(function() {\n      // @ts-ignore\n      const t = d3.select(this as any);\n      // @ts-ignore\n      const rect = this.parentElement.querySelector('rect');\n      const rectWidth = rect.getAttribute('finalwidth');\n      const rectHeight = rect.getAttribute('finalheight');\n      const words = t.text().split(/\\s+/).reverse();\n      let word = words.pop();\n      let line: string[] = [];\n      let lineNumber = 0; //<-- 0!\n      const lineHeight = 1.2; // ems\n      const x = t.attr('x'); //<-- include the x!\n      const y = t.attr('y');\n      const dy = t.attr('dy') ? t.attr('dy') : 0; //<-- null check\n      let tspan = t.text(null).append('tspan').attr('x', x).attr('y', y).attr('dy', dy + 'em');\n      while (word !== undefined) {\n        line.push(word);\n        tspan.text(line.join(' '));\n        const node = tspan.node();\n        if (node && node.getComputedTextLength() > (rectWidth * 0.8)) {\n          line.pop();\n          tspan.text(line.join(' '));\n          line = [word];\n          // @ts-ignore\n          tspan = t.append('tspan').attr('x', x).attr('y', y).attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n        }\n        word = words.pop();\n      }\n      if (t.node().getBBox().width > rectWidth || t.node().getBBox().height > rectHeight * 0.8) {\n        t.attr('opacity', '0');\n      }\n    });\n  }\n};\n","import {RootDatum, LeafDatum} from '../treeMap';\n\ninterface MergedLeaf extends LeafDatum {\n  primaryValue: number | undefined;\n  secondaryValue: number | undefined;\n}\n\ninterface MergedBranch {\n  id: string;\n  label: string;\n  fill?: string;\n  children: MergedLeaf[];\n}\n\ninterface MergedData {\n  id: string;\n  label: string;\n  children: MergedBranch[];\n}\n\nexport const transformData = (primaryData: RootDatum, secondaryData: RootDatum) => {\n  const mergedBranchesData: MergedBranch[] = [];\n  primaryData.children.forEach(primaryDatum => {\n    const secondaryDatum = secondaryData.children.find(datum => datum.label === primaryDatum.label)\n    const leaves: MergedLeaf[] = [];\n    (primaryDatum as RootDatum).children.forEach((primaryLeaf: LeafDatum) => {\n      let size: number;\n      let primaryValue: number | undefined = undefined;\n      let secondaryValue: number | undefined = undefined;\n      if (secondaryDatum && (secondaryDatum as RootDatum).children) {\n        const secondaryLeaf = (secondaryDatum as RootDatum).children.find(leaf => leaf.label === primaryLeaf.label);\n        if (secondaryLeaf) {\n          secondaryValue = (secondaryLeaf as LeafDatum).size;\n        }\n      }\n      primaryValue = (primaryLeaf as LeafDatum).size;\n      size = !secondaryValue || primaryValue > secondaryValue ? primaryValue : secondaryValue;\n      leaves.push({...primaryLeaf, primaryValue, secondaryValue, size})\n    })\n    mergedBranchesData.push({\n      ...primaryDatum,\n      children: leaves,\n    })\n  })\n  const mergedData: MergedData = {\n    id: 'merged-data',\n    label: 'Comparison Data',\n    children: mergedBranchesData,\n  }\n  return mergedData;\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Root = styled.div`\n  margin-top: 3rem;\n  max-width: 350px;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.85rem;\n`;\n\ninterface ColorScaleBarProps {\n  maxColor: string;\n  minColor: string;\n}\n\nconst LabelContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0.4rem;\n`;\n\nconst ColorScaleBar = styled.div<ColorScaleBarProps>`\n  height: 1rem;\n  width: 100%;\n  margin-bottom: 1rem;\n  background: linear-gradient(\n    90deg,\n    ${({minColor}) => minColor} 0%,\n    ${({maxColor}) => maxColor} 100%\n  );\n`;\n\nconst ColorScaleBarCustom = styled.div`\n  height: 1rem;\n  width: 100%;\n  margin-bottom: 1rem;\n  transition: all 0.2s ease;\n`;\n\ninterface BaseProps {\n  title: string;\n  maxLabel: string | number;\n  minLabel: string | number;\n  rootStyles?: React.CSSProperties;\n}\n\n\ntype Props = BaseProps & ({\n  maxColor: string;\n  minColor: string;\n  gradientString?: undefined;\n} | {\n  maxColor?: undefined;\n  minColor?: undefined;\n  gradientString: string;\n});\n\nconst Legend = (props: Props) => {\n  const { maxLabel, minLabel, title, rootStyles } = props;\n\n  const gradientBar = props.minColor && props.maxColor ? (\n    <ColorScaleBar\n      minColor={props.minColor}\n      maxColor={props.maxColor}\n    />\n  ) : (\n    <ColorScaleBarCustom\n      style={{background: props.gradientString}}\n    />\n  );\n\n  return (\n    <Root style={rootStyles}>\n      <LabelContainer>\n        <div>{minLabel}</div>\n        <div>{maxLabel}</div>\n      </LabelContainer>\n      {gradientBar}\n      <div>{title}</div>\n    </Root>\n  );\n};\n\nexport default Legend;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Root = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst LegendItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  font-size: 0.6rem;\n  width: 15%;\n  margin-right: 0.4rem;\n`;\n\nconst LegendBlock = styled.div`\n  width: 1rem;\n  height: 1rem;\n  border: solid 3px transparent;\n  margin-right: 0.6rem;\n  flex-shrink: 0;\n`;\n\nconst Label = styled.div`\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\ninterface LegendDatum {\n  label: string;\n  fill: string | undefined;\n  stroke: string | undefined;\n}\n\ninterface Props {\n  legendList: LegendDatum[];\n  rootStyles?: React.CSSProperties;\n  itemStyles?: React.CSSProperties;\n  labelStyles?: React.CSSProperties;\n}\n\nconst Legend = ({legendList, rootStyles, itemStyles, labelStyles}: Props) => {\n\n  const legendItems = legendList.map(({label, fill, stroke}) => (\n      <LegendItem key={label + fill + stroke}  title={label} style={itemStyles}>\n        <LegendBlock\n          style={{\n            backgroundColor: fill,\n            borderColor: stroke,\n          }}\n        />\n        <Label style={labelStyles}>{label}</Label>\n      </LegendItem>\n  ));\n\n  return (\n    <Root style={rootStyles}>\n      {legendItems}\n    </Root>\n  );\n};\n\nexport default Legend;","import React from 'react';\nimport styled from 'styled-components';\nimport {lighten} from 'polished';\n\nconst Root = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr;\n  grid-column-gap: 1rem;\n  font-size: 0.85rem;\n  margin-top: 3rem;\n`;\n\nconst ListContainer = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst ListItem = styled.li<{color: string}>`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.55rem;\n\n  &::before {\n    content: '';\n    width: 0.75rem;\n    height: 0.75rem;\n    border-radius: 2000px;\n    background-color: ${({color}) => color};\n    margin-right: 0.6rem;\n    flex-shrink: 0;\n  }\n`;\n\nconst HighlightedItem = styled(ListItem)`\n  margin-left: auto;\n\n  &::before {\n    border: solid 0.6rem ${({color}) => lighten(1, color)};\n  }\n`;\n\ninterface LegendItem {\n  color: string;\n  label: string;\n}\n\ninterface Props {\n  items: LegendItem[];\n  highlighted?: LegendItem;\n}\n\nconst HowToReadDots = ({items, highlighted}: Props) => {\n  const legendItems = items.map(({color, label}) => <ListItem color={color} key={label + color}>{label}</ListItem>);\n  const highlightedItem = highlighted ? (\n    <HighlightedItem color={highlighted.color}>{highlighted.label}</HighlightedItem>\n  ) : null;\n  return (\n    <Root>\n      <ListContainer>\n        {legendItems}\n      </ListContainer>\n      {highlightedItem}\n    </Root>\n  );\n};\n\nexport default HowToReadDots;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Root = styled.ul`\n  list-style: none;\n`;\n\nconst LegendItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  font-size: 1rem;\n`;\n\nconst LegendBlock = styled.div`\n  width: 1rem;\n  height: 1rem;\n  margin-right: 0.5rem;\n  border: solid 3px transparent;\n`;\n\ninterface LegendDatum {\n  label: string;\n  fill: string | undefined;\n  stroke: string | undefined;\n}\n\ninterface Props {\n  legendList: LegendDatum[];\n}\n\nconst Legend = ({legendList}: Props) => {\n\n  const legendItems = legendList.map(({label, fill, stroke}) => (\n    <LegendItem key={label + fill + stroke}>\n      <LegendBlock\n        style={{\n          backgroundColor: fill,\n          borderColor: stroke,\n        }}\n      />\n      {label}\n    </LegendItem>\n  ));\n\n  return (\n    <Root>\n      {legendItems}\n    </Root>\n  );\n};\n\nexport default Legend;","import { ExtendedFeature, scaleOrdinal, select } from 'd3';\nimport React, {useState, useEffect, useRef} from 'react';\nimport styled from 'styled-components';\nimport createScatterPlot, {Datum as ScatterPlotDatum} from './dataViz/scatterPlot';\nimport createBarChart, {\n  Datum as BarChartDatum,\n  LabelPlacement,\n} from './dataViz/barChart';\nimport createClusterBarChart, {Datum as ClusterBarChartDatum} from './dataViz/clusterBarChart';\nimport createRadarChart, {\n  Datum as RadarChartDatum,\n  RadarChartOptions,\n  RadarChartConfig,\n} from './dataViz/radarChart';\nimport createGeoMap, {GeoJsonCustomProperties} from './dataViz/geoMap';\nimport creatLineChart, {\n  Datum as LineChartDatum,\n  Coords,\n  LabelAnchor,\n  LabelPosition,\n  AnimationDirection,\n} from './dataViz/lineChart';\nimport createTreeMap, {RootDatum, LeafDatum} from './dataViz/treeMap';\nimport createDifferenceTreeMap from './dataViz/differenceTreeMap';\nimport createStackChart, {Datum as StackChartDatum, StackChartConfig} from './dataViz/stackChart';\nimport createClusterChart, {Datum as ClusterChartDatum} from './dataViz/clusterChart';\nimport createBoxAndWhiskersChart, {Datum as BoxAndWhiskersChartDatum} from './dataViz/boxAndWhiskers';\nimport {darken} from 'polished';\nimport downloadImage, { FileFormat } from './dataViz/downloadImage';\nimport { CSVLink } from 'react-csv';\nimport DownloadSVGURL from './dataViz/assets/download.svg';\nimport DataSVGURL from './dataViz/assets/data.svg';\nimport debounce from 'lodash/debounce';\nimport {\n  baseColor,\n  secondaryFont,\n  tertiaryColor,\n  defaultPaletteColors,\n  defaultDivergentColors,\n  defaultCoolChloropleth,\n  defaultHotChloropleth,\n  formatNumber,\n  adaptLabelFontSize,\n} from './dataViz/Utils';\nimport ColorScaleLegend from './dataViz/ColorScaleLegend';\nimport HorizontalLegend from './dataViz/HorizontalLegend';\nimport HowToReadDots from './dataViz/HowToReadDots';\nimport Legend from './dataViz/Legend';\n\nconst Root = styled.div`\n  width: 100%;\n  margin: auto;\n`;\n\nconst SizingElm = styled.div`\n  height: 450px;\n  width: 100%;\n\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst Tooltip = styled.div`\n  position: absolute;\n  text-align: left;\n  display: none;\n  padding: 8px 12px;\n  background: #fff;\n  border-radius: 4px;\n  color: #333;\n  pointer-events: none;\n  box-shadow: 0px 0px 3px -1px #b5b5b5;\n  border: solid 1px gray;\n  max-width: 300px;\n  transform: translateY(-100%);\n  z-index: 1000;\n`;\n\nconst DownloadButtonsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst downloadButtonStyles = `\n  background-color: #ecf0f2;\n  font-family: ${secondaryFont};\n  padding: 0.5rem 0.75rem;\n  font-size: 0.6875rem;\n  color: ${baseColor};\n  display: flex;\n  align-items: center;\n  margin: 0;\n\n  &:hover {\n    background-color: ${darken(0.04, '#ecf0f2')};\n  }\n`;\n\nconst DownloadImageButton = styled.button`\n  ${downloadButtonStyles};\n`;\nconst DownloadDataButton = styled(CSVLink)`\n  ${downloadButtonStyles};\n  text-decoration: none;\n`;\n\nconst SvgIcon = styled.img`\n  width: 0.9rem;\n  margin-right: 0.3rem;\n`;\n\nconst ErrorMessage = styled.p`\n  width: 100%;\n  min-height: 400px;\n  background-color: ${tertiaryColor};\n  padding: 1rem;\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Caption = styled.p`\n  text-align: center;\n  font-style: italic;\n  font-size: 0.8rem;\n`;\n\nexport enum VizType {\n  ScatterPlot = 'ScatterPlot',\n  BarChart = 'BarChart',\n  ClusterBarChart = 'ClusterBarChart',\n  RadarChart = 'RadarChart',\n  GeoMap = 'GeoMap',\n  LineChart = 'LineChart',\n  TreeMap = 'TreeMap',\n  DifferenceTreeMap = 'DifferenceTreeMap',\n  StackChart = 'StackChart',\n  ClusterChart = 'ClusterChart',\n  BoxAndWhiskersChart = 'BoxAndWhiskersChart',\n  Error = 'Error',\n}\n\ninterface BaseProps {\n  id: string;\n  vizType: VizType;\n  jsonToDownload?: object[];\n  enablePNGDownload?: boolean;\n  enableSVGDownload?: boolean;\n  chartTitle?: string;\n  chartCaption?: string;\n  rootStyles?: React.CSSProperties;\n  height?: number | string;\n  labelFont?: string;\n  triggerGoogleAnalyticsEvent?: (category: string, action: string, label?: string, value?: number) => void;\n}\n\ntype Props = BaseProps & (\n  {\n    vizType: VizType.Error;\n    message: string;\n  } | {\n    vizType: VizType.ScatterPlot;\n    data: ScatterPlotDatum[];\n    axisLabels?: {left?: string, bottom?: string};\n    axisMinMax?: {\n      minX?: number,\n      maxX?: number,\n      minY?: number,\n      maxY?: number,\n    };\n    showAverageLines?: boolean;\n    averageLineText?: {left?: string, bottom?: string};\n    quadrantLabels?: {I?: string, II?: string, III?: string, IV?: string};\n  } |\n  {\n    vizType: VizType.BarChart;\n    data: BarChartDatum[][];\n    axisLabels?: {left?: string, bottom?: string};\n      axisMinMax?: {\n      minY?: number,\n      maxY?: number,\n    };\n    hideAxis?: {\n      left?: boolean;\n      bottom?: boolean;\n    }\n    averageLines?: {\n      value: number,\n      label?: string;\n      labelPlacement?: LabelPlacement;\n      strokeWidth?: number;\n      strokeDasharray?: number;\n      strokeColor?: string;\n    }[]\n  } |\n  {\n    vizType: VizType.ClusterBarChart;\n    data: ClusterBarChartDatum[];\n    axisLabels?: {left?: string, bottom?: string};\n    axisMinMax?: {\n      minY?: number,\n      maxY?: number,\n    };\n    formatAxis?: {\n      y?: (n: number) => string;\n    };\n    animateAxis?: {\n      animationDuration: number,\n      startMinY: number,\n      startMaxY: number,\n    };\n    tickCount?: {\n      x?: number;\n      y?: number;\n    };\n    animateBars?: number;\n  } |\n  {\n    vizType: VizType.RadarChart;\n    data: RadarChartDatum[][];\n    color: {start: string, end: string};\n    maxValue: number;\n  } |\n  {\n    vizType: VizType.GeoMap;\n    data: ExtendedFeature<any, GeoJsonCustomProperties>;\n    minColor: string;\n    maxColor: string;\n  }|\n  {\n    vizType: VizType.LineChart;\n    data: LineChartDatum[];\n    axisLabels?: {left?: string, bottom?: string};\n    axisMinMax?: {\n      minX?: number,\n      maxX?: number,\n      minY?: number,\n      maxY?: number,\n    };\n    showGridLines?: {\n      xAxis?: boolean;\n      yAxis?: boolean;\n    }\n    formatAxis?: {\n      x?: (n: number) => string;\n      y?: (n: number) => string;\n    }\n    tickCount?: {\n      x?: number;\n      y?: number;\n    }\n    animateAxis?: {\n      animationDuration: number,\n      startMinX: number,\n      startMaxX: number,\n      startMinY: number,\n      startMaxY: number,\n    };\n  } | {\n    vizType: VizType.TreeMap;\n    data: RootDatum;\n    animateOn?: boolean;\n  } | {\n    vizType: VizType.DifferenceTreeMap;\n    data: [RootDatum, RootDatum];\n    animateOn?: boolean;\n    formatValue?: (value: number) => string;\n  } | {\n    vizType: VizType.StackChart;\n    config: StackChartConfig;\n    data: StackChartDatum[];\n    enableBrushZoom?: boolean;\n  } | {\n    vizType: VizType.ClusterChart;\n    data: ClusterChartDatum[];\n    hideLabels?: boolean;\n    circleSpacing?: number;\n    max?: number;\n  }| {\n    vizType: VizType.BoxAndWhiskersChart;\n    data: BoxAndWhiskersChartDatum[];\n  }\n);\n\nexport const DataViz = (props: Props) => {\n  const {\n    id, enablePNGDownload, enableSVGDownload, jsonToDownload, rootStyles,\n    triggerGoogleAnalyticsEvent,\n  } = props;\n  const sizingNodeRef = useRef<HTMLDivElement | null>(null);\n  const svgNodeRef = useRef<any>(null);\n  const tooltipNodeRef = useRef<any>(null);\n\n  const [windowWidth, setWindowWidth] = useState<number>(window.innerWidth);\n\n  useEffect(() => {\n    const updateWindowWidth = debounce(() => {\n      setWindowWidth(window.innerWidth);\n    }, 500);\n    window.addEventListener('resize', updateWindowWidth);\n    return () => {\n      window.removeEventListener('resize', updateWindowWidth);\n    };\n  }, []);\n\n\n  useEffect(() => {\n    let svgNode: HTMLDivElement | null = null;\n    if (svgNodeRef && svgNodeRef.current && sizingNodeRef && sizingNodeRef.current &&\n        tooltipNodeRef && tooltipNodeRef.current) {\n      const sizingNode = sizingNodeRef.current;\n      svgNode = svgNodeRef.current;\n      const svg = select(svgNode);\n      const tooltip = select(tooltipNodeRef.current);\n      if (props.vizType === VizType.ScatterPlot) {\n        createScatterPlot({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          axisLabels: props.axisLabels,\n          axisMinMax: props.axisMinMax,\n          showAverageLines: props.showAverageLines,\n          averageLineText: props.averageLineText,\n          quadrantLabels: props.quadrantLabels,\n        });\n      } else if (props.vizType === VizType.BarChart) {\n        createBarChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          axisLabels: props.axisLabels,\n          axisMinMax: props.axisMinMax,\n          hideAxis: props.hideAxis,\n          averageLines: props.averageLines,\n        });\n      } else if (props.vizType === VizType.RadarChart) {\n        let width: number;\n        let height: number;\n        if (sizingNode.clientWidth > sizingNode.clientHeight) {\n          width = sizingNode.clientHeight;\n          height = sizingNode.clientHeight;\n        } else {\n          width = sizingNode.clientWidth;\n          height = sizingNode.clientWidth;\n        }\n        createRadarChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, options: {\n            width, height,\n            color: scaleOrdinal().range([props.color.start, props.color.end]),\n            maxValue: props.maxValue,\n          },\n        });\n      } else if (props.vizType === VizType.GeoMap) {\n        createGeoMap({\n          svg, tooltip, data: props.data, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          }, minColor: props.minColor, maxColor: props.maxColor,\n        });\n      } else if (props.vizType === VizType.ClusterBarChart) {\n        createClusterBarChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          axisLabels: props.axisLabels,\n          axisMinMax: props.axisMinMax,\n          formatAxis: props.formatAxis,\n          tickCount: props.tickCount,\n          animateAxis: props.animateAxis,\n          animateBars: props.animateBars,\n        });\n      } else if (props.vizType === VizType.LineChart) {\n        creatLineChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          axisLabels: props.axisLabels,\n          axisMinMax: props.axisMinMax,\n          showGridLines: props.showGridLines,\n          formatAxis: props.formatAxis,\n          tickCount: props.tickCount,\n          animateAxis: props.animateAxis,\n        });\n      } else if (props.vizType === VizType.TreeMap) {\n        createTreeMap({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          animateOn: props.animateOn,\n        });\n      } else if (props.vizType === VizType.DifferenceTreeMap) {\n        createDifferenceTreeMap({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          animateOn: props.animateOn,\n          formatValue: props.formatValue,\n        });\n      } else if (props.vizType === VizType.StackChart) {\n        createStackChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, config: props.config, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          enableBrushZoom: props.enableBrushZoom,\n        });\n      } else if (props.vizType === VizType.ClusterChart) {\n        createClusterChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          hideLabels: props.hideLabels,\n          circleSpacing: props.circleSpacing,\n          max: props.max,\n        });\n      } else if (props.vizType === VizType.BoxAndWhiskersChart) {\n        createBoxAndWhiskersChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n        });\n      }\n    }\n    return () => {\n      if (svgNode) {\n        svgNode.innerHTML = '';\n      }\n    };\n  }, [svgNodeRef, sizingNodeRef, windowWidth, props]);\n\n  const handleDownloadImage = (fileFormat: FileFormat) => {\n    const svgNode = svgNodeRef ? svgNodeRef.current : null;\n    const sizingNode = sizingNodeRef ? sizingNodeRef.current : null;\n    const highResMultiplier = 3;\n    let width: number | undefined;\n    let height: number | undefined;\n    if (props.vizType === VizType.RadarChart && sizingNode) {\n      if (sizingNode.clientWidth > sizingNode.clientHeight) {\n        width = sizingNode.clientHeight * highResMultiplier;\n        height = sizingNode.clientHeight * highResMultiplier;\n      } else {\n        width = sizingNode.clientWidth * highResMultiplier;\n        height = sizingNode.clientWidth * highResMultiplier;\n      }\n    } else {\n      width = sizingNode && sizingNode.clientWidth ? sizingNode.clientWidth * highResMultiplier : undefined;\n      height = sizingNode && sizingNode.clientHeight ? sizingNode.clientHeight * highResMultiplier : undefined;\n    }\n    const title = props.chartTitle ? props.chartTitle : 'chart';\n    downloadImage({svg: svgNode, width, height, title, fileFormat});\n    if (triggerGoogleAnalyticsEvent) {\n      triggerGoogleAnalyticsEvent(id, 'download-' + fileFormat, title);\n    }\n  };\n\n  const downloadPNGButton = enablePNGDownload !== true ? null : (\n    <DownloadImageButton\n      onClick={() => handleDownloadImage(FileFormat.PNG)}\n    >\n      <SvgIcon src={DownloadSVGURL} alt={'Download PNG'} />\n      Download PNG\n    </DownloadImageButton>\n  );\n  const downloadSVGButton = enableSVGDownload !== true ? null : (\n    <DownloadImageButton\n      onClick={() => handleDownloadImage(FileFormat.SVG)}\n    >\n      <SvgIcon src={DownloadSVGURL} alt={'Download SVG'} />\n      Download SVG\n    </DownloadImageButton>\n  );\n  let downloadDataButton: React.ReactElement<any> | null;\n  if (jsonToDownload !== undefined) {\n    const filename = props.chartTitle ? props.chartTitle + '.csv' : 'data.csv';\n    const onClick = () => {\n      if (triggerGoogleAnalyticsEvent) {\n        triggerGoogleAnalyticsEvent(id, 'download-csv', props.chartTitle);\n      }\n    };\n    downloadDataButton = (\n      <DownloadDataButton\n        data={jsonToDownload}\n        filename={filename}\n        onClick={onClick}\n      >\n        <SvgIcon src={DataSVGURL} alt={'Download Data'} />\n        Download Data\n      </DownloadDataButton>\n    );\n  } else {\n    downloadDataButton = null;\n  }\n\n  const downloadButtons = downloadPNGButton !== null || downloadSVGButton !== null || downloadDataButton !== null ? (\n    <DownloadButtonsContainer style={{marginTop: props.vizType !== VizType.RadarChart ? '1rem' : undefined}}>\n      {downloadPNGButton}\n      {downloadSVGButton}\n      {downloadDataButton}\n    </DownloadButtonsContainer>\n  ) : null;\n\n  if (props.vizType === VizType.Error) {\n    return (\n      <Root>\n        <ErrorMessage>\n          {props.message}\n        </ErrorMessage>\n      </Root>\n    );\n  } else {\n    const caption = props.chartCaption ? (\n      <Caption>{props.chartCaption}</Caption>\n    ) : null;\n    return (\n      <Root style={rootStyles}>\n        <SizingElm ref={sizingNodeRef} style={{height: props.height}}>\n          <svg ref={svgNodeRef} key={id + windowWidth + 'svg'} />\n        </SizingElm>\n        {caption}\n        {downloadButtons}\n        <Tooltip ref={tooltipNodeRef} key={id + windowWidth + 'tooltip'} />\n      </Root>\n    );\n  }\n};\nexport {\n  ScatterPlotDatum,\n  BarChartDatum,\n  ClusterBarChartDatum,\n  RadarChartDatum,\n  LineChartDatum,\n  StackChartDatum,\n  ClusterChartDatum,\n  BoxAndWhiskersChartDatum,\n  LabelPlacement,\n  FileFormat,\n  GeoJsonCustomProperties,\n  Coords,\n  LabelAnchor,\n  LabelPosition,\n  AnimationDirection,\n  RadarChartOptions,\n  RadarChartConfig,\n  StackChartConfig,\n  RootDatum,\n  LeafDatum,\n  defaultPaletteColors,\n  defaultDivergentColors,\n  defaultCoolChloropleth,\n  defaultHotChloropleth,\n  formatNumber,\n  adaptLabelFontSize,\n  ColorScaleLegend,\n  HorizontalLegend,\n  HowToReadDots,\n  Legend,\n}\nexport default DataViz;\n\n","import * as d3 from 'd3';\n\nexport interface RadarChartOptions {\n  radius?: number;\n  width?: number;\n  height?: number;\n  factor?: number;\n  factorLegend?: number;\n  levels?: number;\n  maxValue?: number;\n  radians?: number;\n  opacityArea?: number;\n  ToRight?: number;\n  TranslateX?: number;\n  TranslateY?: number;\n  ExtraWidthX?: number;\n  ExtraWidthY?: number;\n  color?: d3.ScaleOrdinal<any, any> | any;\n}\n\nexport interface RadarChartConfig {\n  radius: number;\n  width: number;\n  height: number;\n  factor: number;\n  factorLegend: number;\n  levels: number;\n  maxValue: number;\n  radians: number;\n  opacityArea: number;\n  ToRight: number;\n  TranslateX: number;\n  TranslateY: number;\n  ExtraWidthX: number;\n  ExtraWidthY: number;\n  color: d3.ScaleOrdinal<any, any> | any;\n}\n\nexport interface Datum {\n  label: string;\n  value: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[][];\n  options?: RadarChartOptions;\n  labelFont?: string;\n}\n\nexport default ({svg, data, tooltip, options, labelFont}: Input) => {\n  // set default config\n  const config: RadarChartConfig = {\n    radius: 5,\n    width: 600,\n    height: 600,\n    factor: 1,\n    factorLegend: .85,\n    levels: 5,\n    maxValue: 100,\n    radians: 2 * Math.PI,\n    opacityArea: 0.5,\n    ToRight: 5,\n    TranslateX: 80,\n    TranslateY: 30,\n    ExtraWidthX: 100,\n    ExtraWidthY: 100,\n    color: d3.scaleOrdinal().range(['#6F257F', '#CA0D59']),\n  };\n\n  // if user input options, replace them in the config variable\n  if(options && 'undefined' !== typeof options){\n    Object.keys(options).forEach(function(key: keyof RadarChartOptions) {\n      if('undefined' !== typeof options[key]){\n        config[key] = options[key];\n      }\n    });\n  }\n\n  const margin = {top: 60, right: 60, bottom: 60, left: 60};\n  const width = config.width - margin.left - margin.right;\n  const height = config.height - margin.bottom - margin.top;\n\n  const allAxis = (data && data.length ? data[0].map(d => d.label) : []);\n  const total = allAxis.length;\n  const radius = config.factor * Math.min(width / 2, height / 2);\n\n\n  svg\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom);\n\n  const container = svg\n    .append('g')\n      .attr('transform',\n      'translate(' + margin.left + ',' + margin.top + ')');\n\n  //Circular segments\n  for(let j = 0; j < config.levels; j++) {\n    const levelFactor = config.factor * radius * ((j + 1)/config.levels);\n    container.selectAll('.levels')\n      .data(allAxis)\n      .enter()\n      .append('svg:line')\n        .attr('x1', (_d, i) => levelFactor * (1 - config.factor * Math.sin(i * config.radians / total)))\n        .attr('y1', (_d, i) => levelFactor * (1 - config.factor * Math.cos(i * config.radians / total)))\n        .attr('x2', (_d, i) => levelFactor * (1 - config.factor * Math.sin((i + 1) * config.radians / total)))\n        .attr('y2', (_d, i) => levelFactor * (1 - config.factor * Math.cos((i + 1) * config.radians / total)))\n        .attr('class', 'line')\n        .style('stroke', 'grey')\n        .style('stroke-opacity', '0.75')\n        .style('stroke-width', '0.6px')\n        .attr('transform', `translate(${width / 2 - levelFactor}, ${height / 2 - levelFactor})`);\n  }\n\n  //Text indicating at what % each level is\n  for(let j = 0; j < config.levels; j++) {\n    const levelFactor = config.factor * radius * ((j + 1) / config.levels);\n    container.selectAll('.levels')\n      .data([1]) //dummy data\n      .enter()\n      .append('svg:text')\n        .attr('x', () => levelFactor * (1 - config.factor*Math.sin(0)))\n        .attr('y', () => levelFactor * (1 - config.factor*Math.cos(0)))\n        .attr('class', 'legend')\n        .style('font-family', 'sans-serif')\n        .style('font-size', '10px')\n        .attr('transform', `translate(${width / 2 - levelFactor + config.ToRight}, ${height / 2 - levelFactor})`)\n        .attr('fill', '#737373')\n        .text( Math.round((j + 1) * config.maxValue / config.levels));\n  }\n\n  let series = 0;\n\n  const axis = container.selectAll('.axis')\n    .data(allAxis)\n    .enter()\n    .append('g')\n      .attr('class', 'axis');\n\n  axis.append('line')\n    .attr('x1', width/2)\n    .attr('y1', height  /2)\n    .attr('x2', (_d, i) => width / 2 * (1 - config.factor * Math.sin(i * config.radians / total)))\n    .attr('y2', (_d, i) => height / 2 * (1 - config.factor * Math.cos(i * config.radians / total)))\n    .attr('class', 'line')\n    .style('stroke', 'grey')\n    .style('stroke-width', '1px');\n\n  data.forEach((d) => {\n    const dataValues = d.map(({value}, i) => [\n      width/2*(1-(parseFloat(Math.max(value, 0).toString())/config.maxValue)*config.factor*Math.sin(i*config.radians/total)),\n      height/2*(1-(parseFloat(Math.max(value, 0).toString())/config.maxValue)*config.factor*Math.cos(i*config.radians/total)),\n    ]);\n\n    // push the first dataValue back to make a complete closed path\n    dataValues.push(dataValues[0]);\n\n      container.selectAll('.area')\n      .data([dataValues])\n      .enter()\n      .append('polygon')\n        .attr('class', 'radar-chart-serie'+series)\n        .style('stroke-width', '2px')\n        .style('stroke', config.color(series))\n        .attr('points', point => {\n          let value = '';\n          for(const p of point){\n            value = value + p[0] + ',' + p[1] + ' ';\n          }\n          return value;\n        })\n        .style('fill', config.color(series))\n        .style('fill-opacity', config.opacityArea)\n        .on('mouseover', function () {\n          const shape = 'polygon.'+d3.select(this).attr('class');\n          container.selectAll('polygon')\n          .transition()\n          .style('fill-opacity', 0.1);\n          container.selectAll(shape)\n          .transition()\n          .style('fill-opacity', .7);\n        })\n        .on('mouseout', () => {\n          container.selectAll('polygon')\n          .transition()\n          .style('fill-opacity', config.opacityArea);\n        });\n\n    series++;\n  });\n\n  series = 0;\n\n  data.forEach(d => {\n\n    container.selectAll('.nodes')\n      .data(d)\n      .enter()\n      .append('svg:circle')\n        .attr('class', 'radar-chart-serie' + series)\n        .attr('r', config.radius)\n        .attr('alt', j => Math.max(j.value, 0))\n        .attr('cx', (j, i) => width/2*(1-(Math.max(j.value, 0)/config.maxValue)*config.factor*Math.sin(i*config.radians/total)))\n        .attr('cy', (j, i) => height  /2*(1-(Math.max(j.value, 0)/config.maxValue)*config.factor*Math.cos(i*config.radians/total)))\n        .attr('data-id', j => j.label)\n        .style('fill', '#fff')\n        .style('stroke-width', '2px')\n        .style('stroke', config.color(series)).style('fill-opacity', .9)\n        .on('mousemove', p => {\n          tooltip\n            .style('left', d3.event.pageX + 'px')\n            .style('top', d3.event.pageY + 'px')\n            .style('display', 'block')\n            .html(`<strong>${p.label}</strong>: ${p.value}`);\n        })\n        .on('mouseout', function(){ tooltip.style('display', 'none');});\n\n    series++;\n  });\n\n  const labels = axis.append('text')\n    .style('font-size', '11px')\n    .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n    .attr('text-anchor', 'middle')\n    .attr('dy', '1.5em')\n    .attr('transform', (_d, i) => {\n      if (i === 0) {\n        return 'translate(0, -12)';\n      } else if (i === 1 && total === 4) {\n        return 'translate(4, 0)';\n      } else {\n        return 'translate(0, 0)';\n      }\n    })\n    .attr('class', 'legend')\n    .attr('x', (_d, i) => width / 2 * (1 - config.factorLegend * Math.sin(i * config.radians / total)) -60 * Math.sin(i * config.radians/total))\n    .attr('y', (_d, i) => height / 2 * (1 - Math.cos(i * config.radians / total)) - 20 * Math.cos(i *config.radians / total));\n\n  const seperator = '|||||';\n\n  labels.selectAll('tspan')\n    .data((d, i) => {\n      const res = d.split('\\n');\n      const arr = res.map(text => `${i}${seperator}${text}`);\n      return arr;\n    })\n    .enter()\n    .append('tspan')\n    .text(d => {\n      const text = d.split(seperator).pop();\n      return text !== undefined ? text : '';\n    })\n    .attr('x', (d) => {\n      const originalI = d.split(seperator).shift();\n      const i = originalI !== undefined ? parseInt(originalI, 10) : 0;\n      return width / 2 * (1 - config.factorLegend * Math.sin(i * config.radians / total)) -60 * Math.sin(i * config.radians/total);\n    })\n    .attr('dx', 0)\n    .attr('dy', (_d, i) => i !== 0 ? 15 : 0);\n\n};\n\n","import * as d3 from 'd3';\nimport { baseColor } from './Utils';\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\nexport interface GeoJsonCustomProperties {\n  percent: number;\n  tooltipContent?: string;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: d3.ExtendedFeature<any, GeoJsonCustomProperties>;\n  size: Dimensions;\n  minColor: string;\n  maxColor: string;\n}\n\nexport default (input: Input) => {\n  const { svg, data, size, tooltip, minColor, maxColor } = input;\n\n  const margin = {top: 30, right: 30, bottom: 30, left: 30};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  const center = d3.geoCentroid(data);\n  let scale  = 150;\n  let offset: [number, number] = [width/2, height/2];\n  let projection = d3.geoMercator().scale(scale).center(center)\n        .translate(offset);\n\n  // create the path\n  let path = d3.geoPath().projection(projection);\n\n  // using the path determine the bounds of the current map and use\n  // these to determine better values for the scale and translation\n  const bounds  = path.bounds(data);\n  const hscale  = scale*width  / (bounds[1][0] - bounds[0][0]);\n  const vscale  = scale*height / (bounds[1][1] - bounds[0][1]);\n  scale   = (hscale < vscale) ? hscale : vscale;\n  offset  = [width - (bounds[0][0] + bounds[1][0])/2,\n                    height - (bounds[0][1] + bounds[1][1])/2];\n\n  // new projection\n  projection = d3.geoMercator().center(center)\n    .scale(scale).translate(offset);\n  path = path.projection(projection);\n\n  const allValues: number[] = (data as any).features.map((node: any) => node.properties.percent);\n\n  const rawMinValue = d3.min(allValues);\n  const rawMaxValue = d3.max(allValues);\n\n  const minValue = rawMinValue ? Math.floor(rawMinValue) : 0;\n  const maxValue = rawMaxValue ? Math.ceil(rawMaxValue) : 0;\n\n  const colorScale = d3.scaleLinear<string>().domain([minValue, maxValue]).range([minColor, maxColor]);\n\n  svg\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom);\n\n  const container = svg\n    .append('g')\n      .attr('transform',\n      'translate(' + margin.left + ',' + margin.top + ')');\n\n  container.selectAll('path')\n     .data((data as any).features)\n      .enter()\n     .append('path')\n     .attr('d', path)\n     .attr('stroke-width',1)\n     .attr('stroke',baseColor)\n     .attr('class','pathClass')\n     .on('mousemove', function(d: any) {\n       if (d.properties.tooltipContent) {\n        tooltip\n          .style('left', d3.event.pageX + 'px')\n          .style('top', d3.event.pageY + 'px')\n          .style('display', 'block')\n          .html(d.properties.tooltipContent);\n       }\n      })\n      .on('mouseout', function(){\n        tooltip.style('display', 'none');\n      });\n\n  container.selectAll('.pathClass').attr('fill', (d: any) => colorScale(d.properties.percent));\n\n};\n","import * as d3 from 'd3';\nimport {formatNumber} from './Utils';\n\nexport interface Datum {\n  groupName: string;\n  x: string;\n  y: number;\n  fill?: string;\n  tooltipContent?: string;\n  tooltipContentOnly?: boolean;\n  onClick?: () => void;\n  onMouseMove?: (d: Datum, coords: {x: number, y: number}) => void;\n  onMouseLeave?: (d: Datum, coords: {x: number, y: number}) => void;\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[];\n  size: Dimensions;\n  axisLabels?: {left?: string, bottom?: string};\n  labelFont?: string;\n  axisMinMax?: {\n    minY?: number,\n    maxY?: number,\n  };\n  formatAxis?: {\n    y?: (n: number) => string;\n  };\n  animateAxis?: {\n    animationDuration: number,\n    startMinY: number,\n    startMaxY: number,\n  };\n  tickCount?: {\n    x?: number;\n    y?: number;\n  };\n  animateBars?: number;\n}\n\nexport default (input: Input) => {\n  const {\n    svg, size, axisLabels, data, tooltip, labelFont, formatAxis,\n    animateAxis, tickCount, axisMinMax, animateBars,\n  } = input;\n\n  const margin = {\n    top: 30, right: 30,\n    bottom: axisLabels && axisLabels.bottom ? 60 : 30,\n    left: 30};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n  // set the ranges\n  const x = d3.scaleBand().rangeRound([0, width])\n    .padding(0.1);\n  const y = d3.scaleLinear().range([height, 0]);\n\n  const g = svg.append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n  const rawMinY = axisMinMax && axisMinMax.minY !== undefined\n    ? axisMinMax.minY\n    : d3.min(data, function(d) {\n      return d.y;\n    });\n  const rawMaxY = axisMinMax && axisMinMax.maxY !== undefined\n    ? axisMinMax.maxY\n    : d3.max(data, function(d) {\n      return d.y;\n    });\n\n  const minY = rawMinY ? rawMinY : 0;\n  const maxY = rawMaxY ? rawMaxY : 0;\n\n  y.domain([minY, maxY]);\n  x.domain(data.map(function(d) {\n    return d.x;\n  }));\n\n  const x1 = d3.scaleBand()\n    .rangeRound([0, x.bandwidth()])\n    .padding(0.05)\n    .domain(data.map(function(d) {\n      return d.groupName;\n    }));\n\n  color.domain(data.map(function(d) {\n    return d.groupName;\n  }));\n\n  const groups = g.selectAll(null)\n    .data(data)\n    .enter()\n    .append('g')\n    .attr('transform', function(d) {\n      return 'translate(' + x(d.x) + ',0)';\n    });\n\n  groups.selectAll(null)\n    .data(function(d) {\n      return [d];\n    })\n    .enter()\n    .append('rect')\n    .attr('x', function(d) {\n      const xVal = x1(d.groupName);\n      return xVal ? xVal : 0;\n    })\n    .attr('width', x1.bandwidth())\n    .attr('fill', d => d.fill ? d.fill : color(d.groupName))\n    .style('cursor', ({onClick}) => onClick ? 'pointer' : 'default')  \n    .on('mousemove', d => {\n      const {groupName, x: valueName, tooltipContent, tooltipContentOnly, onMouseMove} = d;\n      if (onMouseMove) {\n        onMouseMove(d, {x: d3.event.pageX, y: d3.event.pageY})\n      } else {\n        if (tooltipContentOnly && tooltipContent && tooltipContent.length) {\n          tooltip.html(tooltipContent);\n        } else {\n          const content = tooltipContent === undefined || tooltipContent.length === 0\n            ? '' : `:<br />${tooltipContent}`;\n          tooltip.html(`<strong>${groupName}, ${valueName}</strong>${content}`);\n        }\n        tooltip\n          .style('display', 'block')\n          .style('transform', 'translate(-50%, -100%)')\n          .style('left', (d3.event.pageX + 4) + 'px')\n          .style('top', (d3.event.pageY - 4) + 'px');\n      }\n      })\n    .on('mouseout', d => {\n      if (d.onMouseLeave) {\n        d.onMouseLeave(d, {x: d3.event.pageX, y: d3.event.pageY})\n      } else {\n        tooltip\n            .style('display', 'none');\n      }\n    })\n    .on('click', ({onClick}) => onClick ? onClick() : undefined)\n    .attr('y', height)\n    .transition() // Call Transition Method\n    .duration(animateBars ? animateBars : 0) // Set Duration timing (ms)\n    .delay(animateAxis && animateAxis.animationDuration ? animateAxis.animationDuration : 0)\n    .attr('y', function(d) {\n      return y(d.y);\n    })\n    .attr('height', function(d) {\n      return height - y(d.y);\n    })\n\n\n    const formatY = formatAxis && formatAxis.y ? formatAxis.y : formatNumber;\n    let yDomain = d3.axisLeft(y);\n    if (animateAxis !== undefined) {\n      const {\n        startMinY, startMaxY,\n      } = animateAxis;\n      const startY = d3.scaleLinear().range([height, 0]);\n      // Scale the range of the data\n      startY.domain([startMinY, startMaxY]);\n\n      // xDomain = d3.axisBottom(startX);\n      yDomain = d3.axisLeft(startY);\n    }\n\n    function wrap(text: any, width: any) {\n      text.each(function() {\n        // @ts-ignore\n        const text = d3.select(this);\n        const words = text.text().split(/\\s+/).reverse();\n        let word: string | undefined;\n        let line: string[] = [];\n        let lineNumber = 0;\n        const lineHeight = 1.1; // ems\n        const y = text.attr(\"y\");\n        const dy = parseFloat(text.attr(\"dy\"));\n        let tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n        while (word = words.pop()) {\n          line.push(word);\n          tspan.text(line.join(\" \"));\n          const node = tspan.node();\n          if (node && node.getComputedTextLength() > width) {\n            line.pop();\n            tspan.text(line.join(\" \"));\n            line = [word];\n            tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n          }\n        }\n      });\n    }\n\n    // Add the x Axis\n    g.append('g')\n        .attr('class', 'myXaxis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .call(d3.axisBottom(x))\n        .selectAll(\".tick text\")\n        .call(wrap, x.bandwidth());\n\n    // Add the y Axis\n    g.append('g')\n        .attr('class', 'myYaxis')\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .call(yDomain.tickFormat(formatY).ticks(tickCount && tickCount.y ? tickCount.y : 10));\n\n    if (animateAxis !== undefined) {\n      (g.selectAll('.myYaxis')\n        .transition()\n        .duration(animateAxis.animationDuration) as any)\n        .call(d3.axisLeft(y).tickFormat(formatY).ticks(tickCount && tickCount.y ? tickCount.y : 10));\n\n      (g.selectAll('.myXaxis text')\n        .style('fill', 'rgba(0, 0, 0, 0)')\n        .transition()\n        .duration(animateAxis.animationDuration) as any)\n        .style('fill', 'rgba(0, 0, 0, 1)')\n        .call(d3.axisBottom(x))\n        .selectAll(\".tick text\")\n        .call(wrap, x.bandwidth());\n    }\n\n     // append Y axis label\n    g.append('g')\n      .append('text')\n      .attr('y', -margin.top / 2)\n      .attr('x', 0)\n      .attr('dy', '0.75em')\n      .attr('fill', '#000')\n      .attr('text-anchor', 'start')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .text(axisLabels && axisLabels.left ? axisLabels.left : '');\n\n};\n","import * as d3 from 'd3';\n\nexport interface RootDatum {\n  id: string;\n  label: string;\n  fill?: string;\n  children: (LeafDatum | RootDatum)[];\n}\n\nexport interface LeafDatum {\n  id: string;\n  label: string;\n  tooltipContent?: string;\n  size: number;\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  size: Dimensions;\n  data: RootDatum;\n  labelFont?: string;\n  animateOn?: boolean;\n}\n\nexport default (input: Input) => {\n  const { svg, size, data, tooltip, labelFont, animateOn} = input;\n\n  const margin = {top: 0, right: 0, bottom: 0, left: 0};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  const treemap = d3.treemap()\n      .tile(d3.treemapResquarify)\n      .size([width, height])\n      .round(true)\n      .paddingInner(1);\n\n  const root = d3.hierarchy(data)\n      .eachBefore((d: any) => d.data.id = (d.parent ? d.parent.data.id + '.' : '') + d.data.id)\n      .sum((d: any) => d.size)\n      .sort((a, b) => {\n        if (b.height - a.height) {\n          return b.height - a.height;\n        } else if (b.value && a.value) {\n          return b.value - a.value;\n        } else {\n          return 0;\n        }\n       });\n\n  treemap(root);\n\n  const cell = svg.selectAll('g')\n    .data(root.leaves())\n    .enter().append('g')\n      .attr('transform', (d: any) => 'translate(' + d.x0 + ',' + d.y0 + ')')\n      .on('mousemove', (d: any) => {\n          tooltip\n            .style('position', 'fixed')\n            .style('left', d3.event.clientX + 'px')\n            .style('top', d3.event.clientY + 'px')\n            .style('display', 'flex')\n            .style('align-items', 'center')\n            .html(`<div style=\"\n              display: inline-block;\n              background-color: ${d.parent.data.fill};\n              width: 12px;\n              height: 12px;\n              margin-right: 12px;\n              flex-shrink: 0;\n            \"></div>` +\n                d.data.tooltipContent);\n        })\n      .on('mouseout', () => tooltip.style('display', 'none'));\n\n  cell.append('rect')\n      .attr('id', (d: any) => d.data.id)\n      .attr('finalwidth', (d: any) => d.x1 - d.x0)\n      .attr('finalheight', (d: any) => d.y1 - d.y0)\n      .attr('width', (d: any) => d.x1 - d.x0)\n      .attr('height', (d: any) => d.y1 - d.y0)\n      .attr('fill', (d: any) =>  d.parent.data.fill);\n\n  cell.append('clipPath')\n      .attr('id', (d: any) => 'clip-' + d.data.id)\n    .append('use')\n      .attr('xlink:href', (d: any) => '#' + d.data.id);\n\n  cell.append('text')\n      .attr('clip-path', (d: any) => 'url(#clip-' + d.data.id + ')')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .attr('font-size', '0.75rem')\n      .attr('x', 8)\n      .attr('y', 16)\n      .text((d: any) => d.data.label + ' - ' + d.data.size + '%')\n      .call(wrap);\n\n  if (animateOn) {\n    cell\n        .style('transform', (d: any) => `translate(${d.x0}px, ${d.y0}px) scale(0)`)\n        .transition()\n        .duration(500)\n        .style('transform', (d: any) => `translate(${d.x0}px, ${d.y0}px) scale(1)`);\n  }\n\n  function wrap(text: any) {\n    text.each(function() {\n      // @ts-ignore\n      const t = d3.select(this as any);\n      // @ts-ignore\n      const rect = this.parentElement.querySelector('rect');\n      const rectWidth = rect.getAttribute('finalwidth');\n      const rectHeight = rect.getAttribute('finalheight');\n      const words = t.text().split(/\\s+/).reverse();\n      let word = words.pop();\n      let line: string[] = [];\n      let lineNumber = 0; //<-- 0!\n      const lineHeight = 1.2; // ems\n      const x = t.attr('x'); //<-- include the x!\n      const y = t.attr('y');\n      const dy = t.attr('dy') ? t.attr('dy') : 0; //<-- null check\n      let tspan = t.text(null).append('tspan').attr('x', x).attr('y', y).attr('dy', dy + 'em');\n      while (word !== undefined) {\n        line.push(word);\n        tspan.text(line.join(' '));\n        const node = tspan.node();\n        if (node && node.getComputedTextLength() > (rectWidth * 0.8)) {\n          line.pop();\n          tspan.text(line.join(' '));\n          line = [word];\n          // @ts-ignore\n          tspan = t.append('tspan').attr('x', x).attr('y', y).attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n        }\n        word = words.pop();\n      }\n      if (t.node().getBBox().width > rectWidth || t.node().getBBox().height > rectHeight * 0.8) {\n        t.attr('opacity', '0');\n      }\n    });\n  }\n};\n","import * as d3 from 'd3';\nimport {formatNumber} from './Utils';\n\nexport interface Datum {\n  [key: string]: number;\n}\n\nexport interface StackChartConfig {\n  primaryKey: string;\n  groups: {\n    key: string;\n    label: string;\n    fill?: string;\n  }[];\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  size: Dimensions;\n  config: StackChartConfig;\n  data: Datum[];\n  enableBrushZoom?: boolean;\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const { svg, size, data, config, tooltip, enableBrushZoom, labelFont } = input;\n\n  const margin = {top: 30, right: 30, bottom: 30, left: 30};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  // append the svg object to the body of the page\n\n  svg\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom);\n\n  const g = svg.append('g')\n              .attr('transform',\n                'translate(' + margin.left + ',' + margin.top + ')');\n\n  const keys = config.groups.map(({key}) => key);\n  const color = d3.scaleOrdinal()\n    .domain(keys)\n    .range(d3.schemeSet2);\n  const stackedData = d3.stack().order(d3.stackOrderDescending).keys(keys)(data);\n\n    // set the ranges\n  const xScale = d3.scaleLinear()\n            .range([0, width]);\n  const yScale = d3.scaleLinear()\n            .range([height, 0]);\n\n  const allYValues: number[] = [];\n  stackedData.forEach(datum => {\n    if (datum && datum.length) {\n      datum.forEach(value => {\n        allYValues.push(value[1]);\n      });\n    }\n  });\n  const allXValues: number[] = data.map(d => d[config.primaryKey]);\n\n  const rawMinY = d3.min(allYValues);\n  const rawMaxY = d3.max(allYValues);\n  const rawMinX = d3.min(allXValues);\n  const rawMaxX = d3.max(allXValues);\n\n  const minY = rawMinY ? rawMinY : 0;\n  const maxY = rawMaxY ? rawMaxY : 0;\n  const minX = rawMinX ? rawMinX : 0;\n  const maxX = rawMaxX ? rawMaxX : 0;\n\n  // Scale the range of the data in the domains\n  xScale.domain([minX, maxX]);\n  yScale.domain([minY, maxY]);\n\n  //////////\n  // BRUSHING AND CHART //\n  //////////\n\n  svg.append('defs').append('svg:clipPath')\n      .attr('id', 'clip')\n      .append('svg:rect')\n      .attr('width', width )\n      .attr('height', height )\n      .attr('x', 0)\n      .attr('y', 0);\n\n  // Add brushing\n  const brush = d3.brushX()                 // Add the brush feature using the d3.brush function\n      .extent( [ [0,0], [width,height] ] ) // initialise the brush area: start at 0,0 and finishes at width,height: it means I select the whole graph area\n      .on('end', updateChart); // Each time the brush selection changes, trigger the 'updateChart' function\n\n  // Create the scatter variable: where both the circles and the brush take place\n\n  const areaChart = g.append('g')\n    .attr('clip-path', 'url(#clip)');\n\n  // Area generator\n  const area = d3.area()\n    .x((d: any) => xScale(d.data[config.primaryKey]))\n    .y0((d) => yScale(d[0]))\n    .y1((d) => yScale(d[1]));\n\n  // Show the areas\n  areaChart\n    .selectAll('mylayers')\n    .data(stackedData)\n    .enter()\n    .append('path')\n      .attr('class', function(d) { return 'myArea ' + d.key; })\n      .style('fill', d => {\n        const groupConfig = config.groups.find(group => group.key === d.key);\n        if (groupConfig && groupConfig.fill) {\n          return groupConfig.fill;\n        } else {\n          return color(d.key) as string;\n        }\n      })\n      .attr('d', area as any)\n      .on('mousemove', d => {\n          const groupConfig = config.groups.find(group => group.key === d.key);\n          if (groupConfig) {\n            const fill = groupConfig.fill ? groupConfig.fill : color(d.key) as string;\n            tooltip\n              .style('position', 'fixed')\n              .style('left', d3.event.clientX + 'px')\n              .style('top', d3.event.clientY + 'px')\n              .style('display', 'flex')\n              .style('align-items', 'center')\n              .html(`<div style=\"\n                display: inline-block;\n                background-color: ${fill};\n                width: 12px;\n                height: 12px;\n                margin-right: 12px;\n                flex-shrink: 0;\n              \"></div>` + groupConfig.label);\n          }\n        })\n      .on('mouseout', () => tooltip.style('display', 'none'));\n\n  if (enableBrushZoom) {\n    // Add the brushing\n    areaChart\n      .append('g')\n        .attr('class', 'brush')\n        .call(brush);\n  }\n\n  const xAxis = g.append('g')\n    .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n    .attr('transform', 'translate(0,' + height + ')')\n    .call(d3.axisBottom(xScale).ticks(5).tickFormat(y => y.toString()));\n  g.append('g')\n    .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n    .call(d3.axisLeft(yScale).tickFormat(formatNumber));\n\n  let idleTimeout: number | null;\n  function idled() { idleTimeout = null; }\n\n  // A function that update the chart for given boundaries\n  function updateChart() {\n\n    const extent = d3.event.selection;\n\n    // If no selection, back to initial coordinate. Otherwise, update X axis domain\n    if(!extent){\n      if (!idleTimeout) return idleTimeout = setTimeout(idled, 350); // This allows to wait a little bit\n      xScale.domain([minX, maxX]);\n    }else{\n      xScale.domain([ xScale.invert(extent[0]), xScale.invert(extent[1]) ]);\n      areaChart.select('.brush').call(brush.move, null); // This remove the grey brush area as soon as the selection has been done\n    }\n\n    // Update axis and area position\n    xAxis.transition().duration(1000).call(d3.axisBottom(xScale).ticks(5).tickFormat(y => y.toString()));\n    areaChart\n      .selectAll('path')\n      .transition().duration(1000)\n      .attr('d', area);\n\n    return undefined;\n  }\n\n};\n","import * as d3 from 'd3';\nimport {adaptLabelFontSize} from './Utils';\n\nexport interface Datum {\n  name: string;\n  label: string;\n  value: number;\n  fill: string;\n  tooltipContent?: string;\n}\n\ninterface ParentDatum {\n  id: string;\n}\n\ninterface SrcDatum extends ParentDatum {\n  name: string;\n  value: number;\n  parentId: string;\n}\n\ntype SrcData = (SrcDatum | ParentDatum)[];\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  size: Dimensions;\n  data: Datum[];\n  hideLabels?: boolean;\n  circleSpacing?: number;\n  max?: number;\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const {\n    svg, size, data, tooltip, hideLabels,\n    circleSpacing, max, labelFont,\n  } = input;\n\n\n  const allValues: number[] = [];\n\n  const srcData: SrcData = data.map(d => {\n    allValues.push(d.value);\n    return {\n      id: d.label, size: d.value, parentId: 'global', ...d,\n    };\n  });\n  srcData.unshift({id: 'global'});\n\n  const margin = {top: 10, right: 10, bottom: 10, left: 10};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  svg.attr('width', width)\n     .attr('height', height);\n\n  const g = svg.append('g')\n            .attr('class', 'main-group');\n\n\n  let layout: d3.PackLayout<any>;\n  if (max) {\n    const sizeScale = d3.scaleSqrt().range([0, max]);\n    layout = d3.pack()\n              .radius((d: any) => sizeScale(d.value))\n              .size([width, height])\n              .padding(circleSpacing !== undefined ? circleSpacing : 6);\n  } else {\n    layout = d3.pack()\n              .size([width, height])\n              .padding(circleSpacing !== undefined ? circleSpacing : 6);\n  }\n\n  const stratData = d3.stratify()(srcData);\n  const root = d3.hierarchy(stratData)\n      .sum(function(d: any) { return d.data.size; })\n      .sort(function(a: any, b: any) { return b.value - a.value; });\n  const nodes = root.descendants();\n\n  layout(root);\n\n  g.selectAll('circle')\n    .data(nodes)\n    .enter()\n    .filter((d) => d.parent !== null )\n    .append('circle')\n    .attr('cx', (d: any) => d.x)\n    .attr('cy', (d: any) => d.y)\n    .attr('r', (d: any) => d.r)\n    .style('fill', (d: any) => d.data.data.fill)\n    .on('mousemove', (d: any) => {\n        const content = d.data.data.tooltipContent\n          ? d.data.data.tooltipContent\n          : `<strong>${d.data.data.name}</strong>: ${d.data.data.value}`;\n        tooltip\n          .style('position', 'fixed')\n          .style('left', d3.event.clientX + 'px')\n          .style('top', d3.event.clientY + 'px')\n          .style('display', 'flex')\n          .style('align-items', 'center')\n          .html(`<div style=\"\n            display: inline-block;\n            width: 12px;\n            height: 12px;\n            margin-right: 12px;\n            background-color: ${d.data.data.fill};\n            flex-shrink: 0;\n          \"></div>${content}\n          `);\n      })\n    .on('mouseout', () => tooltip.style('display', 'none'));\n\n  if (!hideLabels) {\n    g.selectAll('text')\n      .data(nodes)\n      .enter()\n      .filter((d) => d.parent !== null )\n      .append('text')\n      .attr('x', (d: any) => d.x)\n      .attr('y', (d: any) => d.y)\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .text(d => {\n        if (d.data.id) {\n          return d.data.id;\n        } else {\n          return '';\n        }\n      })\n      .style('fill', '#fff')\n      .style('font-size', adaptLabelFontSize)\n      .attr('text-anchor', 'middle')\n      .style('transform', (d: any) => {\n        const adjust = parseInt(d.r, 10) * 0.15;\n        return 'translate(0px, ' + adjust + 'px)';\n      })\n      .style('pointer-events', 'none');\n  }\n\n  g.style('transform', () => max !== undefined ? 'scale(' + max / 100 + ')' : null)\n   .style('transform-origin', 'center');\n};\n","import * as d3 from 'd3';\n\nexport interface Datum {\n  category: string;\n  label: string;\n  value: number;\n  plotPoint: boolean;\n  primaryPoint: boolean;\n  fill?: string;\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[];\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  size: Dimensions;\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const { svg, data, size, labelFont, tooltip} = input;\n\n  const margin = {top: 30, right: 20, bottom: 30, left: 40};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  svg\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom);\n\nconst group = svg.append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n// Compute quartiles, median, inter quantile range min and max --> these info are then used to draw the box.\nconst sumstat = d3.nest() // nest function allows to group the calculation per level of a factor\n  .key((d: Datum) => d.category)\n  .rollup((d: Datum[]) => {\n    const q1 = d3.quantile(d.map(g => g.value).sort(d3.ascending),.25) as number;\n    const median = d3.quantile(d.map(g => g.value).sort(d3.ascending),.5) as number;\n    const q3 = d3.quantile(d.map(g => g.value).sort(d3.ascending),.75) as number;\n    const interQuantileRange = q3 - q1;\n    const allValues = d.map(({value}) => value);\n    const [min, max] = d3.extent(allValues);\n    return({q1, median, q3, interQuantileRange, min, max}) as any;\n  })\n  .entries(data);\n\n  const allCategories: string[] = [];\n  const allMinMaxValues: number[] = [];\n  sumstat.forEach(({key, value}) => {\n    allCategories.push(key);\n    allMinMaxValues.push((value as any as {min: number}).min);\n    allMinMaxValues.push((value as any as {max: number}).max);\n  });\n\n  // Show the X scale\n  const x = d3.scaleBand()\n    .range([ 0, width ])\n    .domain(allCategories)\n    .paddingInner(1)\n    .paddingOuter(.5);\n\n  group.append('g')\n    .attr('transform', 'translate(0,' + height + ')')\n    .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n    .call(d3.axisBottom(x));\n\n  const [minY, maxY] = d3.extent(allMinMaxValues) as [number, number];\n\n  // Show the Y scale\n  const y = d3.scaleLinear()\n    .domain([minY * 0.85,maxY * 1.15])\n    .range([height, 0]);\n\n  group.append('g')\n    .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n    .call(d3.axisLeft(y));\n\n  // Show the main vertical line\n  group\n    .selectAll('vertLines')\n    .data(sumstat)\n    .enter()\n    .append('line')\n      .attr('x1', d => x(d.key) as number)\n      .attr('x2', d => x(d.key) as number)\n      .attr('y1', d => y((d.value as any as {min: number}).min) as number)\n      .attr('y2', d => y((d.value as any as {max: number}).max) as number)\n      .attr('stroke', '#555')\n      .style('width', 40);\n\n  // rectangle for the main box\n  const boxWidth = width / allCategories.length * 0.7;\n  group\n    .selectAll('boxes')\n    .data(sumstat)\n    .enter()\n    .append('rect')\n        .attr('x', d => (x(d.key) as number) - boxWidth / 2)\n        .attr('y', d => y((d.value as any as {q3: number}).q3) as number)\n        .attr('height', d => (y((d.value as any as {q1: number}).q1) - y((d.value as any as {q3: number}).q3)))\n        .attr('width', boxWidth)\n        .attr('stroke', '#555')\n        .style('fill', '#EC7063')\n        .style('opacity', '0.3');\n\n  // Show the median\n  group\n    .selectAll('medianLines')\n    .data(sumstat)\n    .enter()\n    .append('line')\n      .attr('x1', d => (x(d.key) as number) - boxWidth / 2)\n      .attr('x2', d => (x(d.key) as number) + boxWidth / 2)\n      .attr('y1', d => y((d.value as any as {median: number}).median))\n      .attr('y2', d => y((d.value as any as {median: number}).median))\n      .style('width', 80)\n      .style('stroke', '#555');\n\n  // Show the max line\n  group\n    .selectAll('maxLines')\n    .data(sumstat)\n    .enter()\n    .append('line')\n      .attr('x1', d => (x(d.key) as number) - boxWidth / 2)\n      .attr('x2', d => (x(d.key) as number) + boxWidth / 2)\n      .attr('y1', d => y((d.value as any as {max: number}).max))\n      .attr('y2', d => y((d.value as any as {max: number}).max))\n      .style('width', 80)\n      .style('stroke', '#555');\n  // Show the min line\n  group\n    .selectAll('minLines')\n    .data(sumstat)\n    .enter()\n    .append('line')\n      .attr('x1', d => (x(d.key) as number) - boxWidth / 2)\n      .attr('x2', d => (x(d.key) as number) + boxWidth / 2)\n      .attr('y1', d => y((d.value as any as {min: number}).min))\n      .attr('y2', d => y((d.value as any as {min: number}).min))\n      .style('width', 80)\n      .style('stroke', '#555');\n\n  group\n    .selectAll('indPoints')\n    .data(data.filter(d => d.plotPoint && !d.primaryPoint))\n    .enter()\n    .append('circle')\n      .attr('cx', d => x(d.category) as number)\n      .attr('cy', d => y(d.value) as number)\n      .attr('r', 4)\n      .style('fill', d => d.fill ? d.fill : '#2874A6')\n      .on('mousemove', d => {\n          tooltip\n            .style('position', 'fixed')\n            .style('left', d3.event.clientX + 'px')\n            .style('top', d3.event.clientY + 'px')\n            .style('display', 'flex')\n            .style('align-items', 'center')\n            .html(`<strong>${d.label}, ${d.category}</strong>: ${parseFloat(d.value.toFixed(2))}`);\n      })\n      .on('mouseout', () => tooltip.style('display', 'none'));\n  group\n    .selectAll('primaryPoints')\n    .data(data.filter(d => d.plotPoint && d.primaryPoint))\n    .enter()\n    .append('circle')\n      .attr('cx', d => x(d.category) as number)\n      .attr('cy', d => y(d.value) as number)\n      .attr('r', 7)\n      .style('fill', d => d.fill ? d.fill : 'red')\n      .on('mousemove', d => {\n          tooltip\n            .style('position', 'fixed')\n            .style('left', d3.event.clientX + 'px')\n            .style('top', d3.event.clientY + 'px')\n            .style('display', 'flex')\n            .style('align-items', 'center')\n            .html(`<strong>${d.label}, ${d.category}</strong>: ${d.value}`);\n      })\n      .on('mouseout', () => tooltip.style('display', 'none'));\n\n};\n","import React from 'react';\nimport styled from 'styled-components/macro';\nimport { Link } from 'react-router-dom';\nimport { Content } from '../styling/Grid';\nimport {\n  SectionHeader,\n  secondaryFont,\n} from '../styling/styleUtils';\nimport {VizType} from 'react-fast-charts';\n\nconst List = styled.ul`\n  font-family: ${secondaryFont};\n`;\nconst ListItem = styled.li`\n  font-size: 1rem;\n  margin-bottom: 0.85rem;\n\n  a {\n    color: rgb(78, 140, 141); \n    text-decoration: none;\n    border-bottom: solid 1px rgb(78, 140, 141);\n  }\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <SectionHeader>Examples of react-fast-charts</SectionHeader>\n      <h3>Data Visualizations</h3>\n      <List>\n        <ListItem><Link to={'/' + VizType.ScatterPlot}>VizType.ScatterPlot</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.BarChart}>VizType.BarChart</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.ClusterBarChart}>VizType.ClusterBarChart</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.RadarChart}>VizType.RadarChart</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.GeoMap}>VizType.GeoMap</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.LineChart}>VizType.LineChart</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.TreeMap}>VizType.TreeMap</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.StackChart}>VizType.StackChart</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.ClusterChart}>VizType.ClusterChart</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.BoxAndWhiskersChart}>VizType.BoxAndWhiskersChart</Link></ListItem>\n        <ListItem><Link to={'/' + VizType.Error}>VizType.ErrorViz</Link></ListItem>\n      </List>\n      <h3>Legends and Scales</h3>\n      <List>\n        <ListItem><Link to={'/ColorScaleLegend'}>Color Scale Legend</Link></ListItem>\n        <ListItem><Link to={'/HorizontalLegend'}>Horizontal Legend</Link></ListItem>\n        <ListItem><Link to={'/HowToReadDots'}>How To Read Dots</Link></ListItem>\n        <ListItem><Link to={'/Legend'}>Legend</Link></ListItem>\n      </List>\n    </Content>\n  );\n}\n","import React from 'react';\nimport {\n  NavContainer,\n  gridSmallMediaWidth,\n} from '../styling/Grid';\nimport styled from 'styled-components/macro';\nimport {\n  baseColor,\n  secondaryFont,\n} from '../styling/styleUtils';\n\nexport const mobileHeight = 50; // in px\n\nconst Ul = styled.ul`\n  top: 0;\n  background-color: #fff;\n  margin: 1rem 0 0;\n  padding: 0 0 0 1.3rem;\n  list-style: none;\n  text-align: right;\n  border-top: solid 1px transparent;\n\n  @media (max-width: ${gridSmallMediaWidth}px) {\n    display: none;\n  }\n`;\n\nconst Link = styled.a`\n  padding: 0.4rem;\n  height: 1.9rem;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  background-color: var(--background-color);\n  text-decoration: none;\n  color: ${baseColor};\n  font-family: ${secondaryFont};\n  font-size: 0.8rem;\n  letter-spacing: 1px;\n\n  &:after {\n    content: '';\n    display: block;\n    height: 100%;\n    width: 0.35rem;\n    margin-left: 0.35rem;\n    background-color: var(--border-color);\n  }\n\n  &:hover {\n    background-color: var(--hover-color);\n    &:after {\n      background-color: var(--border-hover-color);\n    }\n  }\n\n\n  @media (max-width: ${gridSmallMediaWidth}px) {\n    flex-direction: row-reverse;\n    &:after {\n      margin-right: 0.35rem;\n    }\n  }\n`;\n\nexport interface NavItem {\n  label: string;\n  target: string;\n}\n\ninterface Props {\n  links: NavItem[];\n  backgroundColor: string;\n  hoverColor: string;\n  borderColor: string;\n}\n\n\nconst StickySideNav = (props: Props) => {\n  const {\n    links, backgroundColor, hoverColor, borderColor,\n   } = props;\n\n\n  const colorTheme: any = {\n    '--background-color': backgroundColor,\n    '--hover-color': hoverColor,\n    '--border-color': hoverColor,\n    '--border-hover-color': borderColor,\n  };\n\n  const navLinks = links.map(({label, target}) => {\n    return (\n      <li key={label + target}>\n        <Link\n          href={target}\n          style={colorTheme}\n        >\n          {label}\n        </Link>\n      </li>\n    );\n  });\n\n  return (\n    <NavContainer>\n      <Ul>\n        {navLinks}\n      </Ul>\n    </NavContainer>\n  );\n};\n\nexport default StickySideNav;","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  ScatterPlotDatum,\n} from 'react-fast-charts';\n\nconst data: ScatterPlotDatum[] = [\n  {\n    label: 'Value 1',\n    x: 4,\n    y: 6,\n    fill: 'red',\n    radius: 5,\n  },\n  {\n    label: 'Value 2',\n    x: 2,\n    y: 9,\n    fill: 'blue',\n    radius: 9,\n  },\n  {\n    label: 'Value 3',\n    x: 3,\n    y: 2,\n    fill: 'blue',\n    radius: 5,\n  },\n  {\n    label: 'Value 4',\n    x: 7,\n    y: 5,\n    fill: 'green',\n    radius: 9,\n  },\n  {\n    label: 'Value 5',\n    x: 5,\n    y: 8,\n    fill: 'green',\n    radius: 5,\n    highlighted: true,\n  },\n  {\n    label: 'Value 6',\n    x: 6,\n    y: 7,\n    fill: 'red',\n    radius: 12,\n  },\n];\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  ScatterPlotDatum,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-scatterplot'}\n  vizType={VizType.ScatterPlot}\n  data={data}\n  axisLabels={{\n    bottom: 'Bottom Axis', left: 'Left Axis'\n  }}\n/>\n`;\n\nconst dataAsString = `\nconst data: ScatterPlotDatum[] = [\n  {\n    label: 'Value 1',\n    x: 4,\n    y: 6,\n    fill: 'red',\n    radius: 5,\n  },\n  {\n    label: 'Value 2',\n    x: 2,\n    y: 9,\n    fill: 'blue',\n    radius: 9,\n  },\n  {\n    label: 'Value 3',\n    x: 3,\n    y: 2,\n    fill: 'blue',\n    radius: 5,\n  },\n  {\n    label: 'Value 4',\n    x: 7,\n    y: 5,\n    fill: 'green',\n    radius: 9,\n  },\n  {\n    label: 'Value 5',\n    x: 5,\n    y: 8,\n    fill: 'green',\n    radius: 5,\n    highlighted: true,\n  },\n  {\n    label: 'Value 6',\n    x: 6,\n    y: 7,\n    fill: 'red',\n    radius: 12,\n  },\n];\n\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Scatter Plot</SectionHeader>\n          <DataViz\n            id={'example-scatterplot'}\n            vizType={VizType.ScatterPlot}\n            data={data}\n            axisLabels={{bottom: 'Bottom Axis', left: 'Left Axis'}}\n          />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  BarChartDatum,\n} from 'react-fast-charts';\n\nconst data: BarChartDatum[][] = [\n  [\n    {\n      x: '2011',\n      y: 10,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2012',\n      y: 11,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2013',\n      y: 6,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2014',\n      y: 8,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2015',\n      y: 9,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2016',\n      y: 12,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n  ],\n  [\n    {\n      x: '2011',\n      y: 6,\n      fill: 'blue',\n    },\n    {\n      x: '2012',\n      y: 9,\n      fill: 'blue',\n    },\n    {\n      x: '2013',\n      y: 2,\n      fill: 'blue',\n    },\n    {\n      x: '2014',\n      y: 5,\n      fill: 'blue',\n    },\n    {\n      x: '2015',\n      y: 8,\n      fill: 'blue',\n    },\n    {\n      x: '2016',\n      y: 7,\n      fill: 'blue',\n    },\n  ],\n];\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  BarChartDatum,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-bar-chart'}\n  vizType={VizType.BarChart}\n  data={data}\n  axisLabels={{left: 'Value', bottom: 'Year'}}\n/>\n`;\n\nconst dataAsString = `\nconst data: BarChartDatum[][] = [\n  [\n    {\n      x: '2011',\n      y: 10,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2012',\n      y: 11,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2013',\n      y: 6,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2014',\n      y: 8,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2015',\n      y: 9,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n    {\n      x: '2016',\n      y: 12,\n      stroke: 'lightblue',\n      fill: 'transparent',\n    },\n  ],\n  [\n    {\n      x: '2011',\n      y: 6,\n      fill: 'blue',\n    },\n    {\n      x: '2012',\n      y: 9,\n      fill: 'blue',\n    },\n    {\n      x: '2013',\n      y: 2,\n      fill: 'blue',\n    },\n    {\n      x: '2014',\n      y: 5,\n      fill: 'blue',\n    },\n    {\n      x: '2015',\n      y: 8,\n      fill: 'blue',\n    },\n    {\n      x: '2016',\n      y: 7,\n      fill: 'blue',\n    },\n  ],\n];\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Bar Chart</SectionHeader>\n          <DataViz\n            id={'example-bar-chart'}\n            vizType={VizType.BarChart}\n            data={data}\n            axisLabels={{left: 'Value', bottom: 'Year'}}\n          />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React, {useState} from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  ClusterBarChartDatum,\n} from 'react-fast-charts';\n\nconst data1: ClusterBarChartDatum[] = [\n  {\n    x: '2011 Extra long title that breaks into the next line',\n    y: .06,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2012',\n    y: .09,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2013',\n    y: .02,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2014',\n    y: .05,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2015',\n    y: .08,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2016',\n    y: .07,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2011 Extra long title that breaks into the next line',\n    y: .04,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2012',\n    y: .07,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2013',\n    y: .05,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2014',\n    y: .09,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2015',\n    y: .03,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2016',\n    y: .010,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n];\nconst data2: ClusterBarChartDatum[] = [\n  {\n    x: '1990',\n    y: 8,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '1991',\n    y: 10,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '1993',\n    y: 7,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '1995',\n    y: 19,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '1990',\n    y: 6,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '1991',\n    y: 7,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '1993',\n    y: 3,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '1995',\n    y: 20,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n];\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  ClusterBarChartDatum,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-cluster-bar-chart'}\n  vizType={VizType.ClusterBarChart}\n  data={data}\n/>\n`;\n\nconst dataAsString = `\nconst data: ClusterBarChartDatum[] = [\n  {\n    x: '2011',\n    y: 6,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2012',\n    y: 9,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2013',\n    y: 2,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2014',\n    y: 5,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2015',\n    y: 8,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2016',\n    y: 7,\n    fill: 'blue',\n    groupName: 'Group 1',\n  },\n  {\n    x: '2011',\n    y: 4,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2012',\n    y: 7,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2013',\n    y: 5,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2014',\n    y: 9,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2015',\n    y: 3,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n  {\n    x: '2016',\n    y: 10,\n    fill: 'green',\n    groupName: 'Group 2',\n  },\n];\n`;\n\nexport default () => {\n  const [dataNumber, setDataNumber] = useState<number>(1);\n  const data = dataNumber === 1 ? data1 : data2;\n  const toggleData = () => setDataNumber(curr => curr === 1 ? 2 : 1);\n  return (\n    <Content>\n      <button onClick={toggleData}>Toggle Data</button>\n      <TwoColumnSection>\n        <SectionHeader>Cluster Bar Chart</SectionHeader>\n          <DataViz\n            id={'example-cluster-bar-chart'}\n            vizType={VizType.ClusterBarChart}\n            data={data}\n            animateAxis={{\n              animationDuration: 500,\n              startMinY: dataNumber === 1 ? 0 : 1,\n              startMaxY: dataNumber === 1 ? 20 : 100,\n            }}\n            animateBars={500}\n            axisLabels={{left: 'Title'}}\n          />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  RadarChartDatum,\n} from 'react-fast-charts';\n\nconst data: RadarChartDatum[][] = [\n  [\n    {\n      label: 'Point 1',\n      value: 6,\n    },\n    {\n      label: 'Point 2',\n      value: 4,\n    },\n    {\n      label: 'Point 3',\n      value: 8,\n    },\n    {\n      label: 'Point 4',\n      value: 9,\n    },\n    {\n      label: 'Point 5',\n      value: 3,\n    },\n  ],\n  [\n    {\n      label: 'Point 1',\n      value: 3,\n    },\n    {\n      label: 'Point 2',\n      value: 7,\n    },\n    {\n      label: 'Point 3',\n      value: 6,\n    },\n    {\n      label: 'Point 4',\n      value: 5,\n    },\n    {\n      label: 'Point 5',\n      value: 8,\n    },\n  ],\n];\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  RadarChartDatum,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-radar-chart'}\n  vizType={VizType.RadarChart}\n  color={{start: 'blue', end: 'red'}}\n  maxValue={10}\n  data={data}\n/>\n`;\n\nconst dataAsString = `\nconst data: RadarChartDatum[][] = [\n  [\n    {\n      label: 'Point 1',\n      value: 6,\n    },\n    {\n      label: 'Point 2',\n      value: 4,\n    },\n    {\n      label: 'Point 3',\n      value: 8,\n    },\n    {\n      label: 'Point 4',\n      value: 9,\n    },\n    {\n      label: 'Point 5',\n      value: 3,\n    },\n  ],\n  [\n    {\n      label: 'Point 1',\n      value: 3,\n    },\n    {\n      label: 'Point 2',\n      value: 7,\n    },\n    {\n      label: 'Point 3',\n      value: 6,\n    },\n    {\n      label: 'Point 4',\n      value: 5,\n    },\n    {\n      label: 'Point 5',\n      value: 8,\n    },\n  ],\n];\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Radar Chart</SectionHeader>\n          <DataViz\n            id={'example-radar-chart'}\n            vizType={VizType.RadarChart}\n            color={{start: 'blue', end: 'red'}}\n            maxValue={10}\n            data={data}\n          />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n} from 'react-fast-charts';\nimport raw from 'raw.macro';\n\nconst codeAsString = `import DataViz, {\n  VizType,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-geo-map'}\n  vizType={VizType.GeoMap}\n  data={data}\n  minColor={'yellow'}\n  maxColor={'red'}\n/>\n`;\n\nconst dataAsString = `\nimport raw from 'raw.macro';\n\n\n...\n\n\nconst worldMap = JSON.parse(raw('../assets/world-geojson.json'));\nconst featuresWithValues = worldMap.features.map((feature: any) => {\n  const percent = Math.random() * 100;\n  const properties = {\n    ...feature.properties,\n    percent,\n    tooltipContent: \\`$\\{feature.properties.name}: $\\{percent.toFixed(2)}%\\`,\n  };\n  return {...feature, properties};\n});\nconst data = {...worldMap, features: featuresWithValues};\n`;\n\nconst worldMap = JSON.parse(raw('../assets/world-geojson.json'));\nconst featuresWithValues = worldMap.features.map((feature: any) => {\n  const percent = Math.random() * 100;\n  const properties = {\n    ...feature.properties,\n    percent,\n    tooltipContent: `${feature.properties.name}: ${percent.toFixed(2)}%`,\n  };\n  return {...feature, properties};\n});\nconst data = {...worldMap, features: featuresWithValues};\n\nexport default () => {\n\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>GeoMap</SectionHeader>\n          <DataViz\n            id={'example-geo-map'}\n            vizType={VizType.GeoMap}\n            data={data}\n            minColor={'yellow'}\n            maxColor={'red'}\n          />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  LineChartDatum,\n  LabelPosition,\n  LabelAnchor,\n} from 'react-fast-charts';\n\nconst data: LineChartDatum[] = [\n  {\n    coords: [\n      {x: 2005, y: 5},\n      {x: 2006, y: 6},\n      {x: 2007, y: 8},\n      {x: 2008, y: 6},\n      {x: 2009, y: 5},\n      {x: 2010, y: 9},\n      {x: 2011, y: 8},\n      {x: 2012, y: 7},\n      {x: 2013, y: 6},\n      {x: 2014, y: 5},\n      {x: 2015, y: 5},\n      {x: 2016, y: 8},\n    ],\n    animationDuration: 0,\n    label: 'Green',\n    color: 'forestgreen',\n    labelColor: 'purple',\n    width: 3,\n    labelPosition: LabelPosition.Top,\n    labelAnchor: LabelAnchor.Middle,\n  }, {\n    coords: [\n      {x: 2005, y: 2},\n      {x: 2006, y: 4},\n      {x: 2007, y: 5},\n      {x: 2008, y: 3},\n      {x: 2009, y: 6},\n      {x: 2010, y: 5},\n      {x: 2011, y: 4},\n      {x: 2012, y: 3},\n      {x: 2013, y: 3},\n      {x: 2014, y: 4},\n      {x: 2015, y: 6},\n      {x: 2016, y: 7},\n    ],\n    animationDuration: 1000,\n    label: 'Salmon',\n    color: 'darksalmon',\n    labelColor: 'purple',\n    width: 3,\n    labelPosition: LabelPosition.Center,\n    labelAnchor: LabelAnchor.Left,\n  }\n];\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  LineChartDatum,\n  LabelPosition,\n  LabelAnchor,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-line-chart'}\n  vizType={VizType.LineChart}\n  data={data}\n  axisLabels={{left: 'Value', bottom: 'Year'}}\n  axisMinMax={{\n    minY: -10,\n    maxY: 20,\n    maxX: 2021,\n  }}\n  formatAxis={{\n    x: n => n.toString()\n  }}\n/>\n`;\n\nconst dataAsString = `\n\nconst data: LineChartDatum[] = [\n  {\n    coords: [\n      {x: 2005, y: 5},\n      {x: 2006, y: 6},\n      {x: 2007, y: 8},\n      {x: 2008, y: 6},\n      {x: 2009, y: 5},\n      {x: 2010, y: 9},\n      {x: 2011, y: 8},\n      {x: 2012, y: 7},\n      {x: 2013, y: 6},\n      {x: 2014, y: 5},\n      {x: 2015, y: 5},\n      {x: 2016, y: 8},\n    ],\n    animationDuration: 0,\n    label: 'Green',\n    color: 'forestgreen',\n    labelColor: 'purple',\n    width: 3,\n    labelPosition: LabelPosition.Top,\n    labelAnchor: LabelAnchor.Middle,\n  }, {\n    coords: [\n      {x: 2005, y: 2},\n      {x: 2006, y: 4},\n      {x: 2007, y: 5},\n      {x: 2008, y: 3},\n      {x: 2009, y: 6},\n      {x: 2010, y: 5},\n      {x: 2011, y: 4},\n      {x: 2012, y: 3},\n      {x: 2013, y: 3},\n      {x: 2014, y: 4},\n      {x: 2015, y: 6},\n      {x: 2016, y: 7},\n    ],\n    animationDuration: 1000,\n    label: 'Salmon',\n    color: 'darksalmon',\n    labelColor: 'purple',\n    width: 3,\n    labelPosition: LabelPosition.Center,\n    labelAnchor: LabelAnchor.Left,\n  }\n];\n\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Line Chart</SectionHeader>\n        <DataViz\n          id={'sandbox-line-chart'}\n          vizType={VizType.LineChart}\n          data={data}\n          axisLabels={{left: 'Value', bottom: 'Year'}}\n          axisMinMax={{\n            minY: -10,\n            maxY: 20,\n            maxX: 2021,\n          }}\n          formatAxis={{\n            x: n => n.toString()\n          }}\n        />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  RootDatum,\n} from 'react-fast-charts';\n\nconst data: RootDatum = {\n \"id\": \"example-tree-map-data\",\n \"label\": \"example-tree-map-data\",\n \"children\": [\n  {\n   \"id\": \"Beverages\",\n   \"label\": \"Beverages\",\n   \"fill\": \"#537DAA\",\n   \"children\": [\n      {\n        \"id\": \"Beverages\",\n        \"label\": \"Beverages\",\n        \"tooltipContent\": \"Beverages\",\n        \"size\": 0.5\n      }\n    ]\n   },\n  {\n   \"id\": \"Chemicals\",\n   \"label\": \"Chemicals\",\n   \"fill\": \"#A1CBE7\",\n   \"children\": [\n      {\n        \"id\": \"Chemicals1\",\n        \"label\": \"Chemicals 1\",\n        \"tooltipContent\": \"Chemicals1\",\n        \"size\": 2\n      },\n      {\n        \"id\": \"Chemicals2\",\n        \"label\": \"Chemicals 2\",\n        \"tooltipContent\": \"Chemicals2\",\n        \"size\": 2\n      },\n      {\n        \"id\": \"Chemicals3\",\n        \"label\": \"Chemicals 3\",\n        \"tooltipContent\": \"Chemicals3\",\n        \"size\": 1\n      },\n      {\n        \"id\": \"Chemicals4\",\n        \"label\": \"Chemicals 4\",\n        \"tooltipContent\": \"Chemicals4\",\n        \"size\": 0.5\n      },\n      {\n        \"id\": \"Chemicals5\",\n        \"label\": \"Chemicals 5\",\n        \"tooltipContent\": \"Chemicals5\",\n        \"size\": 1\n      }\n    ]\n   },\n  {\n   \"id\": \"CrudeMaterials\",\n   \"label\": \"CrudeMaterials\",\n   \"fill\": \"#F08D34\",\n   \"children\": [\n      {\n        \"id\": \"CrudeMaterials\",\n        \"label\": \"Crude Materials\",\n        \"tooltipContent\": \"CrudeMaterials\",\n        \"size\": 1\n      }\n    ]\n   },\n  {\n   \"id\": \"Food\",\n   \"label\": \"Food\",\n   \"fill\": \"#F5BD7D\",\n   \"children\": [\n      {\n        \"id\": \"Fish\",\n        \"label\": \"Fish\",\n        \"tooltipContent\": \"Fish\",\n        \"size\": 8\n      },\n      {\n        \"id\": \"Poultry\",\n        \"label\": \"Poultry\",\n        \"tooltipContent\": \"Poultry\",\n        \"size\": 8\n      }\n    ]\n   },\n  {\n   \"id\": \"MachineryandVehicles\",\n   \"label\": \"Machinery and Vehicles\",\n   \"fill\": \"#8CD17D\",\n   \"children\": [\n      {\n        \"id\": \"Road\",\n        \"label\": \"Road\",\n        \"tooltipContent\": \"Road\",\n        \"size\": 5\n      },\n      {\n        \"id\": \"Cars\",\n        \"label\": \"Cars\",\n        \"tooltipContent\": \"Cars\",\n        \"size\": 4\n      },\n      {\n        \"id\": \"Trucks\",\n        \"label\": \"Trucks\",\n        \"tooltipContent\": \"Trucks\",\n        \"size\": 3\n      },\n      {\n        \"id\": \"Tires\",\n        \"label\": \"Tires\",\n        \"tooltipContent\": \"Tires\",\n        \"size\": 1\n      },\n      {\n        \"id\": \"Other\",\n        \"label\": \"Other\",\n        \"tooltipContent\": \"Other\",\n        \"size\": 0.5\n      }\n    ]\n   },\n  {\n   \"id\": \"Material Manufacturers\",\n   \"label\": \"Material Manufacturers\",\n   \"fill\": \"#B69930\",\n   \"children\": [\n      {\n        \"id\": \"Leather\",\n        \"label\": \"Leather\",\n        \"tooltipContent\": \"Leather\",\n        \"size\": 16\n      },\n      {\n        \"id\": \"Cotton\",\n        \"label\": \"Cotton\",\n        \"tooltipContent\": \"Cotton\",\n        \"size\": 4\n      },\n      {\n        \"id\": \"Wool\",\n        \"label\": \"Wool\",\n        \"tooltipContent\": \"Wool\",\n        \"size\": 4\n      }\n    ]\n   },\n  {\n   \"id\": \"Unspecified\",\n   \"label\": \"Unspecified\",\n   \"fill\": \"#86BCB6\",\n   \"children\": [\n      {\n        \"id\": \"SpecialTransactions\",\n        \"label\": \"Special Transactions, commodity not classified according to class\",\n        \"tooltipContent\": \"Special Transactions, commodity not classified according to class\",\n        \"size\": 28\n      }\n    ]\n   },\n  {\n   \"id\": \"Services\",\n   \"label\": \"Services\",\n   \"fill\": \"#499894\",\n   \"children\": [\n      {\n        \"id\": \"ICT\",\n        \"label\": \"ICT\",\n        \"tooltipContent\": \"ICT\",\n        \"size\": 61\n      },\n      {\n        \"id\": \"TravelandTourism\",\n        \"label\": \"Travel and Tourism\",\n        \"tooltipContent\": \"TravelandTourism\",\n        \"size\": 60\n      }\n    ]\n   },\n  {\n   \"id\": \"VegetableOils\",\n   \"label\": \"VegetableOils\",\n   \"fill\": \"#E56F72\",\n   \"children\": [\n      {\n        \"id\": \"OliveOil\",\n        \"label\": \"Olive Oil\",\n        \"tooltipContent\": \"OliveOil\",\n        \"size\": 0.4\n      }\n    ]\n   }\n ]\n};\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  RootDatum,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-tree-map'}\n  vizType={VizType.TreeMap}\n  data={data}\n/>\n`;\n\nconst dataAsString = `\nconst data: RootDatum = {\n \"id\": \"example-tree-map-data\",\n \"label\": \"example-tree-map-data\",\n \"children\": [\n  {\n   \"id\": \"Beverages\",\n   \"label\": \"Beverages\",\n   \"fill\": \"#537DAA\",\n   \"children\": [\n      {\n        \"id\": \"Beverages\",\n        \"label\": \"Beverages\",\n        \"tooltipContent\": \"Beverages\",\n        \"size\": 0.5\n      }\n    ]\n   },\n  {\n   \"id\": \"Chemicals\",\n   \"label\": \"Chemicals\",\n   \"fill\": \"#A1CBE7\",\n   \"children\": [\n      {\n        \"id\": \"Chemicals1\",\n        \"label\": \"Chemicals 1\",\n        \"tooltipContent\": \"Chemicals1\",\n        \"size\": 2\n      },\n      {\n        \"id\": \"Chemicals2\",\n        \"label\": \"Chemicals 2\",\n        \"tooltipContent\": \"Chemicals2\",\n        \"size\": 2\n      },\n      {\n        \"id\": \"Chemicals3\",\n        \"label\": \"Chemicals 3\",\n        \"tooltipContent\": \"Chemicals3\",\n        \"size\": 1\n      },\n      {\n        \"id\": \"Chemicals4\",\n        \"label\": \"Chemicals 4\",\n        \"tooltipContent\": \"Chemicals4\",\n        \"size\": 0.5\n      },\n      {\n        \"id\": \"Chemicals5\",\n        \"label\": \"Chemicals 5\",\n        \"tooltipContent\": \"Chemicals5\",\n        \"size\": 1\n      }\n    ]\n   },\n  {\n   \"id\": \"CrudeMaterials\",\n   \"label\": \"CrudeMaterials\",\n   \"fill\": \"#F08D34\",\n   \"children\": [\n      {\n        \"id\": \"CrudeMaterials\",\n        \"label\": \"Crude Materials\",\n        \"tooltipContent\": \"CrudeMaterials\",\n        \"size\": 1\n      }\n    ]\n   },\n  {\n   \"id\": \"Food\",\n   \"label\": \"Food\",\n   \"fill\": \"#F5BD7D\",\n   \"children\": [\n      {\n        \"id\": \"Fish\",\n        \"label\": \"Fish\",\n        \"tooltipContent\": \"Fish\",\n        \"size\": 8\n      },\n      {\n        \"id\": \"Poultry\",\n        \"label\": \"Poultry\",\n        \"tooltipContent\": \"Poultry\",\n        \"size\": 8\n      }\n    ]\n   },\n  {\n   \"id\": \"MachineryandVehicles\",\n   \"label\": \"Machinery and Vehicles\",\n   \"fill\": \"#8CD17D\",\n   \"children\": [\n      {\n        \"id\": \"Road\",\n        \"label\": \"Road\",\n        \"tooltipContent\": \"Road\",\n        \"size\": 5\n      },\n      {\n        \"id\": \"Cars\",\n        \"label\": \"Cars\",\n        \"tooltipContent\": \"Cars\",\n        \"size\": 4\n      },\n      {\n        \"id\": \"Trucks\",\n        \"label\": \"Trucks\",\n        \"tooltipContent\": \"Trucks\",\n        \"size\": 3\n      },\n      {\n        \"id\": \"Tires\",\n        \"label\": \"Tires\",\n        \"tooltipContent\": \"Tires\",\n        \"size\": 1\n      },\n      {\n        \"id\": \"Other\",\n        \"label\": \"Other\",\n        \"tooltipContent\": \"Other\",\n        \"size\": 0.5\n      }\n    ]\n   },\n  {\n   \"id\": \"Material Manufacturers\",\n   \"label\": \"Material Manufacturers\",\n   \"fill\": \"#B69930\",\n   \"children\": [\n      {\n        \"id\": \"Leather\",\n        \"label\": \"Leather\",\n        \"tooltipContent\": \"Leather\",\n        \"size\": 16\n      },\n      {\n        \"id\": \"Cotton\",\n        \"label\": \"Cotton\",\n        \"tooltipContent\": \"Cotton\",\n        \"size\": 4\n      },\n      {\n        \"id\": \"Wool\",\n        \"label\": \"Wool\",\n        \"tooltipContent\": \"Wool\",\n        \"size\": 4\n      }\n    ]\n   },\n  {\n   \"id\": \"Unspecified\",\n   \"label\": \"Unspecified\",\n   \"fill\": \"#86BCB6\",\n   \"children\": [\n      {\n        \"id\": \"SpecialTransactions\",\n        \"label\": \"Special Transactions, commodity not classified according to class\",\n        \"tooltipContent\": \"Special Transactions, commodity not classified according to class\",\n        \"size\": 28\n      }\n    ]\n   },\n  {\n   \"id\": \"Services\",\n   \"label\": \"Services\",\n   \"fill\": \"#499894\",\n   \"children\": [\n      {\n        \"id\": \"ICT\",\n        \"label\": \"ICT\",\n        \"tooltipContent\": \"ICT\",\n        \"size\": 61\n      },\n      {\n        \"id\": \"TravelandTourism\",\n        \"label\": \"Travel and Tourism\",\n        \"tooltipContent\": \"TravelandTourism\",\n        \"size\": 60\n      }\n    ]\n   },\n  {\n   \"id\": \"VegetableOils\",\n   \"label\": \"VegetableOils\",\n   \"fill\": \"#E56F72\",\n   \"children\": [\n      {\n        \"id\": \"OliveOil\",\n        \"label\": \"Olive Oil\",\n        \"tooltipContent\": \"OliveOil\",\n        \"size\": 0.4\n      }\n    ]\n   }\n ]\n};\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>TreeMap</SectionHeader>\n          <DataViz\n            id={'example-tree-map'}\n            vizType={VizType.TreeMap}\n            animateOn={true}\n            data={data}\n          />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  RootDatum,\n  LeafDatum,\n} from 'react-fast-charts';\n\nconst primaryData: RootDatum = {\n \"id\": \"example-primary-tree-map-data\",\n \"label\": \"Boston\",\n \"children\": [\n  {\n   \"id\": \"Beverages\",\n   \"label\": \"Beverages\",\n   \"fill\": \"#537DAA\",\n   \"children\": [\n      {\n        \"id\": \"Beverages\",\n        \"label\": \"Beverages\",\n        \"size\": 0.5\n      }\n    ]\n   },\n  {\n   \"id\": \"Chemicals\",\n   \"label\": \"Chemicals\",\n   \"fill\": \"#A1CBE7\",\n   \"children\": [\n      {\n        \"id\": \"Chemicals1\",\n        \"label\": \"Chemicals 1\",\n        \"size\": 2\n      },\n      {\n        \"id\": \"Chemicals2\",\n        \"label\": \"Chemicals 2\",\n        \"size\": 2\n      },\n      {\n        \"id\": \"Chemicals3\",\n        \"label\": \"Chemicals 3\",\n        \"size\": 1\n      },\n      {\n        \"id\": \"Chemicals4\",\n        \"label\": \"Chemicals 4\",\n        \"size\": 0.5\n      },\n      {\n        \"id\": \"Chemicals5\",\n        \"label\": \"Chemicals 5\",\n        \"size\": 1\n      }\n    ]\n   },\n  {\n   \"id\": \"CrudeMaterials\",\n   \"label\": \"CrudeMaterials\",\n   \"fill\": \"#F08D34\",\n   \"children\": [\n      {\n        \"id\": \"CrudeMaterials\",\n        \"label\": \"Crude Materials\",\n        \"size\": 1\n      }\n    ]\n   },\n  {\n   \"id\": \"Food\",\n   \"label\": \"Food\",\n   \"fill\": \"#F5BD7D\",\n   \"children\": [\n      {\n        \"id\": \"Fish\",\n        \"label\": \"Fish\",\n        \"size\": 8\n      },\n      {\n        \"id\": \"Poultry\",\n        \"label\": \"Poultry\",\n        \"size\": 8\n      }\n    ]\n   },\n  {\n   \"id\": \"MachineryandVehicles\",\n   \"label\": \"Machinery and Vehicles\",\n   \"fill\": \"#8CD17D\",\n   \"children\": [\n      {\n        \"id\": \"Road\",\n        \"label\": \"Road\",\n        \"size\": 5\n      },\n      {\n        \"id\": \"Cars\",\n        \"label\": \"Cars\",\n        \"size\": 4\n      },\n      {\n        \"id\": \"Trucks\",\n        \"label\": \"Trucks\",\n        \"size\": 3\n      },\n      {\n        \"id\": \"Tires\",\n        \"label\": \"Tires\",\n        \"size\": 1\n      },\n      {\n        \"id\": \"Other\",\n        \"label\": \"Other\",\n        \"size\": 0.5\n      }\n    ]\n   },\n  {\n   \"id\": \"Material Manufacturers\",\n   \"label\": \"Material Manufacturers\",\n   \"fill\": \"#B69930\",\n   \"children\": [\n      {\n        \"id\": \"Leather\",\n        \"label\": \"Leather\",\n        \"size\": 16\n      },\n      {\n        \"id\": \"Cotton\",\n        \"label\": \"Cotton\",\n        \"size\": 4\n      },\n      {\n        \"id\": \"Wool\",\n        \"label\": \"Wool\",\n        \"size\": 4\n      }\n    ]\n   },\n  {\n   \"id\": \"Unspecified\",\n   \"label\": \"Unspecified\",\n   \"fill\": \"#86BCB6\",\n   \"children\": [\n      {\n        \"id\": \"SpecialTransactions\",\n        \"label\": \"Special Transactions, commodity not classified according to class\",\n        \"size\": 28\n      }\n    ]\n   },\n  {\n   \"id\": \"Services\",\n   \"label\": \"Services\",\n   \"fill\": \"#499894\",\n   \"children\": [\n      {\n        \"id\": \"ICT\",\n        \"label\": \"ICT\",\n        \"size\": 61\n      },\n      {\n        \"id\": \"TravelandTourism\",\n        \"label\": \"Travel and Tourism\",\n        \"size\": 60\n      }\n    ]\n   },\n  {\n   \"id\": \"VegetableOils\",\n   \"label\": \"VegetableOils\",\n   \"fill\": \"#E56F72\",\n   \"children\": [\n      {\n        \"id\": \"OliveOil\",\n        \"label\": \"Olive Oil\",\n        \"size\": 0.4\n      }\n    ]\n   }\n ]\n};\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  RootDatum,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-difference-tree-map'}\n  vizType={VizType.DifferenceTreeMap}\n  data={[primaryData, secondaryData]}\n/>\n`;\n\nconst dataAsString = `\nconst primaryData: RootDatum = {\n  ...\n}\n\nconst secondaryData: RootDatum = {\n  ...\n}\n`;\n\nexport default () => {\n  const secondaryLeafData: RootDatum[] = primaryData.children.map(datum => {\n    const children = (datum as RootDatum).children ? (datum as RootDatum).children.map(child => {\n      const size = (child as LeafDatum).size * (Math.random() * 2);\n      return {...child, size};\n    }) : undefined;\n    if (children) {\n      if (datum.label === 'Unspecified') {\n        children.push({\n          \"id\": \"Other\",\n          \"label\": \"Other\",\n          \"size\": 67\n        })\n      }\n      return {...datum, children};\n    } else {\n      return {...datum, children: []};\n    }\n  });\n  const secondaryData: RootDatum = {\n    id: \"example-secondary-tree-map-data\",\n    label: \"New York\",\n    children: secondaryLeafData,\n  }\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Difference TreeMap</SectionHeader>\n          <DataViz\n            id={'example-difference-tree-map'}\n            vizType={VizType.DifferenceTreeMap}\n            data={[primaryData, secondaryData]}\n            formatValue={val => '$' + val.toFixed(2) + 'M'}\n            animateOn={true}\n          />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  StackChartConfig,\n  StackChartDatum,\n} from 'react-fast-charts';\n\nconst config: StackChartConfig = {\n  primaryKey: 'year',\n  groups: [\n    {\n      key: 'rest_of_the_world',\n      label: 'Rest of the world',\n      fill: 'black',\n    },\n    {\n      key: 'mexico',\n      label: 'Mexico',\n      fill: 'red',\n    },\n    {\n      key: 'netherlands',\n      label: 'Netherlands',\n    },\n    {\n      key: 'belgium',\n      label: 'Belgium',\n      fill: 'blue',\n    },\n    {\n      key: 'canada',\n      label: 'Canada',\n      fill: 'salmon',\n    },\n    {\n      key: 'ireland',\n      label: 'Ireland',\n    },\n    {\n      key: 'germany',\n      label: 'Germany',\n    },\n    {\n      key: 'united_kingdom',\n      label: 'United Kingdom',\n    },\n    {\n      key: 'italy',\n      label: 'Italy',\n    },\n    {\n      key: 'poland',\n      label: 'Poland',\n    },\n    {\n      key: 'dominican_republic',\n      label: 'Dominican Republic',\n    },\n  ],\n};\n\nconst data: StackChartDatum[] = [\n  {\n    year: 2002,\n    rest_of_the_world: 8855,\n    mexico: 11486,\n    netherlands: 686581,\n    belgium: 1678,\n    canada: 392642,\n    ireland: 71085,\n    germany: 14344,\n    united_kingdom: 11794,\n    italy: 7519,\n    poland: 5642,\n    dominican_republic: 1355,\n  },\n  {\n    year: 2003,\n    rest_of_the_world: 8354,\n    mexico: 11951,\n    netherlands: 694147,\n    belgium: 2240,\n    canada: 386142,\n    ireland: 95914,\n    germany: 13917,\n    united_kingdom: 9518,\n    italy: 8777,\n    poland: 9923,\n    dominican_republic: 1377,\n  },\n  {\n    year: 2004,\n    rest_of_the_world: 8211,\n    mexico: 12405,\n    netherlands: 698363,\n    belgium: 3109,\n    canada: 361144,\n    ireland: 73398,\n    germany: 13971,\n    united_kingdom: 11995,\n    italy: 7646,\n    poland: 8187,\n    dominican_republic: 1470,\n  },\n  {\n    year: 2005,\n    rest_of_the_world: 9644,\n    mexico: 13740,\n    netherlands: 704236,\n    belgium: 4851,\n    canada: 351015,\n    ireland: 101121,\n    germany: 14478,\n    united_kingdom: 12147,\n    italy: 9943,\n    poland: 11767,\n    dominican_republic: 1450,\n  },\n  {\n    year: 2006,\n    rest_of_the_world: 9959,\n    mexico: 16318,\n    netherlands: 828601,\n    belgium: 7211,\n    canada: 380863,\n    ireland: 98620,\n    germany: 14460,\n    united_kingdom: 11857,\n    italy: 12410,\n    poland: 10796,\n    dominican_republic: 1503,\n  },\n  {\n    year: 2007,\n    rest_of_the_world: 10041,\n    mexico: 16204,\n    netherlands: 789142,\n    belgium: 11436,\n    canada: 397821,\n    ireland: 105031,\n    germany: 15825,\n    united_kingdom: 11984,\n    italy: 16381,\n    poland: 13812,\n    dominican_republic: 1432,\n  },\n  {\n    year: 2008,\n    rest_of_the_world: 9757,\n    mexico: 15858,\n    netherlands: 767479,\n    belgium: 12200,\n    canada: 362440,\n    ireland: 109655,\n    germany: 13625,\n    united_kingdom: 11612,\n    italy: 19503,\n    poland: 12478,\n    dominican_republic: 1502,\n  },\n  {\n    year: 2009,\n    rest_of_the_world: 8720,\n    mexico: 15210,\n    netherlands: 662921,\n    belgium: 10391,\n    canada: 280890,\n    ireland: 101793,\n    germany: 12346,\n    united_kingdom: 9022,\n    italy: 20051,\n    poland: 10792,\n    dominican_republic: 1546,\n  },\n  {\n    year: 2010,\n    rest_of_the_world: 9035,\n    mexico: 15787,\n    netherlands: 652054,\n    belgium: 12078,\n    canada: 311936,\n    ireland: 100205,\n    germany: 14213,\n    united_kingdom: 9374,\n    italy: 22375,\n    poland: 11715,\n    dominican_republic: 1431,\n  },\n  {\n    year: 2011,\n    rest_of_the_world: 8749,\n    mexico: 16688,\n    netherlands: 600947,\n    belgium: 16111,\n    canada: 280736,\n    ireland: 115873,\n    germany: 13811,\n    united_kingdom: 8382,\n    italy: 23133,\n    poland: 11388,\n    dominican_republic: 1348,\n  },\n  {\n    year: 2012,\n    rest_of_the_world: 7840,\n    mexico: 17809,\n    netherlands: 612335,\n    belgium: 18017,\n    canada: 243315,\n    ireland: 110408,\n    germany: 9173,\n    united_kingdom: 8182,\n    italy: 25365,\n    poland: 12752,\n    dominican_republic: 1516,\n  },\n  {\n    year: 2013,\n    rest_of_the_world: 6099,\n    mexico: 18618,\n    netherlands: 568978,\n    belgium: 17206,\n    canada: 231047,\n    ireland: 108615,\n    germany: 8158,\n    united_kingdom: 7576,\n    italy: 19198,\n    poland: 12225,\n    dominican_republic: 1153,\n  },\n  {\n    year: 2014,\n    rest_of_the_world: 6503,\n    mexico: 21524,\n    netherlands: 542067,\n    belgium: 22213,\n    canada: 207130,\n    ireland: 82255,\n    germany: 6784,\n    united_kingdom: 5739,\n    italy: 20126,\n    poland: 12770,\n    dominican_republic: 1120,\n  },\n  {\n    year: 2015,\n    rest_of_the_world: 6650,\n    mexico: 22716,\n    netherlands: 570892,\n    belgium: 27175,\n    canada: 201833,\n    ireland: 106226,\n    germany: 7161,\n    united_kingdom: 5220,\n    italy: 19745,\n    poland: 13327,\n    dominican_republic: 1299,\n  },\n];\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  StackChartConfig,\n  StackChartDatum,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-stack-chart'}\n  vizType={VizType.StackChart}\n  config={config}\n  data={data}\n/>\n`;\n\nconst configAsString = `\nconst config: StackChartConfig = {\n  primaryKey: 'year',\n  groups: [\n    {\n      key: 'rest_of_the_world',\n      label: 'Rest of the world',\n      fill: 'black',\n    },\n    {\n      key: 'mexico',\n      label: 'Mexico',\n      fill: 'red',\n    },\n    {\n      key: 'netherlands',\n      label: 'Netherlands',\n    },\n    {\n      key: 'belgium',\n      label: 'Belgium',\n      fill: 'blue',\n    },\n    {\n      key: 'canada',\n      label: 'Canada',\n      fill: 'salmon',\n    },\n    {\n      key: 'ireland',\n      label: 'Ireland',\n    },\n    {\n      key: 'germany',\n      label: 'Germany',\n    },\n    {\n      key: 'united_kingdom',\n      label: 'United Kingdom',\n    },\n    {\n      key: 'italy',\n      label: 'Italy',\n    },\n    {\n      key: 'poland',\n      label: 'Poland',\n    },\n    {\n      key: 'dominican_republic',\n      label: 'Dominican Republic',\n    },\n  ],\n};\n`;\n\nconst dataAsString = `\nconst data: StackChartDatum[] = [\n  {\n    year: 2002,\n    rest_of_the_world: 8855,\n    mexico: 11486,\n    netherlands: 686581,\n    belgium: 1678,\n    canada: 392642,\n    ireland: 71085,\n    germany: 14344,\n    united_kingdom: 11794,\n    italy: 7519,\n    poland: 5642,\n    dominican_republic: 1355,\n  },\n  {\n    year: 2003,\n    rest_of_the_world: 8354,\n    mexico: 11951,\n    netherlands: 694147,\n    belgium: 2240,\n    canada: 386142,\n    ireland: 95914,\n    germany: 13917,\n    united_kingdom: 9518,\n    italy: 8777,\n    poland: 9923,\n    dominican_republic: 1377,\n  },\n  {\n    year: 2004,\n    rest_of_the_world: 8211,\n    mexico: 12405,\n    netherlands: 698363,\n    belgium: 3109,\n    canada: 361144,\n    ireland: 73398,\n    germany: 13971,\n    united_kingdom: 11995,\n    italy: 7646,\n    poland: 8187,\n    dominican_republic: 1470,\n  },\n  {\n    year: 2005,\n    rest_of_the_world: 9644,\n    mexico: 13740,\n    netherlands: 704236,\n    belgium: 4851,\n    canada: 351015,\n    ireland: 101121,\n    germany: 14478,\n    united_kingdom: 12147,\n    italy: 9943,\n    poland: 11767,\n    dominican_republic: 1450,\n  },\n  {\n    year: 2006,\n    rest_of_the_world: 9959,\n    mexico: 16318,\n    netherlands: 828601,\n    belgium: 7211,\n    canada: 380863,\n    ireland: 98620,\n    germany: 14460,\n    united_kingdom: 11857,\n    italy: 12410,\n    poland: 10796,\n    dominican_republic: 1503,\n  },\n  {\n    year: 2007,\n    rest_of_the_world: 10041,\n    mexico: 16204,\n    netherlands: 789142,\n    belgium: 11436,\n    canada: 397821,\n    ireland: 105031,\n    germany: 15825,\n    united_kingdom: 11984,\n    italy: 16381,\n    poland: 13812,\n    dominican_republic: 1432,\n  },\n  {\n    year: 2008,\n    rest_of_the_world: 9757,\n    mexico: 15858,\n    netherlands: 767479,\n    belgium: 12200,\n    canada: 362440,\n    ireland: 109655,\n    germany: 13625,\n    united_kingdom: 11612,\n    italy: 19503,\n    poland: 12478,\n    dominican_republic: 1502,\n  },\n  {\n    year: 2009,\n    rest_of_the_world: 8720,\n    mexico: 15210,\n    netherlands: 662921,\n    belgium: 10391,\n    canada: 280890,\n    ireland: 101793,\n    germany: 12346,\n    united_kingdom: 9022,\n    italy: 20051,\n    poland: 10792,\n    dominican_republic: 1546,\n  },\n  {\n    year: 2010,\n    rest_of_the_world: 9035,\n    mexico: 15787,\n    netherlands: 652054,\n    belgium: 12078,\n    canada: 311936,\n    ireland: 100205,\n    germany: 14213,\n    united_kingdom: 9374,\n    italy: 22375,\n    poland: 11715,\n    dominican_republic: 1431,\n  },\n  {\n    year: 2011,\n    rest_of_the_world: 8749,\n    mexico: 16688,\n    netherlands: 600947,\n    belgium: 16111,\n    canada: 280736,\n    ireland: 115873,\n    germany: 13811,\n    united_kingdom: 8382,\n    italy: 23133,\n    poland: 11388,\n    dominican_republic: 1348,\n  },\n  {\n    year: 2012,\n    rest_of_the_world: 7840,\n    mexico: 17809,\n    netherlands: 612335,\n    belgium: 18017,\n    canada: 243315,\n    ireland: 110408,\n    germany: 9173,\n    united_kingdom: 8182,\n    italy: 25365,\n    poland: 12752,\n    dominican_republic: 1516,\n  },\n  {\n    year: 2013,\n    rest_of_the_world: 6099,\n    mexico: 18618,\n    netherlands: 568978,\n    belgium: 17206,\n    canada: 231047,\n    ireland: 108615,\n    germany: 8158,\n    united_kingdom: 7576,\n    italy: 19198,\n    poland: 12225,\n    dominican_republic: 1153,\n  },\n  {\n    year: 2014,\n    rest_of_the_world: 6503,\n    mexico: 21524,\n    netherlands: 542067,\n    belgium: 22213,\n    canada: 207130,\n    ireland: 82255,\n    germany: 6784,\n    united_kingdom: 5739,\n    italy: 20126,\n    poland: 12770,\n    dominican_republic: 1120,\n  },\n  {\n    year: 2015,\n    rest_of_the_world: 6650,\n    mexico: 22716,\n    netherlands: 570892,\n    belgium: 27175,\n    canada: 201833,\n    ireland: 106226,\n    germany: 7161,\n    united_kingdom: 5220,\n    italy: 19745,\n    poland: 13327,\n    dominican_republic: 1299,\n  },\n];\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Stack Chart</SectionHeader>\n          <DataViz\n            id={'example-stack-chart'}\n            vizType={VizType.StackChart}\n            config={config}\n            data={data}\n          />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <TwoColumnSection>\n          <Code>\n            {configAsString}\n          </Code>\n          <Code>\n            {dataAsString}\n          </Code>\n      </TwoColumnSection>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  ClusterChartDatum,\n} from 'react-fast-charts';\n\nconst data: ClusterChartDatum[] = [\n  {\n    name: 'Value 1',\n    label: 'Value 1',\n    value: 78,\n    fill: 'green',\n  },\n  {\n    name: 'Value 2',\n    label: 'Value 2',\n    value: 67,\n    fill: 'orange',\n  },\n  {\n    name: 'Value 3',\n    label: 'Value 3',\n    value: 48,\n    fill: 'pink',\n  },\n  {\n    name: 'Value 4',\n    label: 'Value 4',\n    value: 39,\n    fill: 'red',\n  },\n  {\n    name: 'Value 5',\n    label: 'Value 5',\n    value: 69,\n    fill: 'brown',\n  },\n  {\n    name: 'Value 6',\n    label: 'Value 6',\n    value: 24,\n    fill: 'salmon',\n  },\n];\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  ClusterChartDatum,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-cluster-chart'}\n  vizType={VizType.ClusterChart}\n  data={data}\n/>\n`;\n\nconst dataAsString = `\nconst data: ClusterChartDatum[] = [\n  {\n    name: 'Value 1',\n    label: 'Value 1',\n    value: 78,\n    fill: 'green',\n  },\n  {\n    name: 'Value 2',\n    label: 'Value 2',\n    value: 67,\n    fill: 'orange',\n  },\n  {\n    name: 'Value 3',\n    label: 'Value 3',\n    value: 48,\n    fill: 'pink',\n  },\n  {\n    name: 'Value 4',\n    label: 'Value 4',\n    value: 39,\n    fill: 'red',\n  },\n  {\n    name: 'Value 5',\n    label: 'Value 5',\n    value: 69,\n    fill: 'brown',\n  },\n  {\n    name: 'Value 6',\n    label: 'Value 6',\n    value: 24,\n    fill: 'salmon',\n  },\n];\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Cluster Chart</SectionHeader>\n          <DataViz\n            id={'example-cluster-chart'}\n            vizType={VizType.ClusterChart}\n            data={data}\n          />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n  CenteredCode,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  BoxAndWhiskersChartDatum,\n} from 'react-fast-charts';\n\nconst data: BoxAndWhiskersChartDatum[] = [\n  {\n    category: '2010',\n    label: 'Value 1',\n    value: 7,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 2',\n    value: 5,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 3',\n    value: 3,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 4',\n    value: 8,\n    plotPoint: true,\n    primaryPoint: true,\n  },\n  {\n    category: '2010',\n    label: 'Value 5',\n    value: 12,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 6',\n    value: 13,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 7',\n    value: 9,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 1',\n    value: 9,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 2',\n    value: 7,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 3',\n    value: 6,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 4',\n    value: 8,\n    plotPoint: true,\n    primaryPoint: true,\n  },\n  {\n    category: '2020',\n    label: 'Value 5',\n    value: 18,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 6',\n    value: 11,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 7',\n    value: 10,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n];\n\nconst codeAsString = `import DataViz, {\n  VizType,\n  BoxAndWhiskersChartDatum,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-box-and-whiskers-chart'}\n  vizType={VizType.BoxAndWhiskersChart}\n  data={data}\n/>\n`;\n\nconst dataAsString = `\nconst data: BoxAndWhiskersChartDatum[] = [\n  {\n    category: '2010',\n    label: 'Value 1',\n    value: 7,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 2',\n    value: 5,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 3',\n    value: 3,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 4',\n    value: 8,\n    plotPoint: true,\n    primaryPoint: true,\n  },\n  {\n    category: '2010',\n    label: 'Value 5',\n    value: 12,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 6',\n    value: 13,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2010',\n    label: 'Value 7',\n    value: 9,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 1',\n    value: 9,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 2',\n    value: 7,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 3',\n    value: 6,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 4',\n    value: 8,\n    plotPoint: true,\n    primaryPoint: true,\n  },\n  {\n    category: '2020',\n    label: 'Value 5',\n    value: 18,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 6',\n    value: 11,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n  {\n    category: '2020',\n    label: 'Value 7',\n    value: 10,\n    plotPoint: true,\n    primaryPoint: false,\n  },\n];\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Box and Whiskers Chart</SectionHeader>\n        <DataViz\n          id={'example-box-and-whiskers-chart'}\n          vizType={VizType.BoxAndWhiskersChart}\n          data={data}\n        />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <CenteredCode>\n        <Code>\n          {dataAsString}\n        </Code>\n      </CenteredCode>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n} from 'react-fast-charts';\n\nconst codeAsString = `import DataViz, {\n  VizType,\n} from 'react-fast-charts';\n\n\n...\n\n\n<DataViz\n  id={'example-error-message'}\n  vizType={VizType.Error}\n  message={'There was an error for this chart'}\n/>\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Error</SectionHeader>\n        <DataViz\n          id={'example-error-message'}\n          vizType={VizType.Error}\n          message={'There was an error for this chart'}\n        />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n} from '../styling/styleUtils';\nimport {ColorScaleLegend} from 'react-fast-charts';\n\nconst codeAsString = `import {ColorScaleLegend} from 'react-fast-charts';\n\n\n...\n\n\n<ColorScaleLegend\n  title={'Legend Title'}\n  minLabel={0}\n  maxLabel={100}\n  minColor={'red'}\n  maxColor={'blue'}\n/>\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Color Scale Legend</SectionHeader>\n        <ColorScaleLegend\n          title={'Legend Title'}\n          minLabel={0}\n          maxLabel={100}\n          minColor={'red'}\n          maxColor={'blue'}\n        />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n} from '../styling/styleUtils';\nimport {HorizontalLegend} from 'react-fast-charts';\n\nconst codeAsString = `import {HorizontalLegend} from 'react-fast-charts';\n\n\n...\n\n\n<HorizontalLegend\n  legendList={[\n    {\n      label: 'Box 1',\n      fill: 'red',\n      stroke: undefined,\n    },\n    {\n      label: 'Box 2',\n      fill: 'blue',\n      stroke: undefined,\n    },\n    {\n      label: 'Box 3',\n      fill: 'green',\n      stroke: undefined,\n    },\n  ]}\n/>\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Horizontal Legend</SectionHeader>\n        <HorizontalLegend\n          legendList={[\n            {\n              label: 'Box 1',\n              fill: 'red',\n              stroke: undefined,\n            },\n            {\n              label: 'Box 2',\n              fill: 'blue',\n              stroke: undefined,\n            },\n            {\n              label: 'Box 3',\n              fill: 'green',\n              stroke: undefined,\n            },\n          ]}\n        />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n} from '../styling/styleUtils';\nimport {HowToReadDots} from 'react-fast-charts';\n\nconst codeAsString = `import {HowToReadDots} from 'react-fast-charts';\n\n\n...\n\n\n<HowToReadDots\n  items={[\n    {\n      label: 'Dot 1',\n      color: 'rgba(138,83,150,0.5)',\n    },\n    {\n      label: 'Dot 2',\n      color: 'rgba(50,122,118,0.5)',\n    },\n  ]}\n  highlighted={{\n    label: 'Dot 2',\n    color: 'rgba(50,122,118,0.5)',\n  }}\n/>\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>How To Read Dots</SectionHeader>\n        <div style={{maxWidth: 250}}>\n          <HowToReadDots\n            items={[\n              {\n                label: 'Dot 1',\n                color: 'rgba(138,83,150,0.5)',\n              },\n              {\n                label: 'Dot 2',\n                color: 'rgba(50,122,118,0.5)',\n              },\n            ]}\n            highlighted={{\n              label: 'Dot 2',\n              color: 'rgba(50,122,118,0.5)',\n            }}\n          />\n        </div>\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n    </Content>\n  );\n};\n\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n} from '../styling/styleUtils';\nimport {Legend} from 'react-fast-charts';\n\nconst codeAsString = `import {Legend} from 'react-fast-charts';\n\n\n...\n\n\n<Legend\n  legendList={[\n    {\n      label: 'Box 1',\n      fill: 'red',\n      stroke: undefined,\n    },\n    {\n      label: 'Box 2',\n      fill: 'blue',\n      stroke: undefined,\n    },\n    {\n      label: 'Box 3',\n      fill: 'green',\n      stroke: undefined,\n    },\n  ]}\n/>\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Legend</SectionHeader>\n        <Legend\n          legendList={[\n            {\n              label: 'Box 1',\n              fill: 'red',\n              stroke: undefined,\n            },\n            {\n              label: 'Box 2',\n              fill: 'blue',\n              stroke: undefined,\n            },\n            {\n              label: 'Box 3',\n              fill: 'green',\n              stroke: undefined,\n            },\n          ]}\n        />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n    </Content>\n  );\n};\n\n","import React from 'react'\nimport GlobalStyles from './styling/GlobalStyles';\nimport { Root } from './styling/Grid';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport {VizType} from 'react-fast-charts';\n\nimport Landing from './pages';\nimport StickySideNav from './components/StickySideNav';\n\nimport ScatterPlot from './pages/ScatterPlot';\nimport BarChart from './pages/BarChart';\nimport ClusterBarChart from './pages/ClusterBarChart';\nimport RadarChart from './pages/RadarChart';\nimport GeoMap from './pages/GeoMap';\nimport LineChart from './pages/LineChart';\nimport TreeMap from './pages/TreeMap';\nimport DifferenceTreeMap from './pages/DifferenceTreeMap';\nimport StackChart from './pages/StackChart';\nimport ClusterChart from './pages/ClusterChart';\nimport BoxAndWhiskersChart from './pages/BoxAndWhiskersChart';\nimport ErrorViz from './pages/Error';\n\nimport ColorScaleLegend from './pages/ColorScaleLegend';\nimport HorizontalLegend from './pages/HorizontalLegend';\nimport HowToReadDots from './pages/HowToReadDots';\nimport Legend from './pages/Legend';\n\nconst navItems = [\n  {label: 'Scatter Plot', target: '#/' + VizType.ScatterPlot},\n  {label: 'Bar Chart', target: '#/' + VizType.BarChart},\n  {label: 'Cluster Bar Chart', target: '#/' + VizType.ClusterBarChart},\n  {label: 'Radar Chart', target: '#/' + VizType.RadarChart},\n  {label: 'GeoMap', target: '#/' + VizType.GeoMap},\n  {label: 'Line Chart', target: '#/' + VizType.LineChart},\n  {label: 'TreeMap', target: '#/' + VizType.TreeMap},\n  {label: 'Difference TreeMap', target: '#/' + VizType.DifferenceTreeMap},\n  {label: 'Stack Chart', target: '#/' + VizType.StackChart},\n  {label: 'Cluster Chart', target: '#/' + VizType.ClusterChart},\n  {label: 'Box And Whiskers Chart', target: '#/' + VizType.BoxAndWhiskersChart},\n  {label: 'Error', target: '#/' + VizType.Error},\n\n  {label: 'Color Scale Legend', target: '#/ColorScaleLegend'},\n  {label: 'Horizontal Legend', target: '#/HorizontalLegend'},\n  {label: 'How To Read Dots', target: '#/HowToReadDots'},\n  {label: 'Legend', target: '#/Legend'},\n]\n\nconst App = () => {\n  return (\n    <Root>\n      <GlobalStyles />\n        <StickySideNav\n          links={navItems}\n          backgroundColor={'#ecf0f2'}\n          borderColor={'#819ea8'}\n          hoverColor={'#b7c7cd'}\n        />\n        <Router>\n          <Switch>\n              <Route exact path={'/' + VizType.ScatterPlot} component={ScatterPlot} />\n              <Route exact path={'/' + VizType.BarChart} component={BarChart} />\n              <Route exact path={'/' + VizType.ClusterBarChart} component={ClusterBarChart} />\n              <Route exact path={'/' + VizType.RadarChart} component={RadarChart} />\n              <Route exact path={'/' + VizType.GeoMap} component={GeoMap} />\n              <Route exact path={'/' + VizType.LineChart} component={LineChart} />\n              <Route exact path={'/' + VizType.TreeMap} component={TreeMap} />\n              <Route exact path={'/' + VizType.DifferenceTreeMap} component={DifferenceTreeMap} />\n              <Route exact path={'/' + VizType.StackChart} component={StackChart} />\n              <Route exact path={'/' + VizType.ClusterChart} component={ClusterChart} />\n              <Route exact path={'/' + VizType.BoxAndWhiskersChart} component={BoxAndWhiskersChart} />\n              <Route exact path={'/' + VizType.Error} component={ErrorViz} />\n              <Route exact path={'/ColorScaleLegend'} component={ColorScaleLegend} />\n              <Route exact path={'/HorizontalLegend'} component={HorizontalLegend} />\n              <Route exact path={'/HowToReadDots'} component={HowToReadDots} />\n              <Route exact path={'/Legend'} component={Legend} />\n            <Route component={Landing} />\n          </Switch>\n        </Router>\n    </Root>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}