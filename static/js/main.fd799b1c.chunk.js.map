{"version":3,"sources":["../../dist/download~bjCODHXh.svg","../../dist/data~tHUHAyCj.svg","styling/Grid.ts","styling/styleUtils.ts","styling/GlobalStyles.tsx","pages/index.tsx","../../src/dataViz/Utils.ts","../../src/dataViz/barChart.ts","../../src/dataViz/lineChart.ts","../../src/dataViz/downloadImage.ts","../../src/dataViz/ColorScaleLegend.tsx","../../src/dataViz/HorizontalLegend.tsx","../../src/dataViz/HowToReadDots.tsx","../../src/index.tsx","../../src/dataViz/Legend.tsx","../../src/dataViz/scatterPlot.ts","../../src/dataViz/radarChart.ts","../../src/dataViz/geoMap.ts","../../src/dataViz/clusterBarChart.ts","../../src/dataViz/treeMap.ts","../../src/dataViz/stackChart.ts","../../src/dataViz/clusterChart.ts","../../src/dataViz/boxAndWhiskers.ts","pages/LineChart.tsx","App.tsx","index.tsx"],"names":["module","exports","gridLines","Root","styled","div","Content","header","contentMaxWidth","main","FullWidthContentContainer","secondaryFont","nav","footer","TwoColumnSectionBase","span","h1","h4","legendColor","label","columnDefs","TwoColumnSection","SectionHeaderBase","h3","SectionHeader","Code","color","h5","p","ol","pre","h2","cite","GlobalStyles","createGlobalStyle","List","ul","ListItem","li","to","ranges","divider","suffix","formatNumber","n","range","parseFloat","adaptLabelFontSize","d","labelAvailableWidth","labelWidth","this","LabelPlacement","LabelAnchor","LabelPosition","AnimationDirection","FileFormat","lighten","SizingElm","Tooltip","DownloadButtonsContainer","downloadButtonStyles","darken","DownloadImageButton","DownloadDataButton","SvgIcon","ErrorMessage","Caption","VizType","props","id","enablePNGDownload","enableSVGDownload","jsonToDownload","rootStyles","triggerGoogleAnalyticsEvent","sizingNodeRef","useRef","svgNodeRef","tooltipNodeRef","useState","window","windowWidth","setWindowWidth","useEffect","updateWindowWidth","debounce","svgNode","sizingNode","svg","select","tooltip","input","data","size","axisLabels","axisMinMax","showAverageLines","averageLineText","quadrantLabels","labelFont","margin","width","height","container","allXValues","allYValues","rawMinX","d3","rawMaxX","rawMinY","rawMaxY","minScaleBuffer","maxScaleBuffer","minX","Math","maxX","minY","maxY","xScale","yScale","makeGridlinesX","makeGridlinesY","appendQuadrantLabel","xVal","text","i","textParts","x","y","radius","fill","tooltipContent","tooltipContentOnly","content","onClick","highlighted","createScatterPlot","clientHeight","hideAxis","averageLines","datum","stroke","line","createBarChart","options","config","factor","factorLegend","levels","maxValue","radians","opacityArea","ToRight","TranslateX","TranslateY","ExtraWidthX","ExtraWidthY","Object","allAxis","total","j","levelFactor","series","axis","dataValues","value","point","shape","labels","originalI","parseInt","createRadarChart","scaleOrdinal","minColor","maxColor","center","scale","offset","projection","path","bounds","hscale","vscale","allValues","node","rawMinValue","rawMaxValue","minValue","colorScale","createGeoMap","g","yMax","yMaxDomain","x1","groups","groupName","valueName","yTick","createClusterBarChart","showGridLines","formatAxis","tickCount","animateAxis","valueline","coord","labelColor","coords","labelDataIndex","targetCood","paths","adjustedCoords","shortenedLine","shortPath","document","multiplier","formatX","formatY","xDomain","yDomain","startMaxX","startMinX","startMinY","startMaxY","startX","startY","animationDuration","animationDirection","animationStartIndex","axisDelay","creatLineChart","treemap","root","b","a","cell","t","rect","parentElement","querySelector","rectWidth","rectHeight","words","word","lineNumber","dy","tspan","createTreeMap","enableBrushZoom","keys","stackedData","brush","extent","areaChart","idleTimeout","setTimeout","idled","xAxis","area","groupConfig","group","createStackChart","hideLabels","circleSpacing","max","srcData","parentId","sizeScale","layout","stratData","nodes","createClusterChart","sumstat","q1","median","q3","interQuantileRange","min","allCategories","allMinMaxValues","key","boxWidth","createBoxAndWhiskersChart","handleDownloadImage","fileFormat","title","canvas","img","svgStr","serializer","canvasContext","url","downloadImage","downloadPNGButton","src","DownloadSVGURL","alt","downloadSVGButton","filename","downloadDataButton","DataSVGURL","downloadButtons","style","marginTop","undefined","React","caption","ref","labelPosition","Top","labelAnchor","Middle","Center","Left","LineChart","vizType","left","bottom","App","exact","component","Landing","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fd799b1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/download~bjCODHXh.02e9c647.svg\";","module.exports = __webpack_public_path__ + \"static/media/data~tHUHAyCj.0ed67368.svg\";","import styled from 'styled-components/macro';\n\nconst gridLines = {\n  // Horizontal Grid Lines\n  pageTop: 'countryToolsGlobalGridPageTop',\n  bannerTop: 'countryToolsGlobalGridBannerTop',\n  bannerBottom: 'countryToolsGlobalGridBannerBottom',\n  headerTop: 'countryToolsGlobalGridHeaderTop',\n  headerBottom: 'countryToolsGlobalGridHeaderBottom',\n  mobileMenuTop: 'countryToolsGlobalGridMobileMenuTop',\n  mobileMenuBottom: 'countryToolsGlobalGridMobileMenuBottom',\n  contentTop: 'countryToolsGlobalGridContentTop',\n  contentBottom: 'countryToolsGlobalGridContentBottom',\n  footerTop: 'countryToolsGlobalGridFooterTop',\n  footerBottom: 'countryToolsGlobalGridFooterBottom',\n  pageBottom: 'countryToolsGlobalGridPageBottom',\n  // Vertical Grid Lines\n  pageLeft: 'countryToolsGlobalGridPageLeft',\n  pageMarginLeft: 'countryToolsPageMarginLeft',\n  contentStart: 'countryToolsContentStart',\n  contentEnd: 'countryToolsContentEnd',\n  navStart: 'countryToolsNavStart',\n  navEnd: 'countryToolsNavEnd',\n  pageMarginRight: 'countryToolsPageMarginLeft',\n  pageRight: 'countryToolsGlobalGridPageRight',\n};\n\nexport const gridSmallMediaWidth = 700; // in px\n\nconst contentMaxWidth = 900; // in px\nconst navMaxWidth = 180; // in px\n\n\nexport const Root = styled.div`\n  display: grid;\n  min-height: 100vh;\n  grid-template-rows:\n    [${gridLines.pageTop} ${gridLines.bannerTop}] auto\n    [${gridLines.bannerBottom} ${gridLines.headerTop}] auto\n    [${gridLines.headerBottom} ${gridLines.mobileMenuTop}] auto\n    [${gridLines.mobileMenuBottom} ${gridLines.contentTop}] 1fr\n    [${gridLines.contentBottom} ${gridLines.footerTop}] auto\n    [${gridLines.footerBottom} ${gridLines.pageBottom}];\n\n  grid-template-columns:\n    [${gridLines.pageLeft} ${gridLines.pageMarginLeft}] minmax(1rem, 1fr)\n    [${gridLines.contentStart}] minmax(auto, ${contentMaxWidth}px)\n    [${gridLines.contentEnd} ${gridLines.navStart}]  minmax(auto, ${navMaxWidth}px)\n    [${gridLines.navEnd} ${gridLines.pageMarginRight}] minmax(1rem, 1fr)\n    [${gridLines.pageRight}];\n`;\n\nexport const FullWidthHeader = styled.header`\n  grid-row: ${gridLines.headerTop} / ${gridLines.headerBottom};\n  grid-column: ${gridLines.pageLeft} / ${gridLines.pageRight};\n`;\nexport const FullWidthHeaderContent = styled.div`\n  max-width: ${contentMaxWidth + navMaxWidth}px;\n  margin: 0 auto;\n`;\n\nexport const Header = styled.header`\n  grid-row: ${gridLines.headerTop} / ${gridLines.headerBottom};\n  grid-column: ${gridLines.contentStart} / ${gridLines.navEnd};\n`;\n\nexport const Content = styled.main`\n  grid-row: ${gridLines.contentTop} / ${gridLines.contentBottom};\n  grid-column: ${gridLines.contentStart} / ${gridLines.contentEnd};\n\n  @media (max-width: ${gridSmallMediaWidth}px) {\n    grid-column: ${gridLines.contentStart} / ${gridLines.navEnd};\n  }\n`;\n\nexport const ContentFull = styled.main`\n  grid-row: ${gridLines.contentTop} / ${gridLines.contentBottom};\n  grid-column: ${gridLines.contentStart} / ${gridLines.navEnd};\n`;\n\nexport const FullWidthContent = styled.main`\n  grid-row: ${gridLines.contentTop} / ${gridLines.contentBottom};\n  grid-column: ${gridLines.pageLeft} / ${gridLines.pageRight};\n`;\n\nexport const FullWidthContentContainer = styled.div`\n  max-width: ${contentMaxWidth + navMaxWidth}px;\n  margin: 0 auto;\n`;\n\nexport const NavContainer = styled.nav`\n  grid-row: ${gridLines.contentTop} / ${gridLines.contentBottom};\n  grid-column: ${gridLines.navStart} / ${gridLines.navEnd};\n  position: relative;\n  z-index: 200;\n\n  @media (max-width: ${gridSmallMediaWidth}px) {\n    grid-row: ${gridLines.mobileMenuTop} / ${gridLines.mobileMenuBottom};\n    grid-column: ${gridLines.pageLeft} / ${gridLines.pageRight};\n    position: sticky;\n    top: 0;\n  }\n`;\n\nexport const FullWidthFooter = styled.footer`\n  grid-row: ${gridLines.footerTop} / ${gridLines.footerBottom};\n  grid-column: ${gridLines.pageLeft} / ${gridLines.pageRight};\n`;\nexport const FullWidthFooterContent = styled.footer`\n  max-width: ${contentMaxWidth + navMaxWidth}px;\n  margin: 0 auto;\n`;\n\nexport const storyMobileWidth = 700; // in px\n\nexport const StoriesGrid = styled(FullWidthContentContainer)`\n  display: grid;\n  grid-template-columns: 8fr 5fr;\n  column-gap: 2rem;\n  position: relative;\n\n  @media (max-width: ${storyMobileWidth}px) {\n    grid-template-columns: 1fr;\n  }\n`;\n","import styled from 'styled-components/macro';\nimport {storyMobileWidth} from './Grid';\n\nexport const baseColor = '#333333'; // dark gray/black color for text\nexport const lightBaseColor = '#7c7c7c'; // light gray color for subtitles and contextual information\nexport const lightBorderColor = '#dcdcdc'; // really light gray color for subtle borders between elements\n\nexport const tertiaryColor = '#f3f3f3'; // really light gray color for use as a hover background color on cards\n\nexport const primaryFont = \"'Source Sans Pro', sans-serif\";\nexport const secondaryFont = \"'OfficeCodeProWeb', monospace\";\n\nexport const semiBoldFontBoldWeight = 600;\nexport const boldFontWeight = 700;\n\nexport const Light = styled.span`\n  color: ${lightBaseColor};\n`;\n\nexport const StandardH1 = styled.h1`\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-size: 2.2rem;\n  font-weight: 400;\n`;\n\ninterface HeaderWithLegendProps {\n  legendColor: string;\n}\n\nexport const HeaderWithLegend = styled.h4<HeaderWithLegendProps>`\n  margin-top: 0;\n  display: flex;\n  align-items: center;\n  font-weight: 400;\n  font-size: 1.1rem;\n\n  &:before {\n    content: '';\n    display: inline-block;\n    width: 1.5rem;\n    height: 1.5rem;\n    background-color: ${({legendColor}) => legendColor};\n    margin-right: 0.5rem;\n  }\n`;\n\nexport const labelMarginBottom = 0.3; // in rem\n\nexport const Label = styled.label`\n  font-family: ${secondaryFont};\n  margin-bottom: ${labelMarginBottom}rem;\n  display: block;\n`;\n\ninterface TwoColumnSectionProps {\n  columnDefs?: string;\n}\n\nexport const TwoColumnSectionBase = styled.div<TwoColumnSectionProps>`\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-template-columns: ${({columnDefs}) => columnDefs ? columnDefs : '1fr 1fr'};\n`;\n\nexport const TwoColumnSection = styled(TwoColumnSectionBase)`\n  margin-bottom: 2rem;\n\n  @media (max-width: 850px) {\n    grid-template-columns: auto;\n    grid-template-rows: auto auto auto;\n  }\n`;\nexport const InlineTwoColumnSection = styled(TwoColumnSectionBase)`\n  @media (max-width: 850px) {\n    padding: 1rem;\n  }\n\n  @media (max-width: 500px) {\n    grid-template-columns: auto;\n    grid-template-rows: auto auto auto;\n  }\n`;\n\nconst SectionHeaderBase = styled.h3`\n  grid-row: 1;\n  grid-column: 1 / -1;\n  font-family: ${secondaryFont};\n  color: ${baseColor};\n  letter-spacing: 1px;\n`;\n\nexport const SectionHeader = styled(SectionHeaderBase)`\n  display: flex;\n  align-items: center;\n  font-size: 1.4rem;\n  text-transform: uppercase;\n  font-weight: 400;\n\n  &:after {\n    content: '';\n    display: block;\n    height: 0;\n    border-top: 2px solid ${lightBorderColor};\n    flex-grow: 1;\n    margin-left: 1.25rem;\n  }\n`;\n\ninterface TitleColorProps {\n  color?: string;\n}\n\nexport const SectionHeaderSecondary = styled(SectionHeaderBase)<TitleColorProps>`\n  font-size: 1.2rem;\n  text-transform: uppercase;\n  font-weight: 600;\n  color: ${({color}) => color ? color : baseColor};\n`;\n\nexport const SubSectionHeader = styled.h4<TitleColorProps>`\n  margin-top: 0;\n  font-weight: 600;\n  text-transform: uppercase;\n  font-size: 1.2rem;\n  letter-spacing: 1px;\n  font-family: ${secondaryFont};\n  color: ${({color}) => color ? color : baseColor};\n`;\n\nexport const ParagraphHeader = styled.h5<TitleColorProps>`\n  font-family: ${secondaryFont};\n  letter-spacing: 1px;\n  display: flex;\n  align-items: center;\n  margin: 0 0 0.5rem;\n  color: ${({color}) => color ? color : baseColor};\n\n  &:after {\n    content: '';\n    display: block;\n    height: 0;\n    border-top: 2px solid ${lightBorderColor};\n    flex-grow: 1;\n    margin-left: 1rem;\n  }\n`;\n\nexport const NarrowPaddedColumn = styled.div`\n  padding: 0 0.5rem;\n`;\n\nexport const LargeParagraph = styled.p`\n  font-size: 1.2rem;\n  margin-bottom: 2rem;\n`;\n\nexport const SmallParagraph = styled.p`\n  font-size: 0.8rem;\n`;\n\nexport const SmallOrderedList = styled.ol`\n  li {\n    font-size: 0.8rem;\n  }\n`;\n\nexport const Card = styled.div`\n  padding: 0.7rem;\n  border: solid 1px ${lightBorderColor};\n  box-shadow: 0px 0px 3px -1px #b5b5b5;\n  margin-bottom: 2rem;\n  background-color: #fff;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${tertiaryColor};\n  }\n`;\n\nexport const Code = styled.pre`\n  background-color: ${tertiaryColor};\n  color: #444;\n  padding: 1rem;\n  box-sizing: border-box;\n`;\n\nexport const FullWidth = styled.div`\n  grid-column: 1 / -1;\n`;\n\nexport const CoverPhoto = styled.div`\n  grid-column: 1 / -1;\n  height: 40vh;\n  background-color: ${tertiaryColor};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const StoryTitle = styled.h1`\n  text-align: center;\n  margin: 2rem 0 1.5rem;\n  font-size: 2.5rem;\n  margin-top: 2rem;\n  letter-spacing: 1px;\n  text-align: center;\n`;\n\nexport const StoryHeading = styled.h2`\n  grid-column: 1 / -1;\n  font-weight: 600;\n  font-size: 1.75rem;\n  text-align: center;\n`;\n\nexport const Authors = styled.div`\n  font-family: ${secondaryFont};\n  letter-spacing: -0.8px;\n  font-size: 1rem;\n  color: #666;\n  text-align: center;\n  font-weight: 400;\n  margin-bottom: 1.5rem;\n`;\n\n\nexport const StorySectionContainer = styled.div`\n  min-height: 50vh;\n  position: relative;\n  padding-bottom: 10vh;\n`;\n\nexport const StickyContainer = styled.div`\n  position: sticky;\n  top: 0;\n  min-height: 80vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  @media (max-width: ${storyMobileWidth}px) {\n    position: relative;\n    z-index: 10;\n  }\n`;\n\nexport const VizSource = styled.cite`\n  text-align: center;\n  display: block;\n  margin: 0.75rem 0 1rem;\n  font-size: 0.7rem;\n`;\n\nexport const VizSourceCompact = styled.cite`\n  text-align: center;\n  display: block;\n  margin: 0.5rem 0 0.25rem;\n  font-size: 0.7rem;\n`;\n","import { createGlobalStyle } from 'styled-components/macro';\nimport {\n  baseColor,\n  lightBaseColor,\n  semiBoldFontBoldWeight,\n  primaryFont,\n} from './styleUtils';\n\nconst GlobalStyles = createGlobalStyle`\n  @media(max-width: 600px) {\n    html {\n      font-size: 14px;\n    }\n  }\n  @media(max-width: 450px) {\n    html {\n      font-size: 12px;\n    }\n  }\n\n  body {\n    font-family: ${primaryFont};\n    color: ${baseColor};\n    margin: 0;\n    padding: 0;\n  }\n\n  h1 {\n    font-weight: ${semiBoldFontBoldWeight};\n    font-size: 1.7rem;\n  }\n\n  h3 {\n    font-weight: ${semiBoldFontBoldWeight};\n    font-size: 1.1rem;\n    color: ${lightBaseColor};\n  }\n\n  p {\n    line-height: 1.5;\n    margin: 0 0 1rem;\n  }\n\n  button {\n    cursor: pointer;\n    border: none;\n    width: auto;\n    text-align: inherit;\n    overflow: visible;\n\n    /* Normalize 'line-height'. Cannot be changed from 'normal' in Firefox 4+. */\n    line-height: normal;\n\n    /* Corrects font smoothing for webkit */\n    -webkit-font-smoothing: inherit;\n    -moz-osx-font-smoothing: inherit;\n\n    /* Corrects inability to style clickable 'input' types in iOS */\n    -webkit-appearance: none;\n\n    /* Remove excess padding and border in Firefox 4+ */\n    &::-moz-focus-inner {\n        border: 0;\n        padding: 0;\n    }\n  }\n\n  ol {\n    padding-left: 1rem;\n\n    li {\n      margin-bottom: 0.6rem;\n      font-size: 0.9rem;\n    }\n  }\n`;\n\nexport default GlobalStyles;\n","import React from 'react';\nimport styled from 'styled-components/macro';\nimport { Link } from 'react-router-dom';\nimport { Content } from '../styling/Grid';\nimport {\n  SectionHeader,\n  secondaryFont,\n} from '../styling/styleUtils';\n\nconst List = styled.ul`\n  font-family: ${secondaryFont};\n`;\nconst ListItem = styled.li`\n  font-size: 1.25rem;\n\n  a {\n    color: rgb(78, 140, 141); \n    text-decoration: none;\n    border-bottom: solid 1px rgb(78, 140, 141);\n  }\n`;\n\nexport default () => {\n  return (\n    <Content>\n      <SectionHeader>Examples of react-d3-fast-charts</SectionHeader>\n      <List>\n        <ListItem><Link to={'/line-chart'}>Line Chart</Link></ListItem>\n      </List>\n    </Content>\n  );\n}\n","export const baseColor = '#333333'; // dark gray/black color for text\nexport const secondaryFont = \"'OfficeCodeProWeb', monospace\";\nexport const tertiaryColor = '#f3f3f3'; // really light gray color for use as a hover background color on cards\n\nexport const defaultPaletteColors = [\n  '#003f5c',\n  '#2f4b7c',\n  '#665191',\n  '#a05195',\n  '#d45087',\n  '#f95d6a',\n  '#ff7c43',\n  '#ffa600',\n  '#ffa600',\n  '#c1ab00',\n  '#86a927',\n  '#4fa049',\n  '#019463',\n  '#008575',\n  '#00747a',\n  '#166273',\n];\n\nexport const defaultDivergentColors = [\n  '#00876c',\n  '#8cbcac',\n  '#f1f1f1',\n  '#ec9c9d',\n  '#d43d51',\n];\n\nexport const defaultCoolChloropleth = [\n  '#004c6d',\n  '#326988',\n  '#5487a5',\n  '#76a6c2',\n  '#98c7e0',\n  '#bbe8ff',\n];\n\nexport const defaultHotChloropleth = [\n  '#ff7b00',\n  '#fd9936',\n  '#fcb45e',\n  '#fbcc88',\n  '#fce2b4',\n  '#fff6e2',\n];\n\nconst ranges = [\n  { divider: 1e18 , suffix: 'E' },\n  { divider: 1e15 , suffix: 'P' },\n  { divider: 1e12 , suffix: 'T' },\n  { divider: 1e9 , suffix: 'B' },\n  { divider: 1e6 , suffix: 'M' },\n  { divider: 1e3 , suffix: 'k' },\n];\n\nexport const formatNumber = (n: number) => {\n  for (const range of ranges) {\n    if (n >= range.divider) {\n      return parseFloat((n / range.divider).toFixed(2)).toString() + range.suffix;\n    }\n  }\n  return n.toString();\n};\n\nexport function adaptLabelFontSize(d: any) {\n  // var xPadding, diameter, labelAvailableWidth, labelWidth;\n\n  const xPadding = 8;\n  const diameter = 2 * d.r;\n  const labelAvailableWidth = diameter - xPadding;\n\n  // @ts-ignore\n  const labelWidth = this.getComputedTextLength();\n\n  // There is enough space for the label so leave it as is.\n  if (labelWidth < labelAvailableWidth) {\n    return null;\n  }\n\n  /*\n   * The meaning of the ratio between labelAvailableWidth and labelWidth equaling 1 is that\n   * the label is taking up exactly its available space.\n   * With the result as `1em` the font remains the same.\n   *\n   * The meaning of the ratio between labelAvailableWidth and labelWidth equaling 0.5 is that\n   * the label is taking up twice its available space.\n   * With the result as `0.5em` the font will change to half its original size.\n   */\n  return (labelAvailableWidth / labelWidth) + 'em';\n}\n","import * as d3 from 'd3';\nimport {formatNumber} from './Utils';\n\nexport interface Datum {\n  x: string;\n  y: number;\n  fill?: string;\n  stroke?: string;\n  tooltipContent?: string;\n  tooltipContentOnly?: boolean;\n  onClick?: () => void;\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\nexport enum LabelPlacement {\n  left = 'left',\n  right = 'right',\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[][];\n  size: Dimensions;\n  axisLabels?: {left?: string, bottom?: string};\n  axisMinMax?: {\n    minY?: number,\n    maxY?: number,\n  };\n  hideAxis?: {\n    left?: boolean;\n    bottom?: boolean;\n  };\n  averageLines?: {\n    value: number,\n    label?: string;\n    labelPlacement?: LabelPlacement;\n    strokeWidth?: number;\n    strokeDasharray?: number;\n    strokeColor?: string;\n  }[];\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const {\n    svg, data, size, axisLabels, tooltip, axisMinMax, hideAxis,\n    averageLines, labelFont,\n  } = input;\n\n  const margin = {\n    top: 30, right: 30,\n    bottom: axisLabels && axisLabels.bottom ? 60 : 30,\n    left: 35};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n    // set the ranges\n  const xScale = d3.scaleBand()\n            .range([0, width])\n            .padding(0.1);\n  const yScale = d3.scaleLinear()\n            .range([height, 0]);\n\n  // append the svg object to the body of the page\n  // append a 'group' element to 'svg'\n  // moves the 'group' element to the top left margin\n  svg\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom);\n\n  const container = svg\n    .append('g')\n      .attr('transform',\n            'translate(' + margin.left + ',' + margin.top + ')');\n  const allYValues: number[] = [];\n  data.forEach(datum => datum.forEach(({y}) => allYValues.push(y)));\n\n  const minScaleBuffer = 0.9;\n  const maxScaleBuffer = 1.1;\n\n  let minY: number;\n  let maxY: number;\n\n  if (axisMinMax !== undefined && axisMinMax.minY !== undefined) {\n    minY = axisMinMax.minY;\n  } else {\n    const rawMinY = d3.min(allYValues);\n    minY = rawMinY ? Math.floor(rawMinY * minScaleBuffer) : 0;\n  }\n\n  if (axisMinMax !== undefined && axisMinMax.maxY !== undefined) {\n    maxY = axisMinMax.maxY;\n  } else {\n    const rawMaxY = d3.max(allYValues);\n    maxY = rawMaxY ? Math.floor(rawMaxY * maxScaleBuffer) : 0;\n  }\n\n  // Scale the range of the data in the domains\n  xScale.domain(data && data.length ? data[0].map(function(d) { return d.x; }) : [])\n        .rangeRound([0, width])\n        .paddingInner(0.2);\n  yScale.domain([minY, maxY]);\n\n  // append the rectangles for the bar chart\n  data.forEach((dataset, i) => {\n    container.selectAll('.bar-' + i)\n        .data(dataset)\n      .enter().append('rect')\n        .attr('class', 'bar')\n        .attr('x', function(d) {\n          const xVal = xScale(d.x);\n          return xVal ? xVal : 0;\n        })\n        .attr('width', xScale.bandwidth())\n        .attr('y', function(d) { return yScale(d.y); })\n        .style('fill', ({fill}) => fill ? fill : '#69b3a2')\n        .style('stroke', ({stroke}) => stroke ? stroke : 'none')\n        .style('stroke-width', 3)\n        .attr('height', function(d) { return height - yScale(d.y); })\n        .on('mousemove', ({x, tooltipContent, tooltipContentOnly}) => {\n          if (tooltipContentOnly && tooltipContent && tooltipContent.length) {\n            tooltip.html(tooltipContent);\n          } else {\n            const content = tooltipContent === undefined || tooltipContent.length === 0\n              ? '' : `:<br />${tooltipContent}`;\n            tooltip.html(`<strong>${x}</strong>${content}`);\n          }\n          tooltip\n            .style('display', 'block')\n            .style('position', 'fixed')\n            .style('left', d3.event.clientX + 'px')\n            .style('top', d3.event.clientY + 'px');\n          })\n        .on('mouseout', () => {\n          tooltip\n              .style('display', 'none');\n        });\n  });\n\n  // append X axis label\n  if (!(hideAxis && hideAxis.bottom)) {\n    // add the x Axis\n    container.append('g')\n        .attr('transform', 'translate(0,' + height + ')')\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .call(d3.axisBottom(xScale));\n    svg\n      .append('text')\n      .attr('transform', `translate(${width / 2 + margin.left}, ${height + margin.bottom + (margin.top / 2)})`)\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .style('font-size', '0.8rem')\n        .style('text-anchor', 'middle')\n        .text(axisLabels && axisLabels.bottom ? axisLabels.bottom : '');\n  }\n  if (!(hideAxis && hideAxis.left)) {\n      // add the y Axis\n    container.append('g')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .call(d3.axisLeft(yScale).tickFormat(formatNumber));\n    // append Y axis label\n    svg\n      .append('text')\n        .attr('y', margin.top / 2)\n        .attr('x', margin.right)\n        .attr('dy', '0.75em')\n        .style('font-size', '0.8rem')\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .text(axisLabels && axisLabels.left ? axisLabels.left : '');\n  }\n\n  if (averageLines && averageLines.length) {\n    averageLines.forEach(line => {\n      svg\n       .append('line')\n      .attr('x1',margin.left)\n      .attr('x2',size.width - margin.right)\n      .attr('y1', yScale(line.value) + 0.5)\n      .attr('y2', yScale(line.value) + 0.5)\n      .attr('stroke-width', line.strokeWidth ? line.strokeWidth : '1px')\n      .attr('stroke', line.strokeColor ? line.strokeColor : '#333')\n      .attr('stroke-dasharray', line.strokeDasharray ? line.strokeDasharray : 0)\n      .style('pointer-events', 'none');\n\n      if (line.label) {\n\n        svg.append('text')\n          .attr('x', line.labelPlacement === LabelPlacement.right ? size.width - margin.right : margin.left + 8)\n          .attr('y',yScale(line.value) - 4)\n          .style('text-anchor', line.labelPlacement === LabelPlacement.right ? 'end' : 'start')\n          .style('opacity', 0.8)\n          .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n          .style('font-size', '12px')\n          .style('pointer-events', 'none')\n          .text(line.label);\n      }\n    });\n  }\n\n};\n","import * as d3 from 'd3';\n\nexport interface Coords {\n  x: number;\n  y: number;\n}\n\nexport enum LabelAnchor {\n  Left = 'start',\n  Middle = 'middle',\n  Right = 'end',\n}\n\nexport enum LabelPosition {\n  Top = 'top',\n  Center = 'center',\n  Bottom = 'bottom',\n}\n\nexport enum AnimationDirection {\n  Forward = 'forward',\n  Backward = 'backward',\n}\n\nexport interface Datum {\n  coords: Coords[];\n  animationDuration?: number;\n  animationDirection?: AnimationDirection;\n  animationStartIndex?: number;\n  label?: string;\n  labelColor?: string;\n  showLabelLine?: boolean;\n  labelPosition?: LabelPosition;\n  labelAnchor?: LabelAnchor;\n  labelDataIndex?: number;\n  color?: string;\n  width?: number;\n  tooltipContent?: string;\n}\n\ninterface InternalDatum extends Datum {\n  totalLength?: number;\n  animationStartPercentAsDecimal?: number;\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\nconst ranges = [\n  { divider: 1e18 , suffix: 'E' },\n  { divider: 1e15 , suffix: 'P' },\n  { divider: 1e12 , suffix: 'T' },\n  { divider: 1e9 , suffix: 'B' },\n  { divider: 1e6 , suffix: 'M' },\n  { divider: 1e3 , suffix: 'k' },\n];\n\nconst formatNumber = (n: number) => {\n  for (const range of ranges) {\n    if (n >= range.divider) {\n      return (n / range.divider).toString() + range.suffix;\n    }\n  }\n  return n.toString();\n};\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[];\n  size: Dimensions;\n  axisLabels?: {left?: string, bottom?: string};\n  axisMinMax?: {\n    minX?: number,\n    maxX?: number,\n    minY?: number,\n    maxY?: number,\n  };\n  animateAxis?: {\n    animationDuration: number,\n    startMinX: number,\n    startMaxX: number,\n    startMinY: number,\n    startMaxY: number,\n    startLeftLabel?: string;\n    startBottomLabel?: string;\n  };\n  showGridLines?: {\n    xAxis?: boolean;\n    yAxis?: boolean;\n  };\n  formatAxis?: {\n    x?: (n: number) => string;\n    y?: (n: number) => string;\n  };\n  tickCount?: {\n    x?: number;\n    y?: number;\n  };\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const {\n    svg, size, axisLabels, tooltip, axisMinMax,\n    showGridLines, formatAxis, tickCount, animateAxis,\n    labelFont,\n  } = input;\n\n  const data: InternalDatum[] = input.data;\n\n  const margin = {top: 30, right: 30, bottom: 30, left: 35};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  // set the ranges\n  const x = d3.scaleLinear().range([0, width]);\n  const y = d3.scaleLinear().range([height, 0]);\n\n  // define the line\n  const valueline = d3.line()\n    .x(function(d: any) { return x(d.x); })\n    .y(function(d: any) { return y(d.y); });\n\n  // append the svg obgect to the body of the page\n  // appends a 'group' element to 'svg'\n  // moves the 'group' element to the top left margin\n  svg\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom);\n\n  const g = svg.append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n  const allXValues: number[] = [];\n  const allYValues: number[] = [];\n  data.forEach(line => line.coords.forEach((coord) => {\n    allXValues.push(coord.x);\n    allYValues.push(coord.y);\n  }));\n\n  const rawMinX = axisMinMax && axisMinMax.minX !== undefined ? axisMinMax.minX : d3.min(allXValues);\n  const rawMaxX = axisMinMax && axisMinMax.maxX !== undefined ? axisMinMax.maxX : d3.max(allXValues);\n  const rawMinY = axisMinMax && axisMinMax.minY !== undefined ? axisMinMax.minY : d3.min(allYValues);\n  const rawMaxY = axisMinMax && axisMinMax.maxY !== undefined ? axisMinMax.maxY : d3.max(allYValues);\n\n  const minX = rawMinX ? Math.floor(rawMinX) : 0;\n  const maxX = rawMaxX ? Math.ceil(rawMaxX) : 0;\n  const minY = rawMinY ? Math.floor(rawMinY) : 0;\n  const maxY = rawMaxY ? Math.ceil(rawMaxY) : 0;\n\n  // Scale the range of the data\n  x.domain([minX, maxX]);\n  y.domain([minY, maxY]);\n\n  g.selectAll('.label-lines')\n      .data(data)\n      .enter()\n        .append('line')\n        .attr('transform', 'translate(' + margin.left + ', 0)')\n        .style('stroke-dasharray', '3 1')\n        .attr('stroke', ({labelColor}) => labelColor ? labelColor : 'gray')\n        .attr('y1', ({coords, labelDataIndex}) => {\n          const targetCood = labelDataIndex && labelDataIndex < coords.length ? labelDataIndex : coords.length - 1;\n          return y(coords[targetCood].y);\n        })\n        .attr('x1', ({coords, labelDataIndex}) => {\n          const targetCood = labelDataIndex && labelDataIndex < coords.length ? labelDataIndex : coords.length - 1;\n          return x(coords[targetCood].x);\n        })\n        .attr('y2', height)\n        .attr('x2', ({coords, labelDataIndex}) => {\n          const targetCood = labelDataIndex && labelDataIndex < coords.length ? labelDataIndex : coords.length - 1;\n          return x(coords[targetCood].x);\n        })\n        .text(({label}) => label ? label : '')\n        .attr('opacity', '0')\n        .transition() // Call Transition Method\n        .delay(d => {\n          const axisDelay = animateAxis ? animateAxis.animationDuration : 0;\n          const lineDelay = d.animationDuration ? d.animationDuration : 0;\n          return axisDelay + lineDelay;\n        })\n        .duration(d => d.animationDuration ? d.animationDuration : 0 ) // Set Duration timing (ms)\n        .ease(d3.easeLinear) // Set Easing option\n        .attr('opacity', d => d.showLabelLine ? '1' : '0');\n\n  // Add the valueline path.\n  const paths = g.selectAll('.paths')\n      .data(data)\n      .enter()\n        .append('path')\n        .attr('class', 'line')\n        .attr('fill', 'none')\n        .attr('stroke', ({color}) => color ? color : 'gray')\n        .attr('stroke-width', (line) => line.width ? line.width : 1.5)\n        .attr('stroke-linejoin', 'round')\n        .attr('stroke-linecap', 'round')\n        .attr('d', d => valueline(d.coords as any as [[number, number]]))\n        .attr('transform', 'translate(' + margin.left + ', 0)')\n        .on('mousemove', ({tooltipContent}) => {\n          if (tooltipContent && tooltipContent.length) {\n            tooltip.html(tooltipContent);\n            tooltip\n              .style('display', 'block')\n              .style('left', (d3.event.pageX + 4) + 'px')\n              .style('top', (d3.event.pageY - 4) + 'px');\n          }\n        })\n        .on('mouseout', () => {\n          tooltip\n              .style('display', 'none');\n        });\n\n  // Set Properties of Dash Array and Dash Offset and initiate Transition\n  paths.each(function(d) {\n      d.totalLength = this.getTotalLength();\n      if (d.animationStartIndex !== undefined) {\n        const adjustedCoords = d.coords.filter((_c, i) => i <= (d.animationStartIndex as number));\n        const shortenedLine = valueline(adjustedCoords as any as [[number, number]]);\n        const shortPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        shortPath.setAttribute('d', shortenedLine ? shortenedLine : '');\n        d.animationStartPercentAsDecimal = 1 - (shortPath.getTotalLength() / d.totalLength);\n      }\n    })\n    .attr('stroke-dasharray', d => d.totalLength ? d.totalLength : 0)\n    .attr('stroke-dashoffset', d => {\n      const multiplier = d.animationStartPercentAsDecimal !== undefined ? d.animationStartPercentAsDecimal : 1;\n      return d.totalLength && d.animationDirection !== AnimationDirection.Backward ? d.totalLength * multiplier : 0;\n    })\n    .transition() // Call Transition Method\n    .delay(animateAxis ? animateAxis.animationDuration : 0)\n    .duration(d => d.animationDuration ? d.animationDuration : 0) // Set Duration timing (ms)\n    .ease(d3.easeLinear) // Set Easing option\n    .attr('stroke-dashoffset', d => {\n      const multiplier = d.animationStartPercentAsDecimal !== undefined ? d.animationStartPercentAsDecimal : 1;\n      return d.totalLength && d.animationDirection === AnimationDirection.Backward ? d.totalLength * multiplier : 0;\n    }); // Set final value of dash-offset for transition\n\n  // Add the labels\n  g.selectAll('.labels')\n      .data(data)\n      .enter()\n        .append('text')\n        .attr('transform', d => {\n          if (d.labelPosition === LabelPosition.Top) {\n            return `translate(${margin.left + 8} -8)`;\n          } else if (d.labelPosition === LabelPosition.Bottom) {\n            return `translate(${margin.left + 8} 12)`;\n          } else if (d.labelPosition === LabelPosition.Center) {\n            return `translate(${margin.left + 8} 2)`;\n          } else {\n            return `translate(${margin.left + 8} 2)`;\n          }\n        })\n        .attr('text-anchor', d => d.labelAnchor ? d.labelAnchor : LabelAnchor.Left)\n        .attr('class', 'line-label')\n        .attr('fill', ({labelColor}) => labelColor ? labelColor : 'gray')\n        .attr('font-size', '0.7rem')\n        .attr('y', ({coords, labelDataIndex}) => {\n          const targetCood = labelDataIndex && labelDataIndex < coords.length ? labelDataIndex : coords.length - 1;\n          return y(coords[targetCood].y);\n        })\n        .attr('x', ({coords, labelDataIndex}) => {\n          const targetCood = labelDataIndex && labelDataIndex < coords.length ? labelDataIndex : coords.length - 1;\n          return x(coords[targetCood].x);\n        })\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .text(({label}) => label ? label : '')\n        .attr('opacity', '0')\n        .transition() // Call Transition Method\n        .delay(d => {\n          const axisDelay = animateAxis ? animateAxis.animationDuration : 0;\n          const lineDelay = d.animationDuration ? d.animationDuration : 0;\n          return axisDelay + lineDelay;\n        }) // Set Delay timing (ms)\n        .duration(d => d.animationDuration ? d.animationDuration : 0 ) // Set Duration timing (ms)\n        .ease(d3.easeLinear) // Set Easing option\n        .attr('opacity', '1');\n\n  const formatX = formatAxis && formatAxis.x ? formatAxis.x : formatNumber;\n  const formatY = formatAxis && formatAxis.y ? formatAxis.y : formatNumber;\n  let xDomain = d3.axisBottom(x);\n  let yDomain = d3.axisLeft(y);\n  if (animateAxis !== undefined) {\n    const {\n      startMaxX, startMinX, startMinY, startMaxY,\n    } = animateAxis;\n    const startX = d3.scaleLinear().range([0, width]);\n    const startY = d3.scaleLinear().range([height, 0]);\n    // Scale the range of the data\n    startX.domain([startMinX, startMaxX]);\n    startY.domain([startMinY, startMaxY]);\n\n    xDomain = d3.axisBottom(startX);\n    yDomain = d3.axisLeft(startY);\n  }\n  // Add the x Axis\n  g.append('g')\n      .attr('class', 'myXaxis')\n      .attr('transform', 'translate(' + margin.left + ',' + height + ')')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .call(xDomain.tickFormat(formatX).ticks(tickCount && tickCount.x ? tickCount.x : 10));\n\n  // Add the y Axis\n  g.append('g')\n      .attr('class', 'myYaxis')\n      .attr('transform', 'translate(' + margin.left + ', 0)')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .call(yDomain.tickFormat(formatY).ticks(tickCount && tickCount.y ? tickCount.y : 10));\n\n  if (animateAxis !== undefined) {\n    (g.selectAll('.myYaxis')\n      .transition()\n      .duration(animateAxis.animationDuration) as any)\n      .call(d3.axisLeft(y).tickFormat(formatY).ticks(tickCount && tickCount.y ? tickCount.y : 10));\n\n    (g.selectAll('.myXaxis')\n      .transition()\n      .duration(animateAxis.animationDuration) as any)\n      .call(d3.axisBottom(x).tickFormat(formatX).ticks(tickCount && tickCount.x ? tickCount.x : 10));\n  }\n\n  // gridlines in x axis function\n  const makeGridlinesX: any = () => d3.axisBottom(x).ticks(tickCount && tickCount.x ? tickCount.x : 10);\n\n  // gridlines in y axis function\n  const makeGridlinesY: any = () => d3.axisLeft(y).ticks(tickCount && tickCount.y ? tickCount.y : 10);\n\n  // add the X gridlines\n  if (showGridLines && showGridLines.xAxis) {\n    g.append('g')\n      .attr('class', 'grid')\n      .attr('transform', 'translate(' + margin.left + ',' + height + ')')\n      .style('opacity', '0.25')\n      .style('stroke-dasharray', '3 1')\n      .call(makeGridlinesX()\n          .tickSize(-height)\n          .tickFormat(''),\n      );\n  }\n\n  // add the Y gridlines\n  if (showGridLines && showGridLines.yAxis) {\n    g.append('g')\n      .attr('class', 'grid')\n      .attr('transform', 'translate(' + margin.left + ', 0)')\n      .style('opacity', '0.25')\n      .style('stroke-dasharray', '3 1')\n      .call(makeGridlinesY()\n          .tickSize(-width)\n          .tickFormat(''),\n      );\n  }\n\n  // append X axis label\n  svg\n    .append('text')\n    .attr('transform', `translate(${width / 2 + margin.left}, ${height + margin.bottom + margin.top})`)\n      .style('text-anchor', 'middle')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .text(axisLabels && axisLabels.bottom ? axisLabels.bottom : '');\n\n  // append Y axis label\n  svg\n    .append('text')\n    .attr('transform', 'rotate(-90)')\n      .attr('y', 0)\n      .attr('x', 0 - (height / 2 + margin.top))\n      .attr('dy', '0.75em')\n      .style('text-anchor', 'middle')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .text(axisLabels && axisLabels.left ? axisLabels.left : '');\n\n  g.style('transform', 'scale(0.95) translateY(' + margin.top + 'px)')\n   .style('transform-origin', 'center');\n\n   // add the dots\n  data.forEach((datum) => {\n    const {\n      coords, color, label,\n      animationDuration, animationDirection, animationStartIndex,\n    } = datum;\n    if (animationDirection === AnimationDirection.Backward) {\n      coords.reverse();\n    }\n    const fill = color ? color : 'gray';\n    g.selectAll('.circles')\n        .data(coords)\n        .enter()\n          .append('circle')\n          .on('mousemove', (coord) => {\n              if (label && label.length) {\n                tooltip.html(`\n                  <div style=\"\n                    display: inline-block;\n                    background-color: ${fill};\n                    width: 12px;\n                    height: 12px;\n                    margin-right: 12px;\n                    flex-shrink: 0;\n                  \"></div>\n                  <div>\n                    <strong>${label}</strong>\n                    <br />\n                    ${coord.x}: ${parseFloat(coord.y.toFixed(2))}\n                  </div>\n                `);\n                tooltip\n                  .style('position', 'fixed')\n                  .style('left', d3.event.clientX + 'px')\n                  .style('top', d3.event.clientY + 'px')\n                  .style('display', 'flex')\n                  .style('align-items', 'center');\n              }\n            })\n            .on('mouseout', () => {\n              tooltip\n                  .style('display', 'none');\n            })\n          .attr('cx', (coord) => x(coord.x))\n          .attr('cy', (coord) => y(coord.y))\n          .attr('r', 4)\n          .style('fill', fill)\n          .style('stroke', 'transparent')\n          .style('stroke-width', 25)\n          .attr('transform', 'translate(' + margin.left + ', 0)')\n          .style('opacity', (_d, i) =>\n            animationDirection === AnimationDirection.Backward ||\n            (animationStartIndex !== undefined && i <= (animationStartIndex))\n              ? 1 : 0,\n          )\n          .transition() // Call Transition Method\n          .delay((_d, i) => {\n            const axisDelay = animateAxis ? animateAxis.animationDuration : 0;\n            if (animationDuration && i !== 0) {\n              return animationDuration * (i / coords.length) + axisDelay;\n            } else {\n              return axisDelay;\n            }\n          })\n          .duration(animationDuration ? 100 : 0) // Set Duration timing (ms)\n          .style('opacity', (_coord, i) => {\n            if (animationDirection === AnimationDirection.Backward) {\n              return animationStartIndex !== undefined && i >= (coords.length - 1) - animationStartIndex ? 1 : 0;\n            } else {\n              return 1;\n            }\n          });\n  });\n\n};\n\n","export enum FileFormat {\n  SVG = 'svg',\n  PNG = 'png',\n}\n\ninterface Input {\n  svg: Node | null;\n  width: number | undefined;\n  height: number | undefined;\n  title: string;\n  fileFormat?: FileFormat;\n}\n\nexport default (input: Input) => {\n  const {svg, title} = input;\n  const width = input.width ? input.width : 1500;\n  const height = input.height ? input.height : 1500;\n  const canvas = document.createElement('canvas');\n  if (canvas && svg) {\n    const img = new Image();\n    const serializer = new XMLSerializer();\n    const svgStr = serializer.serializeToString(svg);\n\n    img.src = 'data:image/svg+xml;base64,' + window.btoa(svgStr);\n    img.width = width;\n    img.height = height;\n\n    canvas.width = width;\n    canvas.height = height;\n    const canvasContext = canvas.getContext('2d');\n\n    let url = '';\n    img.onload = function() {\n      if (canvasContext) {\n        canvasContext.drawImage(img, 0, 0, width, height);\n      }\n      url = canvas.toDataURL('image/png');\n\n      const fileFormat = input.fileFormat !== undefined ? input.fileFormat : FileFormat.PNG;\n      const a = document.createElement('a');\n      if (fileFormat === FileFormat.SVG) {\n        a.href = img.src;\n      } else {\n        a.href = url;\n      }\n      a.download = title +'.' + fileFormat;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      document.body.removeChild(img);\n    };\n\n    document.body.appendChild(img);\n  }\n};","import React from 'react';\nimport styled from 'styled-components/macro';\n\nconst Root = styled.div`\n  margin-top: 3rem;\n  max-width: 350px;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.85rem;\n`;\n\ninterface ColorScaleBarProps {\n  maxColor: string;\n  minColor: string;\n}\n\nconst LabelContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0.4rem;\n`;\n\nconst ColorScaleBar = styled.div<ColorScaleBarProps>`\n  height: 1rem;\n  width: 100%;\n  margin-bottom: 1rem;\n  background: linear-gradient(\n    90deg,\n    ${({minColor}) => minColor} 0%,\n    ${({maxColor}) => maxColor} 100%\n  );\n`;\n\nconst ColorScaleBarCustom = styled.div`\n  height: 1rem;\n  width: 100%;\n  margin-bottom: 1rem;\n  transition: all 0.2s ease;\n`;\n\ninterface BaseProps {\n  title: string;\n  maxLabel: string | number;\n  minLabel: string | number;\n  rootStyles?: React.CSSProperties;\n}\n\n\ntype Props = BaseProps & ({\n  maxColor: string;\n  minColor: string;\n  gradientString?: undefined;\n} | {\n  maxColor?: undefined;\n  minColor?: undefined;\n  gradientString: string;\n});\n\nconst Legend = (props: Props) => {\n  const { maxLabel, minLabel, title, rootStyles } = props;\n\n  const gradientBar = props.minColor && props.maxColor ? (\n    <ColorScaleBar\n      minColor={props.minColor}\n      maxColor={props.maxColor}\n    />\n  ) : (\n    <ColorScaleBarCustom\n      style={{background: props.gradientString}}\n    />\n  );\n\n  return (\n    <Root style={rootStyles}>\n      <LabelContainer>\n        <div>{minLabel}</div>\n        <div>{maxLabel}</div>\n      </LabelContainer>\n      {gradientBar}\n      <div>{title}</div>\n    </Root>\n  );\n};\n\nexport default Legend;","import React from 'react';\nimport styled from 'styled-components/macro';\n\nconst Root = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst LegendItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  font-size: 0.6rem;\n  width: 15%;\n  margin-right: 0.4rem;\n`;\n\nconst LegendBlock = styled.div`\n  width: 1rem;\n  height: 1rem;\n  border: solid 3px transparent;\n  margin-right: 0.6rem;\n  flex-shrink: 0;\n`;\n\nconst Label = styled.div`\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\ninterface LegendDatum {\n  label: string;\n  fill: string | undefined;\n  stroke: string | undefined;\n}\n\ninterface Props {\n  legendList: LegendDatum[];\n  rootStyles?: React.CSSProperties;\n  itemStyles?: React.CSSProperties;\n  labelStyles?: React.CSSProperties;\n}\n\nconst Legend = ({legendList, rootStyles, itemStyles, labelStyles}: Props) => {\n\n  const legendItems = legendList.map(({label, fill, stroke}) => (\n      <LegendItem key={label + fill + stroke}  title={label} style={itemStyles}>\n        <LegendBlock\n          style={{\n            backgroundColor: fill,\n            borderColor: stroke,\n          }}\n        />\n        <Label style={labelStyles}>{label}</Label>\n      </LegendItem>\n  ));\n\n  return (\n    <Root style={rootStyles}>\n      {legendItems}\n    </Root>\n  );\n};\n\nexport default Legend;","import React from 'react';\nimport styled from 'styled-components';\nimport {lighten} from 'polished';\n\nconst Root = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr;\n  grid-column-gap: 1rem;\n  font-size: 0.85rem;\n  margin-top: 3rem;\n`;\n\nconst ListContainer = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst ListItem = styled.li<{color: string}>`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.55rem;\n\n  &::before {\n    content: '';\n    width: 0.75rem;\n    height: 0.75rem;\n    border-radius: 2000px;\n    background-color: ${({color}) => color};\n    margin-right: 0.6rem;\n    flex-shrink: 0;\n  }\n`;\n\nconst HighlightedItem = styled(ListItem)`\n  margin-left: auto;\n\n  &::before {\n    border: solid 0.6rem ${({color}) => lighten(1, color)};\n  }\n`;\n\ninterface LegendItem {\n  color: string;\n  label: string;\n}\n\ninterface Props {\n  items: LegendItem[];\n  highlighted?: LegendItem;\n}\n\nconst HowToReadDots = ({items, highlighted}: Props) => {\n  const legendItems = items.map(({color, label}) => <ListItem color={color} key={label + color}>{label}</ListItem>);\n  const highlightedItem = highlighted ? (\n    <HighlightedItem color={highlighted.color}>{highlighted.label}</HighlightedItem>\n  ) : null;\n  return (\n    <Root>\n      <ListContainer>\n        {legendItems}\n      </ListContainer>\n      {highlightedItem}\n    </Root>\n  );\n};\n\nexport default HowToReadDots;","import { ExtendedFeature, scaleOrdinal, select } from 'd3';\nimport React, {useState, useEffect, useRef} from 'react';\nimport styled from 'styled-components/macro';\nimport createScatterPlot, {Datum as ScatterPlotDatum} from './dataViz/scatterPlot';\nimport createBarChart, {\n  Datum as BarChartDatum,\n  LabelPlacement,\n} from './dataViz/barChart';\nimport createClusterBarChart, {Datum as ClusterBarChartDatum} from './dataViz/clusterBarChart';\nimport createRadarChart, {\n  Datum as RadarChartDatum,\n  RadarChartOptions,\n  RadarChartConfig,\n} from './dataViz/radarChart';\nimport createGeoMap, {GeoJsonCustomProperties} from './dataViz/geoMap';\nimport creatLineChart, {\n  Datum as LineChartDatum,\n  Coords,\n  LabelAnchor,\n  LabelPosition,\n  AnimationDirection,\n} from './dataViz/lineChart';\nimport createTreeMap, {RootDatum, LeafDatum} from './dataViz/treeMap';\nimport createStackChart, {Datum as StackChartDatum, StackChartConfig} from './dataViz/stackChart';\nimport createClusterChart, {Datum as ClusterChartDatum} from './dataViz/clusterChart';\nimport createBoxAndWhiskersChart, {Datum as BoxAndWhiskersChartDatum} from './dataViz/boxAndWhiskers';\nimport {darken} from 'polished';\nimport downloadImage, { FileFormat } from './dataViz/downloadImage';\nimport { CSVLink } from 'react-csv';\nimport DownloadSVGURL from './dataViz/assets/download.svg';\nimport DataSVGURL from './dataViz/assets/data.svg';\nimport debounce from 'lodash/debounce';\nimport {\n  baseColor,\n  secondaryFont,\n  tertiaryColor,\n  defaultPaletteColors,\n  defaultDivergentColors,\n  defaultCoolChloropleth,\n  defaultHotChloropleth,\n  formatNumber,\n  adaptLabelFontSize,\n} from './dataViz/Utils';\nimport ColorScaleLegend from './dataViz/ColorScaleLegend';\nimport HorizontalLegend from './dataViz/HorizontalLegend';\nimport HowToReadDots from './dataViz/HowToReadDots';\nimport Legend from './dataViz/Legend';\n\nconst Root = styled.div`\n  width: 100%;\n  margin: auto;\n`;\n\nconst SizingElm = styled.div`\n  height: 450px;\n  width: 100%;\n\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst Tooltip = styled.div`\n  position: absolute;\n  text-align: left;\n  display: none;\n  padding: 8px 12px;\n  background: #fff;\n  border-radius: 4px;\n  color: #333;\n  pointer-events: none;\n  box-shadow: 0px 0px 3px -1px #b5b5b5;\n  border: solid 1px gray;\n  max-width: 300px;\n  transform: translateY(-100%);\n  z-index: 1000;\n`;\n\nconst DownloadButtonsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst downloadButtonStyles = `\n  background-color: #ecf0f2;\n  font-family: ${secondaryFont};\n  padding: 0.5rem 0.75rem;\n  font-size: 0.6875rem;\n  color: ${baseColor};\n  display: flex;\n  align-items: center;\n  margin: 0;\n\n  &:hover {\n    background-color: ${darken(0.04, '#ecf0f2')};\n  }\n`;\n\nconst DownloadImageButton = styled.button`\n  ${downloadButtonStyles};\n`;\nconst DownloadDataButton = styled(CSVLink)`\n  ${downloadButtonStyles};\n  text-decoration: none;\n`;\n\nconst SvgIcon = styled.img`\n  width: 0.9rem;\n  margin-right: 0.3rem;\n`;\n\nconst ErrorMessage = styled.p`\n  width: 100%;\n  min-height: 400px;\n  background-color: ${tertiaryColor};\n  padding: 1rem;\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Caption = styled.p`\n  text-align: center;\n  font-style: italic;\n  font-size: 0.8rem;\n`;\n\nexport enum VizType {\n  ScatterPlot = 'ScatterPlot',\n  BarChart = 'BarChart',\n  ClusterBarChart = 'ClusterBarChart',\n  RadarChart = 'RadarChart',\n  GeoMap = 'GeoMap',\n  LineChart = 'LineChart',\n  TreeMap = 'TreeMap',\n  StackChart = 'StackChart',\n  ClusterChart = 'ClusterChart',\n  BoxAndWhiskersChart = 'BoxAndWhiskersChart',\n  Error = 'Error',\n}\n\ninterface BaseProps {\n  id: string;\n  vizType: VizType;\n  jsonToDownload?: object[];\n  enablePNGDownload?: boolean;\n  enableSVGDownload?: boolean;\n  chartTitle?: string;\n  chartCaption?: string;\n  rootStyles?: React.CSSProperties;\n  height?: number | string;\n  labelFont?: string;\n  triggerGoogleAnalyticsEvent?: (category: string, action: string, label?: string, value?: number) => void;\n}\n\ntype Props = BaseProps & (\n  {\n    vizType: VizType.Error;\n    message: string;\n  } | {\n    vizType: VizType.ScatterPlot;\n    data: ScatterPlotDatum[];\n    axisLabels?: {left?: string, bottom?: string};\n    axisMinMax?: {\n      minX?: number,\n      maxX?: number,\n      minY?: number,\n      maxY?: number,\n    };\n    showAverageLines?: boolean;\n    averageLineText?: {left?: string, bottom?: string};\n    quadrantLabels?: {I?: string, II?: string, III?: string, IV?: string};\n  } |\n  {\n    vizType: VizType.BarChart;\n    data: BarChartDatum[][];\n    axisLabels?: {left?: string, bottom?: string};\n      axisMinMax?: {\n      minY?: number,\n      maxY?: number,\n    };\n    hideAxis?: {\n      left?: boolean;\n      bottom?: boolean;\n    }\n    averageLines?: {\n      value: number,\n      label?: string;\n      labelPlacement?: LabelPlacement;\n      strokeWidth?: number;\n      strokeDasharray?: number;\n      strokeColor?: string;\n    }[]\n  } |\n  {\n    vizType: VizType.ClusterBarChart;\n    data: ClusterBarChartDatum[];\n    axisLabels?: {left?: string, bottom?: string};\n  } |\n  {\n    vizType: VizType.RadarChart;\n    data: RadarChartDatum[][];\n    color: {start: string, end: string};\n    maxValue: number;\n  } |\n  {\n    vizType: VizType.GeoMap;\n    data: ExtendedFeature<any, GeoJsonCustomProperties>;\n    minColor: string;\n    maxColor: string;\n  }|\n  {\n    vizType: VizType.LineChart;\n    data: LineChartDatum[];\n    axisLabels?: {left?: string, bottom?: string};\n    axisMinMax?: {\n      minX?: number,\n      maxX?: number,\n      minY?: number,\n      maxY?: number,\n    };\n    showGridLines?: {\n      xAxis?: boolean;\n      yAxis?: boolean;\n    }\n    formatAxis?: {\n      x?: (n: number) => string;\n      y?: (n: number) => string;\n    }\n    tickCount?: {\n      x?: number;\n      y?: number;\n    }\n    animateAxis?: {\n      animationDuration: number,\n      startMinX: number,\n      startMaxX: number,\n      startMinY: number,\n      startMaxY: number,\n    };\n  } | {\n    vizType: VizType.TreeMap;\n    data: RootDatum;\n  } | {\n    vizType: VizType.StackChart;\n    config: StackChartConfig;\n    data: StackChartDatum[];\n    enableBrushZoom?: boolean;\n  } | {\n    vizType: VizType.ClusterChart;\n    data: ClusterChartDatum[];\n    hideLabels?: boolean;\n    circleSpacing?: number;\n    max?: number;\n  }| {\n    vizType: VizType.BoxAndWhiskersChart;\n    data: BoxAndWhiskersChartDatum[];\n  }\n);\n\nexport const DataViz = (props: Props) => {\n  const {\n    id, enablePNGDownload, enableSVGDownload, jsonToDownload, rootStyles,\n    triggerGoogleAnalyticsEvent,\n  } = props;\n  const sizingNodeRef = useRef<HTMLDivElement | null>(null);\n  const svgNodeRef = useRef<any>(null);\n  const tooltipNodeRef = useRef<any>(null);\n\n  const [windowWidth, setWindowWidth] = useState<number>(window.innerWidth);\n\n  useEffect(() => {\n    const updateWindowWidth = debounce(() => {\n      setWindowWidth(window.innerWidth);\n    }, 500);\n    window.addEventListener('resize', updateWindowWidth);\n    return () => {\n      window.removeEventListener('resize', updateWindowWidth);\n    };\n  }, []);\n\n\n  useEffect(() => {\n    let svgNode: HTMLDivElement | null = null;\n    if (svgNodeRef && svgNodeRef.current && sizingNodeRef && sizingNodeRef.current &&\n        tooltipNodeRef && tooltipNodeRef.current) {\n      const sizingNode = sizingNodeRef.current;\n      svgNode = svgNodeRef.current;\n      const svg = select(svgNode);\n      const tooltip = select(tooltipNodeRef.current);\n      if (props.vizType === VizType.ScatterPlot) {\n        createScatterPlot({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          axisLabels: props.axisLabels,\n          axisMinMax: props.axisMinMax,\n          showAverageLines: props.showAverageLines,\n          averageLineText: props.averageLineText,\n          quadrantLabels: props.quadrantLabels,\n        });\n      } else if (props.vizType === VizType.BarChart) {\n        createBarChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          axisLabels: props.axisLabels,\n          axisMinMax: props.axisMinMax,\n          hideAxis: props.hideAxis,\n          averageLines: props.averageLines,\n        });\n      } else if (props.vizType === VizType.RadarChart) {\n        let width: number;\n        let height: number;\n        if (sizingNode.clientWidth > sizingNode.clientHeight) {\n          width = sizingNode.clientHeight;\n          height = sizingNode.clientHeight;\n        } else {\n          width = sizingNode.clientWidth;\n          height = sizingNode.clientWidth;\n        }\n        createRadarChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, options: {\n            width, height,\n            color: scaleOrdinal().range([props.color.start, props.color.end]),\n            maxValue: props.maxValue,\n          },\n        });\n      } else if (props.vizType === VizType.GeoMap) {\n        createGeoMap({\n          svg, tooltip, data: props.data, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          }, minColor: props.minColor, maxColor: props.maxColor,\n        });\n      } else if (props.vizType === VizType.ClusterBarChart) {\n        createClusterBarChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          axisLabels: props.axisLabels,\n        });\n      } else if (props.vizType === VizType.LineChart) {\n        creatLineChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          axisLabels: props.axisLabels,\n          axisMinMax: props.axisMinMax,\n          showGridLines: props.showGridLines,\n          formatAxis: props.formatAxis,\n          tickCount: props.tickCount,\n          animateAxis: props.animateAxis,\n        });\n      } else if (props.vizType === VizType.TreeMap) {\n        createTreeMap({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n        });\n      } else if (props.vizType === VizType.StackChart) {\n        createStackChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, config: props.config, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          enableBrushZoom: props.enableBrushZoom,\n        });\n      } else if (props.vizType === VizType.ClusterChart) {\n        createClusterChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n          hideLabels: props.hideLabels,\n          circleSpacing: props.circleSpacing,\n          max: props.max,\n        });\n      } else if (props.vizType === VizType.BoxAndWhiskersChart) {\n        createBoxAndWhiskersChart({\n          svg, tooltip, data: props.data, labelFont: props.labelFont, size: {\n            width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n          },\n        });\n      }\n    }\n    return () => {\n      if (svgNode) {\n        svgNode.innerHTML = '';\n      }\n    };\n  }, [svgNodeRef, sizingNodeRef, windowWidth, props]);\n\n  const handleDownloadImage = (fileFormat: FileFormat) => {\n    const svgNode = svgNodeRef ? svgNodeRef.current : null;\n    const sizingNode = sizingNodeRef ? sizingNodeRef.current : null;\n    const highResMultiplier = 3;\n    let width: number | undefined;\n    let height: number | undefined;\n    if (props.vizType === VizType.RadarChart && sizingNode) {\n      if (sizingNode.clientWidth > sizingNode.clientHeight) {\n        width = sizingNode.clientHeight * highResMultiplier;\n        height = sizingNode.clientHeight * highResMultiplier;\n      } else {\n        width = sizingNode.clientWidth * highResMultiplier;\n        height = sizingNode.clientWidth * highResMultiplier;\n      }\n    } else {\n      width = sizingNode && sizingNode.clientWidth ? sizingNode.clientWidth * highResMultiplier : undefined;\n      height = sizingNode && sizingNode.clientHeight ? sizingNode.clientHeight * highResMultiplier : undefined;\n    }\n    const title = props.chartTitle ? props.chartTitle : 'chart';\n    downloadImage({svg: svgNode, width, height, title, fileFormat});\n    if (triggerGoogleAnalyticsEvent) {\n      triggerGoogleAnalyticsEvent(id, 'download-' + fileFormat, title);\n    }\n  };\n\n  const downloadPNGButton = enablePNGDownload !== true ? null : (\n    <DownloadImageButton\n      onClick={() => handleDownloadImage(FileFormat.PNG)}\n    >\n      <SvgIcon src={DownloadSVGURL} alt={'Download PNG'} />\n      Download PNG\n    </DownloadImageButton>\n  );\n  const downloadSVGButton = enableSVGDownload !== true ? null : (\n    <DownloadImageButton\n      onClick={() => handleDownloadImage(FileFormat.SVG)}\n    >\n      <SvgIcon src={DownloadSVGURL} alt={'Download SVG'} />\n      Download SVG\n    </DownloadImageButton>\n  );\n  let downloadDataButton: React.ReactElement<any> | null;\n  if (jsonToDownload !== undefined) {\n    const filename = props.chartTitle ? props.chartTitle + '.csv' : 'data.csv';\n    const onClick = () => {\n      if (triggerGoogleAnalyticsEvent) {\n        triggerGoogleAnalyticsEvent(id, 'download-csv', props.chartTitle);\n      }\n    };\n    downloadDataButton = (\n      <DownloadDataButton\n        data={jsonToDownload}\n        filename={filename}\n        onClick={onClick}\n      >\n        <SvgIcon src={DataSVGURL} alt={'Download Data'} />\n        Download Data\n      </DownloadDataButton>\n    );\n  } else {\n    downloadDataButton = null;\n  }\n\n  const downloadButtons = downloadPNGButton !== null || downloadSVGButton !== null || downloadDataButton !== null ? (\n    <DownloadButtonsContainer style={{marginTop: props.vizType !== VizType.RadarChart ? '1rem' : undefined}}>\n      {downloadPNGButton}\n      {downloadSVGButton}\n      {downloadDataButton}\n    </DownloadButtonsContainer>\n  ) : null;\n\n  if (props.vizType === VizType.Error) {\n    return (\n      <Root>\n        <ErrorMessage>\n          {props.message}\n        </ErrorMessage>\n      </Root>\n    );\n  } else {\n    const caption = props.chartCaption ? (\n      <Caption>{props.chartCaption}</Caption>\n    ) : null;\n    return (\n      <Root style={rootStyles}>\n        <SizingElm ref={sizingNodeRef} style={{height: props.height}}>\n          <svg ref={svgNodeRef} key={id + windowWidth + 'svg'} />\n        </SizingElm>\n        {caption}\n        {downloadButtons}\n        <Tooltip ref={tooltipNodeRef} key={id + windowWidth + 'tooltip'} />\n      </Root>\n    );\n  }\n};\nexport {\n  ScatterPlotDatum,\n  BarChartDatum,\n  ClusterBarChartDatum,\n  RadarChartDatum,\n  LineChartDatum,\n  StackChartDatum,\n  ClusterChartDatum,\n  BoxAndWhiskersChartDatum,\n  LabelPlacement,\n  FileFormat,\n  GeoJsonCustomProperties,\n  Coords,\n  LabelAnchor,\n  LabelPosition,\n  AnimationDirection,\n  RadarChartOptions,\n  RadarChartConfig,\n  StackChartConfig,\n  RootDatum,\n  LeafDatum,\n  defaultPaletteColors,\n  defaultDivergentColors,\n  defaultCoolChloropleth,\n  defaultHotChloropleth,\n  formatNumber,\n  adaptLabelFontSize,\n  ColorScaleLegend,\n  HorizontalLegend,\n  HowToReadDots,\n  Legend,\n}\nexport default DataViz;\n\n","import React from 'react';\nimport styled from 'styled-components/macro';\n\nconst Root = styled.ul`\n  list-style: none;\n`;\n\nconst LegendItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  font-size: 1rem;\n`;\n\nconst LegendBlock = styled.div`\n  width: 1rem;\n  height: 1rem;\n  margin-right: 0.5rem;\n  border: solid 3px transparent;\n`;\n\ninterface LegendDatum {\n  label: string;\n  fill: string | undefined;\n  stroke: string | undefined;\n}\n\ninterface Props {\n  legendList: LegendDatum[];\n}\n\nconst Legend = ({legendList}: Props) => {\n\n  const legendItems = legendList.map(({label, fill, stroke}) => (\n    <LegendItem key={label + fill + stroke}>\n      <LegendBlock\n        style={{\n          backgroundColor: fill,\n          borderColor: stroke,\n        }}\n      />\n      {label}\n    </LegendItem>\n  ));\n\n  return (\n    <Root>\n      {legendItems}\n    </Root>\n  );\n};\n\nexport default Legend;","import * as d3 from 'd3';\n\nexport interface Datum {\n  label: string;\n  x: number;\n  y: number;\n  fill?: string;\n  radius?: number;\n  tooltipContent?: string;\n  tooltipContentOnly?: boolean;\n  onClick?: () => void;\n  highlighted?: boolean;\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[];\n  size: Dimensions;\n  axisLabels?: {left?: string, bottom?: string};\n  axisMinMax?: {\n    minX?: number,\n    maxX?: number,\n    minY?: number,\n    maxY?: number,\n  };\n  showAverageLines?: boolean;\n  averageLineText?: {left?: string, bottom?: string};\n  quadrantLabels?: {I?: string, II?: string, III?: string, IV?: string};\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const {\n    svg, tooltip, data, size, axisLabels, axisMinMax, showAverageLines,\n    averageLineText, quadrantLabels, labelFont,\n  } = input;\n\n  const margin = {top: 30, right: 30, bottom: 60, left: 60};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  // append the svg object to the body of the page\n  svg\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom);\n\n  const container = svg\n    .append('g')\n      .attr('transform',\n            'translate(' + margin.left + ',' + margin.top + ')');\n\n  const allXValues = data.map(({x}) => x);\n  const allYValues = data.map(({y}) => y);\n\n  const rawMinX = axisMinMax && axisMinMax.minX !== undefined ? axisMinMax.minX : d3.min(allXValues);\n  const rawMaxX = axisMinMax && axisMinMax.maxX !== undefined ? axisMinMax.maxX : d3.max(allXValues);\n  const rawMinY = axisMinMax && axisMinMax.minY !== undefined ? axisMinMax.minY : d3.min(allYValues);\n  const rawMaxY = axisMinMax && axisMinMax.maxY !== undefined ? axisMinMax.maxY : d3.max(allYValues);\n\n  const minScaleBuffer = axisMinMax ? 1 : 0.9;\n  const maxScaleBuffer = axisMinMax ? 1 : 1.1;\n\n  const minX = rawMinX ? Math.floor(rawMinX * minScaleBuffer) : 0;\n  const maxX = rawMaxX ? Math.ceil(rawMaxX * maxScaleBuffer) : 0;\n  const minY = rawMinY ? Math.floor(rawMinY * minScaleBuffer) : 0;\n  const maxY = rawMaxY ? Math.ceil(rawMaxY * maxScaleBuffer) : 0;\n\n\n\n  // Add X axis\n  const xScale = d3.scaleLinear()\n    .domain([minX, maxX])\n    .range([ 0, width ]);\n\n  container.append('g')\n    .attr('transform', 'translate(0,' + height + ')')\n    .call(d3.axisBottom(xScale));\n\n  // Add Y axis\n  const yScale = d3.scaleLinear()\n    .domain([minY, maxY])\n    .range([ height, 0]);\n  container.append('g')\n    .call(d3.axisLeft(yScale));\n\n  // gridlines in x axis function\n  const makeGridlinesX: any = () => d3.axisBottom(xScale).ticks(10);\n\n  // gridlines in y axis function\n  const makeGridlinesY: any = () => d3.axisLeft(yScale).ticks(10);\n\n  // add the X gridlines\n  container.append('g')\n      .attr('class', 'grid')\n      .attr('transform', 'translate(0,' + height + ')')\n      .style('opacity', '0.25')\n      .style('stroke-dasharray', '3 1')\n      .call(makeGridlinesX()\n          .tickSize(-height)\n          .tickFormat(''),\n      );\n\n  // add the Y gridlines\n  container.append('g')\n      .attr('class', 'grid')\n      .style('opacity', '0.25')\n      .style('stroke-dasharray', '3 1')\n      .call(makeGridlinesY()\n          .tickSize(-width)\n          .tickFormat(''),\n      );\n\n  if (showAverageLines) {\n    container.append('line')\n      .attr('x1',xScale(minX))\n      .attr('x2',xScale(maxX))\n      .attr('y1',yScale(maxY / 2) + 0.5)\n      .attr('y2',yScale(maxY / 2) + 0.5)\n      .attr('stroke-width', '1px')\n      .style('pointer-events', 'none')\n      .attr('stroke', '#9e9e9e');\n    container.append('line')\n      .attr('x1',xScale(maxX / 2) + 0.5)\n      .attr('x2',xScale(maxX / 2) + 0.5)\n      .attr('y1',yScale(minY))\n      .attr('y2',yScale(maxY))\n      .attr('stroke-width', '1px')\n      .style('pointer-events', 'none')\n      .attr('stroke', '#9e9e9e');\n  }\n\n  if (averageLineText) {\n    if (averageLineText.left) {\n      container.append('text')\n        .attr('x',xScale(minX) + 4)\n        .attr('y',yScale(maxY / 2) + 12)\n        .style('opacity', 0.8)\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .style('font-size', '12px')\n        .style('pointer-events', 'none')\n        .text(averageLineText.left);\n    }\n    if (averageLineText.bottom) {\n      container.append('text')\n        .attr('x',xScale(maxX / 2) + 4)\n        .attr('y',yScale(minY) - 6)\n        .style('opacity', 0.8)\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .style('font-size', '12px')\n        .style('pointer-events', 'none')\n        .text(averageLineText.bottom);\n\n    }\n  }\n\n  const appendQuadrantLabel = (xVal: number, yVal: number, textParts: string[], textAnchor: string) => {\n    const label = container.append('text')\n        .style('text-anchor', textAnchor)\n        .style('opacity', 0.8)\n        .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n        .style('font-size', '12px')\n        .style('pointer-events', 'none')\n        .style('dominant-baseline', 'bottom')\n        .attr('x', xVal)\n        .attr('y', yVal);\n\n      label.selectAll('tspan')\n        .data(textParts)\n        .enter()\n        .append('tspan')\n        .text(d => {\n          const text = d;\n          return text !== undefined ? text : '';\n        })\n        .attr('x', xVal)\n        .attr('dx', 0)\n        .attr('dy', (_d, i) => i !== 0 ? 15 : 0);\n\n  };\n\n  if (quadrantLabels !== undefined) {\n    if (quadrantLabels.I !== undefined) {\n      const xVal = width - 4;\n      const yVal = yScale(maxY) + 12;\n      const textParts = (quadrantLabels.I as string).split('\\n');\n      appendQuadrantLabel(xVal, yVal, textParts, 'end');\n    }\n    if (quadrantLabels.II !== undefined) {\n      const xVal = xScale(minX) + 4;\n      const yVal = yScale(maxY) + 12;\n      const textParts = (quadrantLabels.II as string).split('\\n');\n      appendQuadrantLabel(xVal, yVal, textParts, 'start');\n    }\n    if (quadrantLabels.III !== undefined) {\n      const textParts = (quadrantLabels.III as string).split('\\n');\n      const xVal = xScale(minX) + 4;\n      const yVal = yScale(minY) - ((textParts.length - 1) * 15) - 6;\n      appendQuadrantLabel(xVal, yVal, textParts, 'start');\n    }\n    if (quadrantLabels.IV !== undefined) {\n      const textParts = (quadrantLabels.IV as string).split('\\n');\n      const xVal = width - 4;\n      const yVal = yScale(minY) - ((textParts.length - 1) * 15) - 6;\n      appendQuadrantLabel(xVal, yVal, textParts, 'end');\n    }\n  }\n\n  // Add dots\n  container.append('g')\n    .selectAll('dot')\n    .data(data)\n    .enter()\n    .append('circle')\n      .attr('cx', ({x}) => xScale(x))\n      .attr('cy', ({y}) => yScale(y))\n      .attr('r', ({radius}) => radius ? radius : 4)\n      .style('fill', ({fill}) => fill ? fill : '#69b3a2')\n      .style('cursor', ({onClick}) => onClick ? 'pointer' : 'default')\n      .on('mousemove', ({label, tooltipContent, tooltipContentOnly}) => {\n        if (tooltipContentOnly && tooltipContent && tooltipContent.length) {\n          tooltip.html(tooltipContent);\n        } else {\n          const content = tooltipContent === undefined || tooltipContent.length === 0\n            ? '' : `:<br />${tooltipContent}`;\n          tooltip.html(`<strong>${label}</strong>${content}`);\n\n        }\n        tooltip\n          .style('display', 'block')\n          .style('left', (d3.event.pageX + 4) + 'px')\n          .style('top', (d3.event.pageY - 4) + 'px');\n        })\n      .on('mouseout', () => {\n        tooltip\n            .style('display', 'none');\n      })\n      .on('click', ({onClick}) => onClick ? onClick() : undefined);\n\n  const highlighted = data.find(d => d.highlighted);\n  if (highlighted) {\n    // Add highlighted dot background\n    container.append('g')\n      .selectAll('dot')\n      .data([highlighted])\n      .enter()\n      .append('circle')\n        .attr('cx', ({x}) => xScale(x))\n        .attr('cy', ({y}) => yScale(y))\n        .attr('r', 16)\n        .style('fill', ({fill}) => fill ? fill : '#69b3a2')\n        .style('opacity', '0.4')\n        .style('pointer-events', 'none');\n    // Add highlighted dot over to top\n    container.append('g')\n      .selectAll('dot')\n      .data([highlighted])\n      .enter()\n      .append('circle')\n        .attr('cx', ({x}) => xScale(x))\n        .attr('cy', ({y}) => yScale(y))\n        .attr('r', ({radius}) => radius ? radius : 4)\n        .style('fill', ({fill}) => fill ? fill : '#69b3a2')\n        .style('cursor', ({onClick}) => onClick ? 'pointer' : 'default')\n        .on('mousemove', ({label, tooltipContent, tooltipContentOnly}) => {\n          if (tooltipContentOnly && tooltipContent && tooltipContent.length) {\n            tooltip.html(tooltipContent);\n          } else {\n            const content = tooltipContent === undefined || tooltipContent.length === 0\n              ? '' : `:<br />${tooltipContent}`;\n            tooltip.html(`<strong>${label}</strong>${content}`);\n\n          }\n          tooltip\n            .style('display', 'block')\n            .style('left', (d3.event.pageX + 4) + 'px')\n            .style('top', (d3.event.pageY - 4) + 'px');\n          })\n        .on('mouseout', () => {\n          tooltip\n              .style('display', 'none');\n        });\n  }\n\n\n  // append X axis label\n  svg\n    .append('text')\n    .attr('transform', `translate(${width / 2 + margin.left}, ${height + margin.bottom + (margin.top / 2)})`)\n      .style('text-anchor', 'middle')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .text(axisLabels && axisLabels.bottom ? axisLabels.bottom : '');\n\n  // append Y axis label\n  svg\n    .append('text')\n    .attr('transform', 'rotate(-90)')\n      .attr('y', margin.right / 2)\n      .attr('x', 0 - (height / 2 + margin.top))\n      .attr('dy', '0.75em')\n      .style('text-anchor', 'middle')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .text(axisLabels && axisLabels.left ? axisLabels.left : '');\n\n};\n","import * as d3 from 'd3';\n\nexport interface RadarChartOptions {\n  radius?: number;\n  width?: number;\n  height?: number;\n  factor?: number;\n  factorLegend?: number;\n  levels?: number;\n  maxValue?: number;\n  radians?: number;\n  opacityArea?: number;\n  ToRight?: number;\n  TranslateX?: number;\n  TranslateY?: number;\n  ExtraWidthX?: number;\n  ExtraWidthY?: number;\n  color?: d3.ScaleOrdinal<any, any> | any;\n}\n\nexport interface RadarChartConfig {\n  radius: number;\n  width: number;\n  height: number;\n  factor: number;\n  factorLegend: number;\n  levels: number;\n  maxValue: number;\n  radians: number;\n  opacityArea: number;\n  ToRight: number;\n  TranslateX: number;\n  TranslateY: number;\n  ExtraWidthX: number;\n  ExtraWidthY: number;\n  color: d3.ScaleOrdinal<any, any> | any;\n}\n\nexport interface Datum {\n  label: string;\n  value: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[][];\n  options?: RadarChartOptions;\n  labelFont?: string;\n}\n\nexport default ({svg, data, tooltip, options, labelFont}: Input) => {\n  // set default config\n  const config: RadarChartConfig = {\n    radius: 5,\n    width: 600,\n    height: 600,\n    factor: 1,\n    factorLegend: .85,\n    levels: 5,\n    maxValue: 100,\n    radians: 2 * Math.PI,\n    opacityArea: 0.5,\n    ToRight: 5,\n    TranslateX: 80,\n    TranslateY: 30,\n    ExtraWidthX: 100,\n    ExtraWidthY: 100,\n    color: d3.scaleOrdinal().range(['#6F257F', '#CA0D59']),\n  };\n\n  // if user input options, replace them in the config variable\n  if(options && 'undefined' !== typeof options){\n    Object.keys(options).forEach(function(key: keyof RadarChartOptions) {\n      if('undefined' !== typeof options[key]){\n        config[key] = options[key];\n      }\n    });\n  }\n\n  const margin = {top: 60, right: 60, bottom: 60, left: 60};\n  const width = config.width - margin.left - margin.right;\n  const height = config.height - margin.bottom - margin.top;\n\n  const allAxis = (data && data.length ? data[0].map(d => d.label) : []);\n  const total = allAxis.length;\n  const radius = config.factor * Math.min(width / 2, height / 2);\n\n\n  svg\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom);\n\n  const container = svg\n    .append('g')\n      .attr('transform',\n      'translate(' + margin.left + ',' + margin.top + ')');\n\n  //Circular segments\n  for(let j = 0; j < config.levels; j++) {\n    const levelFactor = config.factor * radius * ((j + 1)/config.levels);\n    container.selectAll('.levels')\n      .data(allAxis)\n      .enter()\n      .append('svg:line')\n        .attr('x1', (_d, i) => levelFactor * (1 - config.factor * Math.sin(i * config.radians / total)))\n        .attr('y1', (_d, i) => levelFactor * (1 - config.factor * Math.cos(i * config.radians / total)))\n        .attr('x2', (_d, i) => levelFactor * (1 - config.factor * Math.sin((i + 1) * config.radians / total)))\n        .attr('y2', (_d, i) => levelFactor * (1 - config.factor * Math.cos((i + 1) * config.radians / total)))\n        .attr('class', 'line')\n        .style('stroke', 'grey')\n        .style('stroke-opacity', '0.75')\n        .style('stroke-width', '0.6px')\n        .attr('transform', `translate(${width / 2 - levelFactor}, ${height / 2 - levelFactor})`);\n  }\n\n  //Text indicating at what % each level is\n  for(let j = 0; j < config.levels; j++) {\n    const levelFactor = config.factor * radius * ((j + 1) / config.levels);\n    container.selectAll('.levels')\n      .data([1]) //dummy data\n      .enter()\n      .append('svg:text')\n        .attr('x', () => levelFactor * (1 - config.factor*Math.sin(0)))\n        .attr('y', () => levelFactor * (1 - config.factor*Math.cos(0)))\n        .attr('class', 'legend')\n        .style('font-family', 'sans-serif')\n        .style('font-size', '10px')\n        .attr('transform', `translate(${width / 2 - levelFactor + config.ToRight}, ${height / 2 - levelFactor})`)\n        .attr('fill', '#737373')\n        .text( Math.round((j + 1) * config.maxValue / config.levels));\n  }\n\n  let series = 0;\n\n  const axis = container.selectAll('.axis')\n    .data(allAxis)\n    .enter()\n    .append('g')\n      .attr('class', 'axis');\n\n  axis.append('line')\n    .attr('x1', width/2)\n    .attr('y1', height  /2)\n    .attr('x2', (_d, i) => width / 2 * (1 - config.factor * Math.sin(i * config.radians / total)))\n    .attr('y2', (_d, i) => height / 2 * (1 - config.factor * Math.cos(i * config.radians / total)))\n    .attr('class', 'line')\n    .style('stroke', 'grey')\n    .style('stroke-width', '1px');\n\n  data.forEach((d) => {\n    const dataValues = d.map(({value}, i) => [\n      width/2*(1-(parseFloat(Math.max(value, 0).toString())/config.maxValue)*config.factor*Math.sin(i*config.radians/total)),\n      height/2*(1-(parseFloat(Math.max(value, 0).toString())/config.maxValue)*config.factor*Math.cos(i*config.radians/total)),\n    ]);\n\n    // push the first dataValue back to make a complete closed path\n    dataValues.push(dataValues[0]);\n\n      container.selectAll('.area')\n      .data([dataValues])\n      .enter()\n      .append('polygon')\n        .attr('class', 'radar-chart-serie'+series)\n        .style('stroke-width', '2px')\n        .style('stroke', config.color(series))\n        .attr('points', point => {\n          let value = '';\n          for(const p of point){\n            value = value + p[0] + ',' + p[1] + ' ';\n          }\n          return value;\n        })\n        .style('fill', config.color(series))\n        .style('fill-opacity', config.opacityArea)\n        .on('mouseover', function () {\n          const shape = 'polygon.'+d3.select(this).attr('class');\n          container.selectAll('polygon')\n          .transition()\n          .style('fill-opacity', 0.1);\n          container.selectAll(shape)\n          .transition()\n          .style('fill-opacity', .7);\n        })\n        .on('mouseout', () => {\n          container.selectAll('polygon')\n          .transition()\n          .style('fill-opacity', config.opacityArea);\n        });\n\n    series++;\n  });\n\n  series = 0;\n\n  data.forEach(d => {\n\n    container.selectAll('.nodes')\n      .data(d)\n      .enter()\n      .append('svg:circle')\n        .attr('class', 'radar-chart-serie' + series)\n        .attr('r', config.radius)\n        .attr('alt', j => Math.max(j.value, 0))\n        .attr('cx', (j, i) => width/2*(1-(Math.max(j.value, 0)/config.maxValue)*config.factor*Math.sin(i*config.radians/total)))\n        .attr('cy', (j, i) => height  /2*(1-(Math.max(j.value, 0)/config.maxValue)*config.factor*Math.cos(i*config.radians/total)))\n        .attr('data-id', j => j.label)\n        .style('fill', '#fff')\n        .style('stroke-width', '2px')\n        .style('stroke', config.color(series)).style('fill-opacity', .9)\n        .on('mousemove', p => {\n          tooltip\n            .style('left', d3.event.pageX + 'px')\n            .style('top', d3.event.pageY + 'px')\n            .style('display', 'block')\n            .html(`<strong>${p.label}</strong>: ${p.value}`);\n        })\n        .on('mouseout', function(){ tooltip.style('display', 'none');});\n\n    series++;\n  });\n\n  const labels = axis.append('text')\n    .style('font-size', '11px')\n    .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n    .attr('text-anchor', 'middle')\n    .attr('dy', '1.5em')\n    .attr('transform', (_d, i) => {\n      if (i === 0) {\n        return 'translate(0, -12)';\n      } else if (i === 1 && total === 4) {\n        return 'translate(4, 0)';\n      } else {\n        return 'translate(0, 0)';\n      }\n    })\n    .attr('class', 'legend')\n    .attr('x', (_d, i) => width / 2 * (1 - config.factorLegend * Math.sin(i * config.radians / total)) -60 * Math.sin(i * config.radians/total))\n    .attr('y', (_d, i) => height / 2 * (1 - Math.cos(i * config.radians / total)) - 20 * Math.cos(i *config.radians / total));\n\n  const seperator = '|||||';\n\n  labels.selectAll('tspan')\n    .data((d, i) => {\n      const res = d.split('\\n');\n      const arr = res.map(text => `${i}${seperator}${text}`);\n      return arr;\n    })\n    .enter()\n    .append('tspan')\n    .text(d => {\n      const text = d.split(seperator).pop();\n      return text !== undefined ? text : '';\n    })\n    .attr('x', (d) => {\n      const originalI = d.split(seperator).shift();\n      const i = originalI !== undefined ? parseInt(originalI, 10) : 0;\n      return width / 2 * (1 - config.factorLegend * Math.sin(i * config.radians / total)) -60 * Math.sin(i * config.radians/total);\n    })\n    .attr('dx', 0)\n    .attr('dy', (_d, i) => i !== 0 ? 15 : 0);\n\n};\n\n","import * as d3 from 'd3';\nimport { baseColor } from './Utils';\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\nexport interface GeoJsonCustomProperties {\n  percent: number;\n  tooltipContent?: string;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: d3.ExtendedFeature<any, GeoJsonCustomProperties>;\n  size: Dimensions;\n  minColor: string;\n  maxColor: string;\n}\n\nexport default (input: Input) => {\n  const { svg, data, size, tooltip, minColor, maxColor } = input;\n\n  const margin = {top: 30, right: 30, bottom: 30, left: 30};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  const center = d3.geoCentroid(data);\n  let scale  = 150;\n  let offset: [number, number] = [width/2, height/2];\n  let projection = d3.geoMercator().scale(scale).center(center)\n        .translate(offset);\n\n  // create the path\n  let path = d3.geoPath().projection(projection);\n\n  // using the path determine the bounds of the current map and use\n  // these to determine better values for the scale and translation\n  const bounds  = path.bounds(data);\n  const hscale  = scale*width  / (bounds[1][0] - bounds[0][0]);\n  const vscale  = scale*height / (bounds[1][1] - bounds[0][1]);\n  scale   = (hscale < vscale) ? hscale : vscale;\n  offset  = [width - (bounds[0][0] + bounds[1][0])/2,\n                    height - (bounds[0][1] + bounds[1][1])/2];\n\n  // new projection\n  projection = d3.geoMercator().center(center)\n    .scale(scale).translate(offset);\n  path = path.projection(projection);\n\n  const allValues: number[] = (data as any).features.map((node: any) => node.properties.percent);\n\n  const rawMinValue = d3.min(allValues);\n  const rawMaxValue = d3.max(allValues);\n\n  const minValue = rawMinValue ? Math.floor(rawMinValue) : 0;\n  const maxValue = rawMaxValue ? Math.ceil(rawMaxValue) : 0;\n\n  const colorScale = d3.scaleLinear<string>().domain([minValue, maxValue]).range([minColor, maxColor]);\n\n  svg\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom);\n\n  const container = svg\n    .append('g')\n      .attr('transform',\n      'translate(' + margin.left + ',' + margin.top + ')');\n\n  container.selectAll('path')\n     .data((data as any).features)\n      .enter()\n     .append('path')\n     .attr('d', path)\n     .attr('stroke-width',1)\n     .attr('stroke',baseColor)\n     .attr('class','pathClass')\n     .on('mousemove', function(d: any) {\n       if (d.properties.tooltipContent) {\n        tooltip\n          .style('left', d3.event.pageX + 'px')\n          .style('top', d3.event.pageY + 'px')\n          .style('display', 'block')\n          .html(d.properties.tooltipContent);\n       }\n      })\n      .on('mouseout', function(){\n        tooltip.style('display', 'none');\n      });\n\n  container.selectAll('.pathClass').attr('fill', (d: any) => colorScale(d.properties.percent));\n\n};\n","import * as d3 from 'd3';\n\nexport interface Datum {\n  groupName: string;\n  x: string;\n  y: number;\n  fill?: string;\n  tooltipContent?: string;\n  tooltipContentOnly?: boolean;\n  onClick?: () => void;\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[];\n  size: Dimensions;\n  axisLabels?: {left?: string, bottom?: string};\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const { svg, size, axisLabels, data, tooltip, labelFont } = input;\n\n  const margin = {\n    top: 30, right: 30,\n    bottom: axisLabels && axisLabels.bottom ? 60 : 30,\n    left: 30};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n  const x = d3.scaleBand().rangeRound([0, width])\n    .padding(0.1),\n    y = d3.scaleLinear().rangeRound([height, 0]);\n\n  const g = svg.append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n  const yMax = d3.max(data, function(d) {\n    return d.y;\n  });\n  const yMaxDomain = yMax ? yMax : 0;\n  x.domain(data.map(function(d) {\n    return d.x;\n  }));\n  y.domain([0, yMaxDomain]);\n\n  const x1 = d3.scaleBand()\n    .rangeRound([0, x.bandwidth()])\n    .padding(0.05)\n    .domain(data.map(function(d) {\n      return d.groupName;\n    }));\n\n  color.domain(data.map(function(d) {\n    return d.groupName;\n  }));\n\n  const groups = g.selectAll(null)\n    .data(data)\n    .enter()\n    .append('g')\n    .attr('transform', function(d) {\n      return 'translate(' + x(d.x) + ',0)';\n    });\n\n  groups.selectAll(null)\n    .data(function(d) {\n      return [d];\n    })\n    .enter()\n    .append('rect')\n    .attr('x', function(d) {\n      const xVal = x1(d.groupName);\n      return xVal ? xVal : 0;\n    })\n    .attr('y', function(d) {\n      return y(d.y);\n    })\n    .attr('width', x1.bandwidth())\n    .attr('height', function(d) {\n      return height - y(d.y);\n    })\n    .attr('fill', d => d.fill ? d.fill : color(d.groupName))\n    .on('mousemove', ({groupName, x: valueName, tooltipContent, tooltipContentOnly}) => {\n      if (tooltipContentOnly && tooltipContent && tooltipContent.length) {\n        tooltip.html(tooltipContent);\n      } else {\n        const content = tooltipContent === undefined || tooltipContent.length === 0\n          ? '' : `:<br />${tooltipContent}`;\n        tooltip.html(`<strong>${groupName}, ${valueName}</strong>${content}`);\n      }\n      tooltip\n        .style('display', 'block')\n        .style('left', (d3.event.pageX + 4) + 'px')\n        .style('top', (d3.event.pageY - 4) + 'px');\n      })\n    .on('mouseout', () => {\n      tooltip\n          .style('display', 'none');\n    });\n\n  g.append('g')\n    .attr('class', 'axis')\n    .attr('transform', 'translate(0,' + height + ')')\n    .call(d3.axisBottom(x));\n\n  // append Y axis label\n  g.append('g')\n    .attr('class', 'axis')\n    .call(d3.axisLeft(y).ticks(null, 's'))\n    .append('text')\n    .attr('x', 2)\n    .attr('y', () => {\n      const yTick = y.ticks().pop();\n      const yTickVal = yTick ? yTick : 0;\n      return y(yTickVal) + 0.5;\n    })\n    // .attr(\"dy\", \"0.32em\")\n\n      .attr('y', -margin.top / 2)\n      .attr('x', 0)\n      .attr('dy', '0.75em')\n    .attr('fill', '#000')\n    .attr('text-anchor', 'start')\n    .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n    .text(axisLabels && axisLabels.left ? axisLabels.left : '');\n};\n","import * as d3 from 'd3';\n\nexport interface RootDatum {\n  id: string;\n  label: string;\n  fill?: string;\n  children: (LeafDatum | RootDatum)[];\n}\n\nexport interface LeafDatum {\n  id: string;\n  label: string;\n  tooltipContent: string;\n  size: number;\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  size: Dimensions;\n  data: RootDatum;\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const { svg, size, data, tooltip, labelFont} = input;\n\n  const margin = {top: 0, right: 0, bottom: 0, left: 0};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  const treemap = d3.treemap()\n      .tile(d3.treemapResquarify)\n      .size([width, height])\n      .round(true)\n      .paddingInner(1);\n\n  const root = d3.hierarchy(data)\n      .eachBefore((d: any) => d.data.id = (d.parent ? d.parent.data.id + '.' : '') + d.data.id)\n      .sum((d: any) => d.size)\n      .sort((a, b) => {\n        if (b.height - a.height) {\n          return b.height - a.height;\n        } else if (b.value && a.value) {\n          return b.value - a.value;\n        } else {\n          return 0;\n        }\n       });\n\n  treemap(root);\n\n  const cell = svg.selectAll('g')\n    .data(root.leaves())\n    .enter().append('g')\n      .attr('transform', (d: any) => 'translate(' + d.x0 + ',' + d.y0 + ')')\n      .on('mousemove', (d: any) => {\n          tooltip\n            .style('position', 'fixed')\n            .style('left', d3.event.clientX + 'px')\n            .style('top', d3.event.clientY + 'px')\n            .style('display', 'flex')\n            .style('align-items', 'center')\n            .html(`<div style=\"\n              display: inline-block;\n              background-color: ${d.parent.data.fill};\n              width: 12px;\n              height: 12px;\n              margin-right: 12px;\n              flex-shrink: 0;\n            \"></div>` +\n                d.data.tooltipContent);\n        })\n      .on('mouseout', () => tooltip.style('display', 'none'));\n\n  cell.append('rect')\n      .attr('id', (d: any) => d.data.id)\n      .attr('finalwidth', (d: any) => d.x1 - d.x0)\n      .attr('finalheight', (d: any) => d.y1 - d.y0)\n      .attr('width', (d: any) => d.x1 - d.x0)\n      .attr('height', (d: any) => d.y1 - d.y0)\n      .attr('fill', (d: any) =>  d.parent.data.fill);\n\n  cell.append('clipPath')\n      .attr('id', (d: any) => 'clip-' + d.data.id)\n    .append('use')\n      .attr('xlink:href', (d: any) => '#' + d.data.id);\n\n  cell.append('text')\n      .attr('clip-path', (d: any) => 'url(#clip-' + d.data.id + ')')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .attr('font-size', '0.75rem')\n      .attr('x', 8)\n      .attr('y', 16)\n      .text((d: any) => d.data.label + ' - ' + d.data.size + '%')\n      .call(wrap);\n\n  cell\n      .style('transform', (d: any) => `translate(${d.x0}px, ${d.y0}px) scale(0)`)\n      .transition()\n      .duration(500)\n      .style('transform', (d: any) => `translate(${d.x0}px, ${d.y0}px) scale(1)`);\n\n  function wrap(text: any) {\n    text.each(function() {\n      // @ts-ignore\n      const t = d3.select(this as any);\n      // @ts-ignore\n      const rect = this.parentElement.querySelector('rect');\n      const rectWidth = rect.getAttribute('finalwidth');\n      const rectHeight = rect.getAttribute('finalheight');\n      const words = t.text().split(/\\s+/).reverse();\n      let word = words.pop();\n      let line: string[] = [];\n      let lineNumber = 0; //<-- 0!\n      const lineHeight = 1.2; // ems\n      const x = t.attr('x'); //<-- include the x!\n      const y = t.attr('y');\n      const dy = t.attr('dy') ? t.attr('dy') : 0; //<-- null check\n      let tspan = t.text(null).append('tspan').attr('x', x).attr('y', y).attr('dy', dy + 'em');\n      while (word !== undefined) {\n        line.push(word);\n        tspan.text(line.join(' '));\n        const node = tspan.node();\n        if (node && node.getComputedTextLength() > (rectWidth * 0.8)) {\n          line.pop();\n          tspan.text(line.join(' '));\n          line = [word];\n          // @ts-ignore\n          tspan = t.append('tspan').attr('x', x).attr('y', y).attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n        }\n        word = words.pop();\n      }\n      if (t.node().getBBox().width > rectWidth || t.node().getBBox().height > rectHeight * 0.8) {\n        t.attr('opacity', '0');\n      }\n    });\n  }\n};\n","import * as d3 from 'd3';\nimport {formatNumber} from './Utils';\n\nexport interface Datum {\n  [key: string]: number;\n}\n\nexport interface StackChartConfig {\n  primaryKey: string;\n  groups: {\n    key: string;\n    label: string;\n    fill?: string;\n  }[];\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  size: Dimensions;\n  config: StackChartConfig;\n  data: Datum[];\n  enableBrushZoom?: boolean;\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const { svg, size, data, config, tooltip, enableBrushZoom, labelFont } = input;\n\n  const margin = {top: 30, right: 30, bottom: 30, left: 30};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  // append the svg object to the body of the page\n\n  svg\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom);\n\n  const g = svg.append('g')\n              .attr('transform',\n                'translate(' + margin.left + ',' + margin.top + ')');\n\n  const keys = config.groups.map(({key}) => key);\n  const color = d3.scaleOrdinal()\n    .domain(keys)\n    .range(d3.schemeSet2);\n  const stackedData = d3.stack().order(d3.stackOrderDescending).keys(keys)(data);\n\n    // set the ranges\n  const xScale = d3.scaleLinear()\n            .range([0, width]);\n  const yScale = d3.scaleLinear()\n            .range([height, 0]);\n\n  const allYValues: number[] = [];\n  stackedData.forEach(datum => {\n    if (datum && datum.length) {\n      datum.forEach(value => {\n        allYValues.push(value[1]);\n      });\n    }\n  });\n  const allXValues: number[] = data.map(d => d[config.primaryKey]);\n\n  const rawMinY = d3.min(allYValues);\n  const rawMaxY = d3.max(allYValues);\n  const rawMinX = d3.min(allXValues);\n  const rawMaxX = d3.max(allXValues);\n\n  const minY = rawMinY ? rawMinY : 0;\n  const maxY = rawMaxY ? rawMaxY : 0;\n  const minX = rawMinX ? rawMinX : 0;\n  const maxX = rawMaxX ? rawMaxX : 0;\n\n  // Scale the range of the data in the domains\n  xScale.domain([minX, maxX]);\n  yScale.domain([minY, maxY]);\n\n  //////////\n  // BRUSHING AND CHART //\n  //////////\n\n  svg.append('defs').append('svg:clipPath')\n      .attr('id', 'clip')\n      .append('svg:rect')\n      .attr('width', width )\n      .attr('height', height )\n      .attr('x', 0)\n      .attr('y', 0);\n\n  // Add brushing\n  const brush = d3.brushX()                 // Add the brush feature using the d3.brush function\n      .extent( [ [0,0], [width,height] ] ) // initialise the brush area: start at 0,0 and finishes at width,height: it means I select the whole graph area\n      .on('end', updateChart); // Each time the brush selection changes, trigger the 'updateChart' function\n\n  // Create the scatter variable: where both the circles and the brush take place\n\n  const areaChart = g.append('g')\n    .attr('clip-path', 'url(#clip)');\n\n  // Area generator\n  const area = d3.area()\n    .x((d: any) => xScale(d.data[config.primaryKey]))\n    .y0((d) => yScale(d[0]))\n    .y1((d) => yScale(d[1]));\n\n  // Show the areas\n  areaChart\n    .selectAll('mylayers')\n    .data(stackedData)\n    .enter()\n    .append('path')\n      .attr('class', function(d) { return 'myArea ' + d.key; })\n      .style('fill', d => {\n        const groupConfig = config.groups.find(group => group.key === d.key);\n        if (groupConfig && groupConfig.fill) {\n          return groupConfig.fill;\n        } else {\n          return color(d.key) as string;\n        }\n      })\n      .attr('d', area as any)\n      .on('mousemove', d => {\n          const groupConfig = config.groups.find(group => group.key === d.key);\n          if (groupConfig) {\n            const fill = groupConfig.fill ? groupConfig.fill : color(d.key) as string;\n            tooltip\n              .style('position', 'fixed')\n              .style('left', d3.event.clientX + 'px')\n              .style('top', d3.event.clientY + 'px')\n              .style('display', 'flex')\n              .style('align-items', 'center')\n              .html(`<div style=\"\n                display: inline-block;\n                background-color: ${fill};\n                width: 12px;\n                height: 12px;\n                margin-right: 12px;\n                flex-shrink: 0;\n              \"></div>` + groupConfig.label);\n          }\n        })\n      .on('mouseout', () => tooltip.style('display', 'none'));\n\n  if (enableBrushZoom) {\n    // Add the brushing\n    areaChart\n      .append('g')\n        .attr('class', 'brush')\n        .call(brush);\n  }\n\n  const xAxis = g.append('g')\n    .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n    .attr('transform', 'translate(0,' + height + ')')\n    .call(d3.axisBottom(xScale).ticks(5).tickFormat(y => y.toString()));\n  g.append('g')\n    .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n    .call(d3.axisLeft(yScale).tickFormat(formatNumber));\n\n  let idleTimeout: number | null;\n  function idled() { idleTimeout = null; }\n\n  // A function that update the chart for given boundaries\n  function updateChart() {\n\n    const extent = d3.event.selection;\n\n    // If no selection, back to initial coordinate. Otherwise, update X axis domain\n    if(!extent){\n      if (!idleTimeout) return idleTimeout = setTimeout(idled, 350); // This allows to wait a little bit\n      xScale.domain([minX, maxX]);\n    }else{\n      xScale.domain([ xScale.invert(extent[0]), xScale.invert(extent[1]) ]);\n      areaChart.select('.brush').call(brush.move, null); // This remove the grey brush area as soon as the selection has been done\n    }\n\n    // Update axis and area position\n    xAxis.transition().duration(1000).call(d3.axisBottom(xScale).ticks(5).tickFormat(y => y.toString()));\n    areaChart\n      .selectAll('path')\n      .transition().duration(1000)\n      .attr('d', area);\n\n    return undefined;\n  }\n\n};\n","import * as d3 from 'd3';\nimport {adaptLabelFontSize} from './Utils';\n\nexport interface Datum {\n  name: string;\n  label: string;\n  value: number;\n  fill: string;\n  tooltipContent?: string;\n}\n\ninterface ParentDatum {\n  id: string;\n}\n\ninterface SrcDatum extends ParentDatum {\n  name: string;\n  value: number;\n  parentId: string;\n}\n\ntype SrcData = (SrcDatum | ParentDatum)[];\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  size: Dimensions;\n  data: Datum[];\n  hideLabels?: boolean;\n  circleSpacing?: number;\n  max?: number;\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const {\n    svg, size, data, tooltip, hideLabels,\n    circleSpacing, max, labelFont,\n  } = input;\n\n\n  const allValues: number[] = [];\n\n  const srcData: SrcData = data.map(d => {\n    allValues.push(d.value);\n    return {\n      id: d.label, size: d.value, parentId: 'global', ...d,\n    };\n  });\n  srcData.unshift({id: 'global'});\n\n  const margin = {top: 10, right: 10, bottom: 10, left: 10};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  svg.attr('width', width)\n     .attr('height', height);\n\n  const g = svg.append('g')\n            .attr('class', 'main-group');\n\n\n  let layout: d3.PackLayout<any>;\n  if (max) {\n    const sizeScale = d3.scaleSqrt().range([0, max]);\n    layout = d3.pack()\n              .radius((d: any) => sizeScale(d.value))\n              .size([width, height])\n              .padding(circleSpacing !== undefined ? circleSpacing : 6);\n  } else {\n    layout = d3.pack()\n              .size([width, height])\n              .padding(circleSpacing !== undefined ? circleSpacing : 6);\n  }\n\n  const stratData = d3.stratify()(srcData);\n  const root = d3.hierarchy(stratData)\n      .sum(function(d: any) { return d.data.size; })\n      .sort(function(a: any, b: any) { return b.value - a.value; });\n  const nodes = root.descendants();\n\n  layout(root);\n\n  g.selectAll('circle')\n    .data(nodes)\n    .enter()\n    .filter((d) => d.parent !== null )\n    .append('circle')\n    .attr('cx', (d: any) => d.x)\n    .attr('cy', (d: any) => d.y)\n    .attr('r', (d: any) => d.r)\n    .style('fill', (d: any) => d.data.data.fill)\n    .on('mousemove', (d: any) => {\n        const content = d.data.data.tooltipContent\n          ? d.data.data.tooltipContent\n          : `<strong>${d.data.data.name}</strong>: ${d.data.data.value}`;\n        tooltip\n          .style('position', 'fixed')\n          .style('left', d3.event.clientX + 'px')\n          .style('top', d3.event.clientY + 'px')\n          .style('display', 'flex')\n          .style('align-items', 'center')\n          .html(`<div style=\"\n            display: inline-block;\n            width: 12px;\n            height: 12px;\n            margin-right: 12px;\n            background-color: ${d.data.data.fill};\n            flex-shrink: 0;\n          \"></div>${content}\n          `);\n      })\n    .on('mouseout', () => tooltip.style('display', 'none'));\n\n  if (!hideLabels) {\n    g.selectAll('text')\n      .data(nodes)\n      .enter()\n      .filter((d) => d.parent !== null )\n      .append('text')\n      .attr('x', (d: any) => d.x)\n      .attr('y', (d: any) => d.y)\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .text(d => {\n        if (d.data.id) {\n          return d.data.id;\n        } else {\n          return '';\n        }\n      })\n      .style('fill', '#fff')\n      .style('font-size', adaptLabelFontSize)\n      .attr('text-anchor', 'middle')\n      .style('transform', (d: any) => {\n        const adjust = parseInt(d.r, 10) * 0.15;\n        return 'translate(0px, ' + adjust + 'px)';\n      })\n      .style('pointer-events', 'none');\n  }\n\n  g.style('transform', () => max !== undefined ? 'scale(' + max / 100 + ')' : null)\n   .style('transform-origin', 'center');\n};\n","import * as d3 from 'd3';\n\nexport interface Datum {\n  category: string;\n  label: string;\n  value: number;\n  plotPoint: boolean;\n  primaryPoint: boolean;\n  fill?: string;\n}\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[];\n  tooltip: d3.Selection<any, unknown, null, undefined>;\n  size: Dimensions;\n  labelFont?: string;\n}\n\nexport default (input: Input) => {\n  const { svg, data, size, labelFont, tooltip} = input;\n\n  const margin = {top: 30, right: 20, bottom: 30, left: 40};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n\n  svg\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom);\n\nconst group = svg.append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n// Compute quartiles, median, inter quantile range min and max --> these info are then used to draw the box.\nconst sumstat = d3.nest() // nest function allows to group the calculation per level of a factor\n  .key((d: Datum) => d.category)\n  .rollup((d: Datum[]) => {\n    const q1 = d3.quantile(d.map(g => g.value).sort(d3.ascending),.25) as number;\n    const median = d3.quantile(d.map(g => g.value).sort(d3.ascending),.5) as number;\n    const q3 = d3.quantile(d.map(g => g.value).sort(d3.ascending),.75) as number;\n    const interQuantileRange = q3 - q1;\n    const allValues = d.map(({value}) => value);\n    const [min, max] = d3.extent(allValues);\n    return({q1, median, q3, interQuantileRange, min, max}) as any;\n  })\n  .entries(data);\n\n  const allCategories: string[] = [];\n  const allMinMaxValues: number[] = [];\n  sumstat.forEach(({key, value}) => {\n    allCategories.push(key);\n    allMinMaxValues.push((value as any as {min: number}).min);\n    allMinMaxValues.push((value as any as {max: number}).max);\n  });\n\n  // Show the X scale\n  const x = d3.scaleBand()\n    .range([ 0, width ])\n    .domain(allCategories)\n    .paddingInner(1)\n    .paddingOuter(.5);\n\n  group.append('g')\n    .attr('transform', 'translate(0,' + height + ')')\n    .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n    .call(d3.axisBottom(x));\n\n  const [minY, maxY] = d3.extent(allMinMaxValues) as [number, number];\n\n  // Show the Y scale\n  const y = d3.scaleLinear()\n    .domain([minY * 1.15,maxY * 1.15])\n    .range([height, 0]);\n\n  group.append('g')\n    .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n    .call(d3.axisLeft(y));\n\n  // Show the main vertical line\n  group\n    .selectAll('vertLines')\n    .data(sumstat)\n    .enter()\n    .append('line')\n      .attr('x1', d => x(d.key) as number)\n      .attr('x2', d => x(d.key) as number)\n      .attr('y1', d => y((d.value as any as {min: number}).min) as number)\n      .attr('y2', d => y((d.value as any as {max: number}).max) as number)\n      .attr('stroke', '#555')\n      .style('width', 40);\n\n  // rectangle for the main box\n  const boxWidth = width / allCategories.length * 0.7;\n  group\n    .selectAll('boxes')\n    .data(sumstat)\n    .enter()\n    .append('rect')\n        .attr('x', d => (x(d.key) as number) - boxWidth / 2)\n        .attr('y', d => y((d.value as any as {q3: number}).q3) as number)\n        .attr('height', d => (y((d.value as any as {q1: number}).q1) - y((d.value as any as {q3: number}).q3)))\n        .attr('width', boxWidth)\n        .attr('stroke', '#555')\n        .style('fill', '#EC7063')\n        .style('opacity', '0.3');\n\n  // Show the median\n  group\n    .selectAll('medianLines')\n    .data(sumstat)\n    .enter()\n    .append('line')\n      .attr('x1', d => (x(d.key) as number) - boxWidth / 2)\n      .attr('x2', d => (x(d.key) as number) + boxWidth / 2)\n      .attr('y1', d => y((d.value as any as {median: number}).median))\n      .attr('y2', d => y((d.value as any as {median: number}).median))\n      .style('width', 80)\n      .style('stroke', '#555');\n\n  // Show the max line\n  group\n    .selectAll('maxLines')\n    .data(sumstat)\n    .enter()\n    .append('line')\n      .attr('x1', d => (x(d.key) as number) - boxWidth / 2)\n      .attr('x2', d => (x(d.key) as number) + boxWidth / 2)\n      .attr('y1', d => y((d.value as any as {max: number}).max))\n      .attr('y2', d => y((d.value as any as {max: number}).max))\n      .style('width', 80)\n      .style('stroke', '#555');\n  // Show the min line\n  group\n    .selectAll('minLines')\n    .data(sumstat)\n    .enter()\n    .append('line')\n      .attr('x1', d => (x(d.key) as number) - boxWidth / 2)\n      .attr('x2', d => (x(d.key) as number) + boxWidth / 2)\n      .attr('y1', d => y((d.value as any as {min: number}).min))\n      .attr('y2', d => y((d.value as any as {min: number}).min))\n      .style('width', 80)\n      .style('stroke', '#555');\n\n  group\n    .selectAll('indPoints')\n    .data(data.filter(d => d.plotPoint && !d.primaryPoint))\n    .enter()\n    .append('circle')\n      .attr('cx', d => x(d.category) as number)\n      .attr('cy', d => y(d.value) as number)\n      .attr('r', 4)\n      .style('fill', d => d.fill ? d.fill : '#2874A6')\n      .on('mousemove', d => {\n          tooltip\n            .style('position', 'fixed')\n            .style('left', d3.event.clientX + 'px')\n            .style('top', d3.event.clientY + 'px')\n            .style('display', 'flex')\n            .style('align-items', 'center')\n            .html(`<strong>${d.label}, ${d.category}</strong>: ${parseFloat(d.value.toFixed(2))}`);\n      })\n      .on('mouseout', () => tooltip.style('display', 'none'));\n  group\n    .selectAll('primaryPoints')\n    .data(data.filter(d => d.plotPoint && d.primaryPoint))\n    .enter()\n    .append('circle')\n      .attr('cx', d => x(d.category) as number)\n      .attr('cy', d => y(d.value) as number)\n      .attr('r', 7)\n      .style('fill', d => d.fill ? d.fill : 'red')\n      .on('mousemove', d => {\n          tooltip\n            .style('position', 'fixed')\n            .style('left', d3.event.clientX + 'px')\n            .style('top', d3.event.clientY + 'px')\n            .style('display', 'flex')\n            .style('align-items', 'center')\n            .html(`<strong>${d.label}, ${d.category}</strong>: ${d.value}`);\n      })\n      .on('mouseout', () => tooltip.style('display', 'none'));\n\n};\n","import React from 'react';\nimport { Content } from '../styling/Grid';\nimport {\n  TwoColumnSection,\n  SectionHeader,\n  Code,\n} from '../styling/styleUtils';\nimport DataViz, {\n  VizType,\n  LineChartDatum,\n  LabelPosition,\n  LabelAnchor,\n} from 'react-d3-fast-charts';\n\nconst data: LineChartDatum[] = [\n  {\n    coords: [\n      {x: 2005, y: 5},\n      {x: 2006, y: 6},\n      {x: 2007, y: 8},\n      {x: 2008, y: 6},\n      {x: 2009, y: 5},\n      {x: 2010, y: 9},\n      {x: 2011, y: 8},\n      {x: 2012, y: 7},\n      {x: 2013, y: 6},\n      {x: 2014, y: 5},\n      {x: 2015, y: 5},\n      {x: 2016, y: 8},\n    ],\n    animationDuration: 0,\n    label: 'Green',\n    color: 'forestgreen',\n    labelColor: 'purple',\n    width: 3,\n    labelPosition: LabelPosition.Top,\n    labelAnchor: LabelAnchor.Middle,\n  }, {\n    coords: [\n      {x: 2005, y: 2},\n      {x: 2006, y: 4},\n      {x: 2007, y: 5},\n      {x: 2008, y: 3},\n      {x: 2009, y: 6},\n      {x: 2010, y: 5},\n      {x: 2011, y: 4},\n      {x: 2012, y: 3},\n      {x: 2013, y: 3},\n      {x: 2014, y: 4},\n      {x: 2015, y: 6},\n      {x: 2016, y: 7},\n    ],\n    animationDuration: 1000,\n    label: 'Salmon',\n    color: 'darksalmon',\n    labelColor: 'purple',\n    width: 3,\n    labelPosition: LabelPosition.Center,\n    labelAnchor: LabelAnchor.Left,\n  }\n];\n\nconst codeAsString = `<DataViz\n  id={'sandbox-line-chart'}\n  vizType={VizType.LineChart}\n  data={data}\n  axisLabels={{left: 'Value', bottom: 'Year'}}\n  axisMinMax={{\n    minY: -10,\n    maxY: 20,\n    maxX: 2021,\n  }}\n/>\n`;\n\nconst dataAsString = `\n\nconst data: LineChartDatum[] = [\n  {\n    coords: [\n      {x: 2005, y: 5},\n      {x: 2006, y: 6},\n      {x: 2007, y: 8},\n      {x: 2008, y: 6},\n      {x: 2009, y: 5},\n      {x: 2010, y: 9},\n      {x: 2011, y: 8},\n      {x: 2012, y: 7},\n      {x: 2013, y: 6},\n      {x: 2014, y: 5},\n      {x: 2015, y: 5},\n      {x: 2016, y: 8},\n    ],\n    animationDuration: 0,\n    label: 'Green',\n    color: 'forestgreen',\n    labelColor: 'purple',\n    width: 3,\n    labelPosition: LabelPosition.Top,\n    labelAnchor: LabelAnchor.Middle,\n  }, {\n    coords: [\n      {x: 2005, y: 2},\n      {x: 2006, y: 4},\n      {x: 2007, y: 5},\n      {x: 2008, y: 3},\n      {x: 2009, y: 6},\n      {x: 2010, y: 5},\n      {x: 2011, y: 4},\n      {x: 2012, y: 3},\n      {x: 2013, y: 3},\n      {x: 2014, y: 4},\n      {x: 2015, y: 6},\n      {x: 2016, y: 7},\n    ],\n    animationDuration: 1000,\n    label: 'Salmon',\n    color: 'darksalmon',\n    labelColor: 'purple',\n    width: 3,\n    labelPosition: LabelPosition.Center,\n    labelAnchor: LabelAnchor.Left,\n  }\n];\n\n`;\n\nconst LineChart = () => {\n  return (\n    <Content>\n      <TwoColumnSection>\n        <SectionHeader>Line Chart</SectionHeader>\n        <DataViz\n          id={'sandbox-line-chart'}\n          vizType={VizType.LineChart}\n          data={data}\n          axisLabels={{left: 'Value', bottom: 'Year'}}\n          axisMinMax={{\n            minY: -10,\n            maxY: 20,\n            maxX: 2021,\n          }}\n        />\n        <div>\n          <Code>\n            {codeAsString}\n          </Code>\n        </div>\n      </TwoColumnSection>\n      <div>\n        <Code>\n          {dataAsString}\n        </Code>\n      </div>\n    </Content>\n  );\n};\n\nexport default LineChart;\n","import React from 'react'\nimport GlobalStyles from './styling/GlobalStyles';\nimport { Root } from './styling/Grid';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport Landing from './pages';\nimport LineChart from './pages/LineChart';\n\nconst App = () => {\n  return (\n    <Root>\n      <GlobalStyles />\n        <Router>\n          <Switch>\n            <Route exact path={'/line-chart'} component={LineChart} />\n            <Route component={Landing} />\n          </Switch>\n        </Router>\n    </Root>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}